{"version":3,"sources":["webpack:///build/idf.min.js","webpack:///webpack/bootstrap 5afcb201a5595e84becd","webpack:///./src/App.es6","webpack:///./~/uikit/dist/js/uikit.js","webpack:///./~/timers-browserify/main.js","webpack:///./~/setimmediate/setImmediate.js","webpack:///./~/process/browser.js"],"names":["window","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","_uikit","idf","selector","this","document","querySelector","idf_form_object","title","formElements","value","content","arguments","undefined","innerHTML","_this","getByKey","currentKey","indexOf","substring","editQuestion","event","forEach","element","card","getElementById","children","classList","remove","add","formTitle","addEventListener","makeTitleEditable","removeEventListener","questionCard","formInput","formTitlePreview","idf_preview_btn","container","loader","createElement","parentElement","appendChild","preview_form","previewForm","formDiv","currentPreviewOptions","option","index","optionLbl","style","cssText","setTimeout","removeChild","bach_btn","backBtn","idf_add_btn","div_form","formElement","Math","random","toString","replace","substr","label","controlType","type","required","order","placeholder","push","div_element","shortTextInput","titlePreview","createdCard","formCard","requiredButton","deleteFormElementBtn","splice","currentDiv","parentNode","selectedQuestionType","selectedType","selectedQuestionDOM","hiddenElement","elementID","editPreviewOptions","innetText","previewOptions","div","insertBefore","span","display","marginBottom","marginTop","paddingLeft","options","newOption","childNodes","childOptionsContent","currentOptionDiv","rawOption","rawOptionField","removeOption","radioBtn_title","radioBtn_title_preview","radioBtn_addOptions","radioBtn_option","radioBtn_remove","checkbox_title","checkbox_title_preview","checkbox_addOptions","checkbox_option","checkbox_remove","dropDown_title","dropDown_title_preview","dropdown_addOptions","dropdown_btn_option","dropdownBtn_remove","console","log","setImmediate","global","factory","bind","fn","context","a","l","apply","hasOwn","hasOwnProperty","hyphenate","str","hyphenateRe","toLowerCase","camelize","camelizeRE","toUpper","_","toUpperCase","ucfirst","charAt","slice","startsWith","search","startsWithFn","endsWith","endsWithFn","includes","isString","includesStr","includesArray","isFunction","isObject","isPlainObject","getPrototypeOf","isWindow","isDocument","nodeType","isJQuery","jquery","isNode","Node","isNodeCollection","NodeList","HTMLCollection","isBoolean","isNumber","isNumeric","isNaN","parseFloat","isUndefined","toBoolean","toNumber","number","Number","toFloat","toNode","isArray","toNodes","arrayProto","map","filter","Boolean","toArray","toList","split","trim","toMs","time","swap","b","RegExp","match","each","cb","sortBy","collection","prop","sort","clamp","min","max","noop","intersectRect","r1","r2","left","right","top","bottom","pointInRect","point","rect","y","x","attr","name","getAttribute","removeAttr","setAttribute","hasAttr","some","hasAttribute","removeAttribute","filterAttr","attribute","pattern","replacement","data","attrs","PromiseFn","executor","state","PENDING","deferred","promise","resolve","r","reject","e","getImage","src","Promise","img","Image","onerror","onload","query","find","isContextSelector","doc","queryAll","nodes","findAll","_query","queryFn","contextSanitizeRe","removes","ctx","selectors","closest","join","Date","now","escape","contextSelectorRe","matches","matchesFn","closestFn","parents","elements","parent","css","escapeFn","isVoidElement","voidElements","tagName","isVisible","offsetHeight","getBoundingClientRect","height","isInput","selInput","within","contains","on","args","len","ref","getArgs","listener","useCapture","toEventTarget","delegate","detail","off","once","condition","result","trigger","toEventTargets","reduce","notCanceled","dispatchEvent","createEvent","bubbles","cancelable","initCustomEvent","this$1","current","reverse","concat","isEventTarget","EventTarget","preventClick","timer","preventDefault","stopImmediatePropagation","clearTimeout","ajax","url","env","assign","method","headers","xhr","XMLHttpRequest","beforeSend","responseType","open","header","setRequestHeader","status","Error","statusText","send","isReady","readyState","docEl","doScroll","ready","handle","unbind1","unbind2","win","getIndex","finite","empty","html","append","hasChildNodes","prepend","insertNodes","firstChild","before","after","nextSibling","fragment","wrapAll","structure","wrapInner","unwrap","self","singleTagRE","exec","fragmentRE","test","insertAdjacentHTML","textContent","addClass","removeClass","removeClasses","cls","replaceClass","hasClass","supports","ClassList","toggleClass","getArgs$1","force","pop","Force","toggle","Multiple","arg","property","propName","getStyle","cssNumber","removeProperty","styles","getStyles","pseudoElt","ownerDocument","defaultView","getComputedStyle","getCssVar","vars","JSON","parse","ret","cssProps","vendorPropName","prefixedName","cssPrefixes","transition","duration","timing","all","transition-property","transition-duration","transition-timing-function","keys","animate","animation","origin","out","arguments$1","reset","animationPrefix","clsCancelAnimation","requestAnimationFrame","then","hasReset","$","isHtml","$$","positionAt","elAttach","targetAttach","elOffset","targetOffset","flip","boundary","getPos","flipped","dim","getDimensions","targetDim","position","moveTo","getOffsets","width","window$1","dirs","elemOffset","newVal","align","dir","alignFlip","el","centerOffset","centerTargetOffset","offset","coordinates","currentOffset","pos","pageYOffset","pageXOffset","innerHeight","innerWidth","offsetParent","parentOffset","docEl$1","propName$$1","dimension","documentElement","scrollHeight","getContentSize","attach","factor","offsets","flipPosition","isInView","scrolledOver","document$1","elHeight","positionTop","vp","vh","diff","offsetTop","scheduleFlush","fastdom","scheduled","flush","runTasks","tasks","task","shift","remove$1","array","item","MouseTracker","slope","mergeOptions","child","mergeKey","strats","defaultStrat","mixins","key$1","post","cmd","contentWindow","postMessage","stringify","listen","data$$1","swipeDirection","x1","x2","y1","y2","abs","cancelAll","clickTimeout","swipeTimeout","tapTimeout","touch","isTouch","touching","pointerType","getPos$1","touches","changedTouches","pageX","pageY","getType","componentAPI","UIkit","DATA","components","component","extend","init","cmp","getComponent","$reset","argsArray","Array","functional","_initialized","read","getComponents","connect","node","_callConnected","attributes","name$1","getComponentName","disconnect","_callDisconnected","boot","body","Observer","mutations","applyMutation","observe","childList","subtree","characterData","mutation","update","applyChildList","applyAttribute","attributeName","$destroy","addedNodes","removedNodes","i$1","firstElementChild","next","nextElementSibling","globalAPI","_isReady","_callUpdate","use","plugin","installed","mixin","Super","Sub","_init","create","constructor","instances","get","set","hooksAPI","_callHook","hook","handlers","$options","handler","_connected","_uid","_data","_initEvents","_initObserver","_callReady","_observer","_unbindEvents","_resetComputeds","updates","_frames","reads","writes","write","events","clear","stateAPI","getProps","opts","coerce","parseOptions","prop$1","registerComputed","_computeds","$props","$el","registerEvent","capture","selfFilter","_events","currentTarget","notIn","every","arr","toMedia","uid","$name","prefix","_initData","_initMethods","_initComputeds","$mount","defaults","methods","computed","_initProps","exclude","unbind","attributeFilter","instanceAPI","$emit","$update","removeEl","registerEvents","defaultPrevented","active","bgClose","panel","hide","keyCode","escClose","deregisterEvents","class","Class","Container","modal","Modal","Position","togglable","Togglable","Accordion","targets","String","collapsible","multiple","clsOpen","items","connected","_toggleImmediate","isItem","_wrapper","toggleElement","Alert","close","selClose","hideProps","opacity","Core","scroll","started","scrollY","overflowX","hasTouch","hoverSelector","Cover","video","automute","offsetWidth","Dimensions","cover","clientWidth","clientHeight","loadedmetadata","Drop","registered","prev","mode","boundaryAlign","delayShow","delayHide","clsDrop","hoverIdle","clsPos","tracker","previousElementSibling","updateAria","hash","isToggled","show","pointerEnter","pointerLeave","clearTimers","isActive","blur","cancel","Animation","inProgress","delay","tryShow","isDelaying","showTimer","isParentOf","hideTimer","isChildOf","toggleNow","movesTo","drop","alignTo","getAxis","getActive","Dropdown","FormCustom","input","files","selected","Gif","inview","Grid","margin","clsStack","stacks","HeightMatch","row","lastOffset","rows","heights","hidden","HeightViewport","expand","offsetBottom","minHeight","viewport","Icon","registerComponent","mixin$$1","icon","getIcon","icons","parsed","spinner","totop","marker","close-icon","closeIcon","close-large","closeLarge","navbar-toggle-icon","navbarToggleIcon","overlay-icon","overlayIcon","pagination-next","paginationNext","pagination-previous","paginationPrevious","search-icon","searchIcon","search-large","searchLarge","search-navbar","searchNavbar","slidenav-next","slidenavNext","slidenav-next-large","slidenavNextLarge","slidenav-previous","slidenavPrevious","slidenav-previous-large","slidenavPreviousLarge","svg","isRtl","getSvg","ratio","added","Leader","fill","media","clsWrapper","clsHide","attrFill","wrapper","disconnected","changed","floor","matchMedia","Margin","firstColumn","j","leftDim","unshift","Modal$1","clsPage","clsPanel","dialog","alert","message","labels","confirm","resolved","prompt","ok","Nav","accordion","Navbar","dropdown","dropbar","dropbarMode","dropbarAnchor","beforeConnect","transitionTo","newHeight","oldHeight","overflow","Transition","start","catch","finally","Offcanvas","overlay","clsContainer","clsFlip","clsContent","clsContentAnimation","clsSidebarAnimation","clsMode","clsOverlay","transitionElement","scrollbarWidth","scrollTop","scrollTo","scrollLeft","Responsive","contain","Scroll","ease","k","cos","PI","docHeight","winHeight","startY","step","currentY","click","Scrollspy","offsetLeft","repeat","inViewClass","els","elData","toggles","ScrollspyNav","links","last","Sticky","parseProp","propOffset","clsActive","clsInactive","clsFixed","clsBelow","selTarget","widthElement","showOnUp","location","elTop","outerHeight","topOffset","bottomOffset","inactive","visible","ref$1","disabled","in","Svg","parseSymbols","symbols","symbolRe","parts","cloneNode","dimensions","root","isEqualNode","lastElementChild","svgEl","svgs","decodeURIComponent","response","Switcher","swiping","attrItem","queued","connects","getSelection","list","hasPrev","Tab","switcher","Toggle","href","link","toggled","Video","autoplay","inView","player","Player","mute","pause","play","core","getTimeSpan","date","total","seconds","minutes","hours","days","util","units","unit","stop","timespan","digits","digit","setInterval","clearInterval","plugin$1","grid","translate","columns","scrolled","gridParallax","AnimationsPlugin","Animations","slide","transform","percent","translated","scale3d","TransitionerPlugin","Transitioner","easing","Deferred","linear","round","triggerUpdate","forward","getDistance","AutoplayMixin","pointerDown","autoplayInterval","pauseOnHover","startAutoplay","stopAutoplay","isHovering","interval","stack","DragMixin","hasTextNodesOnly","pointerMove","pointerUp","threshold","preventCatch","prevPos","slidesSelector","button","drag","_transitioner","dragging","prevIndex","unbindMove","move","passive","end","distance","slides","dis","nextIndex","_getDistance","edge","_translate","_show","dirChange","NavMixin","selNav","nav","navItemSelector","navItems","maxIndex","updateNav","getValidIndex","plugin$5","getDirection","slider","clsActivated","velocity","transitionOptions","speedUp","selList","queueIndex","_getTransitioner","transitioner","plugin$4","UIkit_util","slideshow","itemshow itemhide itemshown itemhidden","itemshow","beforeitemshow","itemshown","itemhidden","AnimationsPlugin$1","fade","scale","plugin$3","getIframe","preload","videoAutoplay","delayControls","template","created","caption","hideControls","getItem","loadItem","source","alt","setItem","setError","poster","videoWidth","videoHeight","setIframe","encodeURI","ref_response","showControls","controlsTimer","plugin$2","isEqualList","listA","listB","lightboxPanel","_destroy","plugin$6","containers","timeout","group","clsClose","clsMsg","immediate","removeFn","notification","closeAll","plugin$8","parseColor","color","n","getStep","steps","count","getValue","toFixed","parallax","properties","bgPos","isColor","isCssProp","covers","down","bgProps","bg","backgroundSize","_image","image","dimEl","naturalWidth","naturalHeight","backgroundRepeat","bgPosFloat","getCss","ref$2","parseInt","plugin$7","SliderReactive","TransitionerPlugin$1","center","from","getLeft","to","updateTranslates","getItemIn","getWidth","actives","getActives","slideLeft","getElLeft","getMax","getMaxWidth","ParallaxPlugin","isIn","getCurrent","ref_detail","plugin$9","sets","avgWidth","leftCenter","slideWidth","slideRight","reorder","slideIndex","AnimationsPlugin$2","zIndex","pull","plugin$10","maxHeight","hgt","plugin$11","getSortable","isPredecessor","clsItem","clsPlaceholder","clsDrag","clsDragState","clsBase","clsNoDrag","clsEmpty","clsCustom","scrollX","touched","outerHTML","boxSizing","elementFromPoint","sortable","previous","insert","classes","action","pointerEvents","positions","plugin$12","_hasTitle","aria-expanded","_unbind","tooltip","activeElement","plugin$13","path","chunk","size","chunks","stopPropagation","allow","clsDragover","concurrent","maxSize","mime","msgInvalidMime","msgInvalidName","msgInvalidSize","params","abort","beforeAll","complete","completeAll","error","fail","load","loadEnd","loadStart","progress","change","upload","transfer","dataTransfer","dragenter","dragover","dragleave","FormData","file","strPrototype","lastIndexOf","includesFn","aProp","maxDimensions","RESOLVED","REJECTED","async","iterable","resolver","race","called","notify","reason","onResolved","onRejected","MutationObserver","hasTouchEvents","hasPointerEvents","PointerEvent","DocumentTouch","navigator","maxTouchPoints","elProto","Element","webkitMatchesSelector","msMatchesSelector","ancestor","CSS","area","base","br","col","embed","hr","keygen","menuitem","meta","param","track","wbr","animation-iteration-count","column-count","fill-opacity","flex-grow","flex-shrink","font-weight","line-height","orphans","widows","z-index","zoom","ticking","position$$1","points","beforeDisconnect","destroy","parentVal","childVal","isVideo","isYoutube","isVimeo","isHTML5","isIFrame","enableApi","poller","youtube","vimeo","player_id","func","muted","clicked","freeze","UIkit$2","initProps","paddingTop","paddingBottom","hasAnimation","hasTransition","_toggleElement","untoggled","_toggleHeight","_toggleAnimation","_toggle","focus","inner","currentHeight","endHeight","transitionDuration","found","offset$$1","axis","version","Timeout","clearFn","_id","_clearFn","Function","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","_onTimeout","clearImmediate","process","callback","tasksByHandle","nextHandle","registerImmediate","run","runIfPresent","currentlyRunningATask","installNextTickImplementation","nextTick","canUsePostMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","installPostMessageImplementation","messagePrefix","onGlobalMessage","attachEvent","installMessageChannelImplementation","channel","MessageChannel","port1","port2","installReadyStateChangeImplementation","script","onreadystatechange","installSetTimeoutImplementation","attachTo","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queue","drainQueue","Item","browser","argv","versions","addListener","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask"],"mappings":"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ACAG,eACA+C,KACAE,MACAC,cACA0B,UACAd,YACA/J,UACAkK,SACA8B,gBACAC,YACAC,gBACA1I,WACAI,SACAtS,SACA2S,YACAE,SACAC,QACAG,WACAF,UACAK,UACAC,SACAzU,UACA4U,WACAE,aACAC,UACAJ,YACAb,OACA9F,OACAwF,SACAwc,SACA/O,YACAoI,YACA+R,eACAU,eACAC,aACA/Q,gBACAC,gBACA3d,WACAuI,YACA1F,MACAU,OACAC,QACAG,WACAK,eACAJ,kBACAc,gBACAyK,WACAjN,iBACAG,aACAK,YACAD,WACApG,UACAsG,UACAjK,OACAM,SACAE,YACAI,WACAK,UACAG,aACAG,WACAE,WACA8B,WACA1B,aACAC,WACAC,gBACAE,WACAC,aACAE,WACAE,SACAE,mBACAG,YACAjB,WACAkB,WACAC,YACAG,cACAC,YACAC,WACAG,UACAC,SACAE,UACAM,SACAG,OACAE,OACAqI,UACAjI,OACAE,SACAI,QACAG,OACAC,gBACAO,cACAme,cACAxM,gBACAE,gBACAmb,UACAhrB,WACAqtB,YACAhtB,QACAI,WACAH,OACAK,UACAa,UACAN,UACAS,UACAL,SACAQ,OACAuH,aACAJ,YACAS,aACAV,YACAsI,WACAtF,OAAAyF,KA84BAivB,GAAA,SAAA9pC,GACA5F,KAAAqkB,MAAAze,GAGA8pC,IAAA9U,QACA8U,GAAAxhC,KAAA,YACAwhC,GAAApoB,OAAA,MACAooB,GAAA9pC,WACA8pC,GAAAlrB,aACAkrB,GAAA9+B,YAEAgT,GAAA8rB,IACA/qB,GAAA+qB,IACAzpB,GAAAypB,IACAxnB,GAAAwnB,IACA3uB,GAAA2uB,GAEA,IAyPAlnB,IAgOAzC,GAm/DA0E,GA58EAzB,IAEA3H,KAAA,WACAtK,GAAA/W,KAAA0mB,IAAA1mB,KAAAqnB,SAKA4B,IAEAjqB,OACAkD,UAAAkJ,SAGAuc,UACAzlB,WAAA,GAGA2lB,UAEA3lB,UAAA,QAAAA,GAAA4P,GACA,GAAA5P,GAAA4P,EAAA5P,SAEA,OAAAA,MAAA,GAAAwtC,GAAAxtC,cAAAoY,GAAApY,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","file":"build/idf.min.js","sourcesContent":["window[\"idf\"] =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t\"use strict\";\n\t// import styles from '../style.css'\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _uikit = __webpack_require__(1);\n\t\n\tvar _uikit2 = _interopRequireDefault(_uikit);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar idf = function () {\n\t\tfunction idf(selector) {\n\t\t\t_classCallCheck(this, idf);\n\t\n\t\t\tthis.selector = document.querySelector(selector);\n\t\t\tthis.idf_form_object = {\n\t\t\t\ttitle: '',\n\t\t\t\tformElements: []\n\t\t\t};\n\t\t}\n\t\n\t\t_createClass(idf, [{\n\t\t\tkey: 'html',\n\t\t\tvalue: function html() {\n\t\t\t\tvar content = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\n\t\t\t\tif (content !== null) {\n\t\t\t\t\tthis.selector.innerHTML = content;\n\t\t\t\t}\n\t\t\t\treturn this.selector.innerHTML;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'init',\n\t\t\tvalue: function init() {\n\t\t\t\tvar _this = this;\n\t\n\t\t\t\tvar content = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\n\t\t\t\tif (content == null) {\n\t\n\t\t\t\t\t// splice id string\n\t\t\t\t\tvar _getByKey = function _getByKey(key) {\n\t\t\t\t\t\tvar currentKey = key;\n\t\t\t\t\t\tvar selector = currentKey.indexOf('_');\n\t\t\t\t\t\tcurrentKey = currentKey.substring(0, selector != -1 ? selector : currentKey.length);\n\t\t\t\t\t\treturn currentKey; // return element key which corresponds to the actual formElement\n\t\t\t\t\t};\n\t\n\t\t\t\t\t// Add form title field with floating button\n\t\t\t\t\tthis.selector.innerHTML = '\\n\\t\\t\\t\\t<div id=\"form-container\" class=\"uk-container\">\\n\\t\\t\\t\\t\\t<div uk-alert>\\n\\t\\t\\t\\t\\t\\tALERT: Select Question Field To Edit \\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\"uk-child-width-expand@s\" uk-grid style=\"margin-bottom: 20px;padding-bottom: 100px;\">\\n\\t\\t\\t\\t\\t\\t<div id=\"formElements\">\\n\\t\\t\\t\\t\\t\\t\\t<div id=\"form_title_parent\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div id=\"form_title\" class=\"uk-card uk-card-default uk-card-body inactive\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<form id=\"title-form\" class=\"uk-form-horizontal uk-margin-large\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-margin\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Form Name</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\"uk-input\" id=\"form-input\" type=\"text\" placeholder=\"Please Enter Form Name...\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-margin hidden\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h1 id=\"form-title-preview\">Untitled form</h1>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<a id=\"idf_add_btn\" class=\"float\" uk-tooltip=\"title: Add Question; pos: bottom\">\\n\\t\\t\\t\\t\\t\\t<i style=\"margin-top: 20px;font-size: 20px;\" class=\"material-icons\">&#xE145;</i>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t<a id=\"idf_submit_btn\" class=\"float-left\" uk-tooltip=\"title: Submit Form; pos: bottom\">\\n\\t\\t\\t\\t\\t\\t<i style=\"margin-top: 20px;font-size: 20px;\" class=\"material-icons\">&#xE876;</i>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t<a id=\"idf_preview_btn\" class=\"float-top-right\" uk-tooltip=\"title: Preview; pos: bottom\">\\n\\t\\t\\t\\t\\t\\t<i style=\"margin-top: 20px;font-size: 20px;\" class=\"material-icons\">&#xE8F4;</i>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t';\n\t\n\t\t\t\t\t// make each added question editable\n\t\t\t\t\tvar editQuestion = function editQuestion(event) {\n\t\t\t\t\t\t_this.idf_form_object['formElements'].forEach(function (element) {\n\t\t\t\t\t\t\tvar card = document.getElementById(element['key'] + '_parent');\n\t\t\t\t\t\t\tif (card.children[0].id == _getByKey(event.target.id)) {\n\t\t\t\t\t\t\t\tcard.children[0].classList.remove('inactive');\n\t\t\t\t\t\t\t\tcard.children[0].classList.add('active');\n\t\t\t\t\t\t\t\tformTitle.children[0].classList.remove('active');\n\t\t\t\t\t\t\t\tformTitle.children[0].classList.add('inactive');\n\t\t\t\t\t\t\t\tformTitle.addEventListener('click', _makeTitleEditable);\n\t\t\t\t\t\t\t\t// remove event handler to avoid multiple triggering of the function \n\t\t\t\t\t\t\t\tcard.removeEventListener('click', editQuestion);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcard.children[0].classList.remove('active');\n\t\t\t\t\t\t\t\tcard.children[0].classList.add('inactive');\n\t\t\t\t\t\t\t\tformTitle.children[0].classList.remove('active');\n\t\t\t\t\t\t\t\tformTitle.children[0].classList.add('inactive');\n\t\t\t\t\t\t\t\t// make all other questions editable\n\t\t\t\t\t\t\t\tcard.addEventListener('click', editQuestion);\n\t\t\t\t\t\t\t\tformTitle.addEventListener('click', _makeTitleEditable);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\n\t\t\t\t\t// make form title editable\n\t\t\t\t\tvar _makeTitleEditable = function _makeTitleEditable(event) {\n\t\t\t\t\t\tformTitle.children[0].classList.remove('inactive');\n\t\t\t\t\t\tformTitle.children[0].classList.add('active');\n\t\t\t\t\t\tformTitle.removeEventListener('click', _makeTitleEditable);\n\t\n\t\t\t\t\t\t_this.idf_form_object['formElements'].forEach(function (element) {\n\t\t\t\t\t\t\tvar questionCard = document.getElementById(element['key'] + '_parent');\n\t\t\t\t\t\t\tquestionCard.children[0].classList.remove('active');\n\t\t\t\t\t\t\tquestionCard.children[0].classList.add('inactive');\n\t\t\t\t\t\t\tquestionCard.addEventListener('click', editQuestion);\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\n\t\t\t\t\t// make form title editable\n\t\t\t\t\tvar formTitle = document.getElementById('form_title_parent');\n\t\t\t\t\tformTitle.addEventListener('click', _makeTitleEditable);\n\t\n\t\t\t\t\tvar formInput = document.getElementById('form-input');\n\t\t\t\t\tvar formTitlePreview = document.getElementById('form-title-preview');\n\t\t\t\t\tformInput.addEventListener('keyup', function (event) {\n\t\t\t\t\t\t_this.idf_form_object['title'] = event.target.value;\n\t\t\t\t\t\tformTitlePreview.innerHTML = event.target.value;\n\t\t\t\t\t});\n\t\n\t\t\t\t\t// Preview button event\n\t\t\t\t\tthis.idf_preview_btn = document.getElementById('idf_preview_btn');\n\t\t\t\t\tthis.idf_preview_btn.addEventListener('click', function (event) {\n\t\t\t\t\t\tvar container = document.getElementById('form-container');\n\t\t\t\t\t\tcontainer.classList.add('hidden');\n\t\n\t\t\t\t\t\tvar loader = document.createElement('div');\n\t\t\t\t\t\tloader.id = 'loader';\n\t\t\t\t\t\tloader.classList.add('wrapper', 'animated', 'fadeIn');\n\t\t\t\t\t\tloader.innerHTML = '\\n\\t\\t\\t\\t\\t<ul class=\"loader-list\">\\n\\t\\t\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\"loader center\"><span></span></div>\\n\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t';\n\t\t\t\t\t\tcontainer.parentElement.appendChild(loader);\n\t\n\t\t\t\t\t\tvar preview_form = document.createElement('div');\n\t\t\t\t\t\tpreview_form.id = 'form-preview';\n\t\t\t\t\t\tpreview_form.classList.add('uk-container');\n\t\n\t\t\t\t\t\t// Intial preview DOM element\n\t\t\t\t\t\tpreview_form.innerHTML = '\\n\\t\\t\\t\\t\\t<div uk-alert>\\n\\t\\t\\t\\t\\t\\tALERT: Form Preview \\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\"uk-child-width-expand@s\" uk-grid style=\"margin-bottom: 20px;padding-bottom: 100px;\">\\n\\t\\t\\t\\t\\t\\t<div class=\"uk-first-column\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-card uk-card-default uk-card-body\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<form id=\"previewForm\" class=\"uk-form-stacked\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<fieldset class=\"uk-fieldset\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<legend class=\"uk-legend\">' + (_this.idf_form_object['title'] == '' ? 'Untitled Form' : _this.idf_form_object['title']) + '</legend>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</fieldset>\\n\\t\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t';\n\t\t\t\t\t\tcontainer.parentElement.appendChild(preview_form);\n\t\n\t\t\t\t\t\t// change prevew DOM according to formElement controlType\n\t\t\t\t\t\tvar previewForm = document.getElementById('previewForm');\n\t\t\t\t\t\t_this.idf_form_object['formElements'].forEach(function (element) {\n\t\t\t\t\t\t\tvar formDiv = document.createElement('div');\n\t\t\t\t\t\t\tformDiv.classList.add('uk-margin');\n\t\t\t\t\t\t\tformDiv.id = element['key'];\n\t\t\t\t\t\t\tswitch (element['controlType']) {\n\t\t\t\t\t\t\t\t// Short text form \n\t\t\t\t\t\t\t\tcase 'short_text':\n\t\t\t\t\t\t\t\t\tformDiv.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"uk-form-label\" for=\"form-stacked-text\">' + (element['placeholder'] == '' ? 'Untitled Question' : element['placeholder']) + '</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\"uk-input\" id=\"form-stacked-text\" type=\"text\" placeholder=\"Some text...\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\t\t\tpreviewForm.appendChild(formDiv);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t// Paragraph form \n\t\t\t\t\t\t\t\tcase 'paragraph':\n\t\t\t\t\t\t\t\t\tformDiv.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"uk-form-label\" for=\"form-stacked-text\">' + (element['placeholder'] == '' ? 'Untitled Question' : element['placeholder']) + '</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea class=\"uk-textarea\" rows=\"5\" placeholder=\"Textarea\"></textarea>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\t\t\tpreviewForm.appendChild(formDiv);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t// Radio Button\n\t\t\t\t\t\t\t\tcase 'multiple_choice':\n\t\t\t\t\t\t\t\t\tformDiv.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-form-label\">' + (element['placeholder'] == '' ? 'Untitled Question' : element['placeholder']) + '</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div id=\"preview_radio_options\" class=\"uk-form-controls uk-form-controls-text\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\t\t\tpreviewForm.appendChild(formDiv);\n\t\t\t\t\t\t\t\t\tvar currentPreviewOptions = document.querySelector('#preview_radio_options');\n\t\t\t\t\t\t\t\t\telement['options'].forEach(function (option, index) {\n\t\t\t\t\t\t\t\t\t\tvar optionLbl = document.createElement('label');\n\t\t\t\t\t\t\t\t\t\toptionLbl.style.cssText = 'display:block';\n\t\t\t\t\t\t\t\t\t\toptionLbl.innerHTML = '<input style=\"margin-right:5px;\" class=\"uk-radio\" type=\"radio\" name=\"' + option['key'] + '\">' + (option['value'] == '' ? 'Radio ' + (index + 1) : option['value']) + '</label>';\n\t\t\t\t\t\t\t\t\t\tcurrentPreviewOptions.appendChild(optionLbl);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t// Checkbox\n\t\t\t\t\t\t\t\tcase 'checkbox':\n\t\t\t\t\t\t\t\t\tformDiv.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-form-label\">' + (element['placeholder'] == '' ? 'Untitled Question' : element['placeholder']) + '</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div id=\"preview_checkbox_options\" class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\t\t\tpreviewForm.appendChild(formDiv);\n\t\t\t\t\t\t\t\t\tvar currentPreviewOptions = document.querySelector('#preview_checkbox_options');\n\t\t\t\t\t\t\t\t\telement['options'].forEach(function (option, index) {\n\t\t\t\t\t\t\t\t\t\tvar optionLbl = document.createElement('label');\n\t\t\t\t\t\t\t\t\t\toptionLbl.style.cssText = 'display:block';\n\t\t\t\t\t\t\t\t\t\toptionLbl.innerHTML = '<input style=\"margin-right:5px;\" class=\"uk-checkbox\" type=\"checkbox\" name=\"' + option['key'] + '\">' + (option['value'] == '' ? 'Radio ' + (index + 1) : option['value']) + '</label>';\n\t\t\t\t\t\t\t\t\t\tcurrentPreviewOptions.appendChild(optionLbl);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t// Dropdown\n\t\t\t\t\t\t\t\tcase 'dropdown':\n\t\t\t\t\t\t\t\t\tformDiv.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"uk-form-label\" for=\"form-horizontal-select\">' + (element['placeholder'] == '' ? 'Untitled Question' : element['placeholder']) + '</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\"preview_select_options\" class=\"uk-select\" id=\"form-horizontal-select\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\t\t\tpreviewForm.appendChild(formDiv);\n\t\t\t\t\t\t\t\t\tvar currentPreviewOptions = document.querySelector('#preview_select_options');\n\t\t\t\t\t\t\t\t\telement['options'].forEach(function (option, index) {\n\t\t\t\t\t\t\t\t\t\tvar optionLbl = document.createElement('option');\n\t\t\t\t\t\t\t\t\t\toptionLbl.innerHTML = '' + (option['value'] == '' ? 'Option ' + (index + 1) : option['value']);\n\t\t\t\t\t\t\t\t\t\tcurrentPreviewOptions.appendChild(optionLbl);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t// Date and time\n\t\t\t\t\t\t\t\tcase 'date':\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\t// remover loader content from DOM\n\t\t\t\t\t\tloader.classList.remove('fadeIn');\n\t\t\t\t\t\tloader.classList.add('fadeOut');\n\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\tcontainer.parentElement.removeChild(loader);\n\t\t\t\t\t\t}, 1000);\n\t\n\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\tvar bach_btn = document.createElement('div');\n\t\t\t\t\t\t\tbach_btn.innerHTML = '\\n\\t\\t\\t\\t\\t\\t<a id=\"idf_back_btn\" class=\"float-top-left\" uk-tooltip=\"title: Back; pos: right\">\\n\\t\\t\\t\\t\\t\\t\\t<i style=\"margin-top: 20px;font-size: 20px;\" class=\"material-icons\">&#xE5C4;</i>\\n\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\tpreview_form.appendChild(bach_btn);\n\t\t\t\t\t\t\t// change back to Edit view\n\t\t\t\t\t\t\tvar backBtn = document.getElementById('idf_back_btn');\n\t\t\t\t\t\t\tbackBtn.addEventListener('click', function (event) {\n\t\t\t\t\t\t\t\tvar container = document.getElementById('form-container');\n\t\t\t\t\t\t\t\tcontainer.parentElement.removeChild(preview_form);\n\t\t\t\t\t\t\t\tcontainer.classList.remove('hidden');\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, 1000);\n\t\t\t\t\t});\n\t\n\t\t\t\t\tthis.idf_add_btn = document.getElementById('idf_add_btn');\n\t\t\t\t\tthis.idf_add_btn.addEventListener('click', function (event) {\n\t\t\t\t\t\t_this.div_form = document.getElementById('formElements');\n\t\n\t\t\t\t\t\tvar formElement = {\n\t\t\t\t\t\t\tkey: Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5),\n\t\t\t\t\t\t\tlabel: '',\n\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\tcontrolType: 'short_text',\n\t\t\t\t\t\t\ttype: '',\n\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\torder: _this.idf_form_object['formElements'].length + 1,\n\t\t\t\t\t\t\tplaceholder: ''\n\t\t\t\t\t\t};\n\t\t\t\t\t\t_this.idf_form_object['formElements'].push(formElement);\n\t\n\t\t\t\t\t\tvar div_element = document.createElement('div');\n\t\t\t\t\t\tdiv_element.innerHTML = '\\n\\t\\t\\t\\t\\t<div id=\"' + formElement['key'] + '\" class=\"uk-card uk-card-default uk-card-body active\">\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<form class=\"uk-form-horizontal uk-margin-large\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-margin\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Question Type</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\"selectedType\" class=\"uk-input\" disabled type=\"text\" placeholder=\"Short answer\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"dropdownContain\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"dropOut\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li id=\"short_text\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i id=\"short_text\" class=\"material-icons\">short_text</i>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span id=\"short_text\" class=\"icon-text\">Short answer</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li id=\"paragraph\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i id=\"paragraph\" class=\"material-icons\">subject</i>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span id=\"paragraph\" class=\"icon-text\">Paragraph</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li id=\"multiple_choice\" style=\"border-top: 1px solid rgba(0,0,0,0.12);\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i id=\"multiple_choice\" class=\"material-icons\">radio_button_checked</i>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span id=\"multiple_choice\" class=\"icon-text\">Multiple Choice</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li id=\"checkbox\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i id=\"checkbox\" class=\"material-icons\">check_box</i>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span id=\"checkbox\" class=\"icon-text\">Checkboxes</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li id=\"dropdown\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i id=\"dropdown\" class=\"material-icons\">arrow_drop_down_circle</i>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span id=\"dropdown\" class=\"icon-text\">Dropdown</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li id=\"date\" style=\"border-top: 1px solid rgba(0,0,0,0.12);\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i id=\"date\" class=\"material-icons\">event</i>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span id=\"date\" class=\"icon-text\">Date</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div id=\"selected_question_dom\" class=\"uk-margin\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- Selected Question Type Content -->\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-margin\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Question Name</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\"short_text_input\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\"uk-input\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\"text\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\"Question Name\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-margin\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Content</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\"uk-input\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\"text\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdisabled\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\"Short answer text\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div id=\"bottom-controls\" class=\"uk-margin\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-form-controls uk-form-controls-text\" style=\"display:flex;\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span id=\"selected-type\"></span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"flex: 1 1 auto;\"></span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\"tg-list\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i id=\"' + formElement['key'] + '_remove\" class=\"material-icons\" uk-tooltip=\"title: Remove Question; pos: bottom\">delete</i>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"padding-left:25px;border-left: 1px solid #e0e0e0;height: 32px;margin: 0 16px;width: 0;\"></span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li class=\"tg-list-item\" style=\"display:flex;margin-left:-10px;\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"padding-top: 4px;\">Required :</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\"tgl tgl-flip\" id=\"' + formElement['key'] + '_cb\" type=\"checkbox\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label id=\"' + formElement['key'] + '_lbl\" class=\"tgl-btn\" data-tg-off=\"Nope\" data-tg-on=\"Yeah!\" for=\"' + formElement['key'] + '_cb\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tstyle=\"margin-left:15px;\"></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t<div id=\"hiddenElement\" class=\"uk-margin hidden\">\\n\\t\\t\\t\\t\\t\\t\\t<h1 id=\"' + formElement['key'] + '_title_preview\" class=\"question-preview\">Untitled Question</h1>\\n\\t\\t\\t\\t\\t\\t\\t<span class=\"short-answer-text\">Short answer text</span>\\n\\t\\t\\t\\t\\t\\t\\t<div style=\"border-bottom: 1px dotted rgba(0,0,0,0.38);margin-top: -10px;\"></div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t';\n\t\t\t\t\t\t_this.div_form.appendChild(div_element);\n\t\n\t\t\t\t\t\t// assign keyup event for raw textInput\n\t\t\t\t\t\tvar shortTextInput = document.querySelector('#' + formElement['key'] + ' #short_text_input');\n\t\t\t\t\t\tvar titlePreview = document.getElementById(formElement['key'] + '_title_preview');\n\t\t\t\t\t\tshortTextInput.addEventListener('keyup', function (event) {\n\t\t\t\t\t\t\t// assign text to preview text\n\t\t\t\t\t\t\ttitlePreview.innerHTML = event.target.value;\n\t\t\t\t\t\t\tformElement['label'] = event.target.value;\n\t\t\t\t\t\t\tformElement['placeholder'] = event.target.value;\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\t// give id to parent element of question DOM\n\t\t\t\t\t\tvar createdCard = document.querySelector('#' + formElement['key'] + '.uk-card-default').parentElement;\n\t\t\t\t\t\tcreatedCard.id = formElement['key'] + '_parent';\n\t\n\t\t\t\t\t\t// make all previous cards inactive\n\t\t\t\t\t\t_this.idf_form_object['formElements'].forEach(function (element) {\n\t\t\t\t\t\t\tvar formCard = document.getElementById(element['key'] + '_parent');\n\t\t\t\t\t\t\tif (formCard.children[0].id != formElement['key']) {\n\t\t\t\t\t\t\t\tformCard.children[0].classList.remove('active');\n\t\t\t\t\t\t\t\tformCard.children[0].classList.add('inactive');\n\t\t\t\t\t\t\t\t// assign click event events to make each question editable\n\t\t\t\t\t\t\t\tformCard.addEventListener('click', editQuestion);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// make form title inactive\n\t\t\t\t\t\tformTitle.children[0].classList.remove('active');\n\t\t\t\t\t\tformTitle.children[0].classList.add('inactive');\n\t\t\t\t\t\tformTitle.addEventListener('click', _makeTitleEditable);\n\t\n\t\t\t\t\t\t// set required status of formElement\n\t\t\t\t\t\t_this.requiredButton = document.getElementById(formElement['key'] + '_lbl');\n\t\t\t\t\t\t_this.requiredButton.addEventListener('click', function (event) {\n\t\t\t\t\t\t\t// get relevant formElement\n\t\t\t\t\t\t\t_this.idf_form_object['formElements'].forEach(function (element) {\n\t\t\t\t\t\t\t\tif (element['key'] == _getByKey(event.target.id)) {\n\t\t\t\t\t\t\t\t\t// change formElement required status\n\t\t\t\t\t\t\t\t\telement['required'] = !element['required'];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\t// remove formElement\n\t\t\t\t\t\t_this.deleteFormElementBtn = document.getElementById(formElement['key'] + '_remove');\n\t\t\t\t\t\t_this.deleteFormElementBtn.addEventListener('click', function (event) {\n\t\t\t\t\t\t\tvar x = _this.idf_form_object['formElements'].forEach(function (element, index) {\n\t\t\t\t\t\t\t\tif (element['key'] == _getByKey(event.target.id)) {\n\t\t\t\t\t\t\t\t\t_this.idf_form_object['formElements'].splice(index, 1);\n\t\t\t\t\t\t\t\t\t// delete relative html content\n\t\t\t\t\t\t\t\t\t_this.currentDiv = document.getElementById('' + formElement['key']);\n\t\t\t\t\t\t\t\t\tdocument.getElementById('formElements').removeChild(_this.currentDiv.parentNode);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\t_this.selectedQuestionType = document.querySelector('#' + formElement['key'] + ' .dropdownContain');\n\t\t\t\t\t\t_this.selectedQuestionType.addEventListener('click', function (event) {\n\t\n\t\t\t\t\t\t\tvar selectedType = document.querySelector('#' + formElement['key'] + ' #selectedType');\n\t\t\t\t\t\t\tvar selectedQuestionDOM = document.querySelector('#' + formElement['key'] + ' #selected_question_dom');\n\t\t\t\t\t\t\tvar hiddenElement = document.querySelector('#' + formElement['key'] + ' #hiddenElement');\n\t\t\t\t\t\t\tvar elementID = event.target.id;\n\t\t\t\t\t\t\tswitch (elementID) {\n\t\t\t\t\t\t\t\t// Short text form selection\n\t\t\t\t\t\t\t\tcase 'short_text':\n\t\t\t\t\t\t\t\t\tformElement['controlType'] = 'short_text';\n\t\t\t\t\t\t\t\t\tselectedType.placeholder = 'Short answer';\n\t\t\t\t\t\t\t\t\tselectedQuestionDOM.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-margin\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Question Name</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\"short_text_input\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\"uk-input\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\"text\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\"Question Name\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-margin\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Content</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\"uk-input\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\"text\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdisabled\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\"Short answer text\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\t\t\thiddenElement.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t<h1 id=\"' + formElement['key'] + '_title_preview\" class=\"question-preview\">Untitled Question</h1>\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\"short-answer-text\">Short answer text</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div style=\"border-bottom: 1px dotted rgba(0,0,0,0.38);margin-top: -10px;\"></div>\\n\\t\\t\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\t\t\tif (formElement['placeholder'] != '') {\n\t\t\t\t\t\t\t\t\t\t// populate DOM of previous data\n\t\t\t\t\t\t\t\t\t\tvar shortTextInput = document.querySelector('#' + formElement['key'] + ' #short_text_input');\n\t\t\t\t\t\t\t\t\t\tvar titlePreview = document.getElementById(formElement['key'] + '_title_preview');\n\t\t\t\t\t\t\t\t\t\tshortTextInput.value = formElement['placeholder'];\n\t\t\t\t\t\t\t\t\t\ttitlePreview.innerHTML = formElement['placeholder'];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// assign keyup event for new textInput\n\t\t\t\t\t\t\t\t\tvar shortTextInput = document.querySelector('#' + formElement['key'] + ' #short_text_input');\n\t\t\t\t\t\t\t\t\tvar titlePreview = document.getElementById(formElement['key'] + '_title_preview');\n\t\t\t\t\t\t\t\t\tshortTextInput.addEventListener('keyup', function (event) {\n\t\t\t\t\t\t\t\t\t\t// assign text to preview text\n\t\t\t\t\t\t\t\t\t\ttitlePreview.innerHTML = event.target.value;\n\t\t\t\t\t\t\t\t\t\tformElement['label'] = event.target.value;\n\t\t\t\t\t\t\t\t\t\tformElement['placeholder'] = event.target.value;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t// Textarea selection\n\t\t\t\t\t\t\t\tcase 'paragraph':\n\t\t\t\t\t\t\t\t\tformElement['controlType'] = 'paragraph';\n\t\t\t\t\t\t\t\t\tselectedType.placeholder = 'Paragraph';\n\t\t\t\t\t\t\t\t\tselectedQuestionDOM.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-margin\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Question Name</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\"short_text_input\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\"uk-input\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\"text\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\"Question Name\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-margin\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Content</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\"uk-input\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\"text\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdisabled\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\"Long answer text\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\t\t\thiddenElement.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t<h1 id=\"' + formElement['key'] + '_title_preview\" class=\"question-preview\">Untitled Question</h1>\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\"short-answer-text\">Long answer text</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div style=\"border-bottom: 1px dotted rgba(0,0,0,0.38);margin-top: -10px;\"></div>\\n\\t\\t\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\t\t\tif (formElement['placeholder'] != '') {\n\t\t\t\t\t\t\t\t\t\t// populate DOM of previous data\n\t\t\t\t\t\t\t\t\t\tvar shortTextInput = document.querySelector('#' + formElement['key'] + ' #short_text_input');\n\t\t\t\t\t\t\t\t\t\tvar titlePreview = document.getElementById(formElement['key'] + '_title_preview');\n\t\t\t\t\t\t\t\t\t\tshortTextInput.value = formElement['placeholder'];\n\t\t\t\t\t\t\t\t\t\ttitlePreview.innerHTML = formElement['placeholder'];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// assign keyup event for new textInput\n\t\t\t\t\t\t\t\t\tvar shortTextInput = document.querySelector('#' + formElement['key'] + ' #short_text_input');\n\t\t\t\t\t\t\t\t\tvar titlePreview = document.getElementById(formElement['key'] + '_title_preview');\n\t\t\t\t\t\t\t\t\tshortTextInput.addEventListener('keyup', function (event) {\n\t\t\t\t\t\t\t\t\t\t// assign text to preview text\n\t\t\t\t\t\t\t\t\t\ttitlePreview.innerHTML = event.target.value;\n\t\t\t\t\t\t\t\t\t\tformElement['label'] = event.target.value;\n\t\t\t\t\t\t\t\t\t\tformElement['placeholder'] = event.target.value;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t// Radio button selection \n\t\t\t\t\t\t\t\tcase 'multiple_choice':\n\t\t\t\t\t\t\t\t\tvar editPreviewOptions = function editPreviewOptions(innetText) {\n\t\t\t\t\t\t\t\t\t\tvar previewOptions = document.querySelector('#' + formElement['key'] + ' #previewOptions');\n\t\t\t\t\t\t\t\t\t\tpreviewOptions.innerHTML = '';\n\t\t\t\t\t\t\t\t\t\tformElement['options'].forEach(function (element, index) {\n\t\t\t\t\t\t\t\t\t\t\tvar div = document.createElement('div');\n\t\n\t\t\t\t\t\t\t\t\t\t\tvar label = document.createElement('label');\n\t\t\t\t\t\t\t\t\t\t\tlabel.innerHTML = innetText;\n\t\t\t\t\t\t\t\t\t\t\tpreviewOptions.insertBefore(label, span);\n\t\t\t\t\t\t\t\t\t\t\tlabel.classList.add('input-preview-icon');\n\t\n\t\t\t\t\t\t\t\t\t\t\tvar span = document.createElement('span');\n\t\t\t\t\t\t\t\t\t\t\tif (element['value'] != '') {\n\t\t\t\t\t\t\t\t\t\t\t\tspan.innerHTML = '' + element['value'];\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tspan.innerHTML = 'Option ' + (index + 1);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tspan.style.display = 'block';\n\t\t\t\t\t\t\t\t\t\t\tspan.style.marginBottom = '-20px';\n\t\t\t\t\t\t\t\t\t\t\tspan.style.marginTop = '-25px';\n\t\t\t\t\t\t\t\t\t\t\tspan.style.paddingLeft = '25px';\n\t\t\t\t\t\t\t\t\t\t\tspan.classList.add('short-answer-text');\n\t\n\t\t\t\t\t\t\t\t\t\t\tdiv.appendChild(label);\n\t\t\t\t\t\t\t\t\t\t\tdiv.appendChild(span);\n\t\t\t\t\t\t\t\t\t\t\tpreviewOptions.appendChild(div);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\t\t\t\tformElement['controlType'] = 'multiple_choice';\n\t\t\t\t\t\t\t\t\tselectedType.placeholder = 'Multiple Choice';\n\t\t\t\t\t\t\t\t\tif (formElement['options']) {\n\t\t\t\t\t\t\t\t\t\tselectedQuestionDOM.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-margin\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Question Name</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\"short_text_input\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\"uk-input\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\"text\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\"Question Name\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-margin\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Content</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div id=\"' + formElement['key'] + '_options\" class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-inline\" style=\"display:block;padding-top:10px;\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"input-icon\" style=\"padding-top:10px;\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\"uk-radio\" type=\"radio\" disabled>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span id=\"add_content\" style=\"padding-left:40px;\">Add Option</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div style=\"border-bottom: 1px dotted rgba(0,0,0,0.38);width: 80px;margin-left: 40px;\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\t\t\t\thiddenElement.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<h1 id=\"' + formElement['key'] + '_title_preview\" class=\"question-preview\">Untitled Question</h1>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div id=\"previewOptions\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t';\n\t\n\t\t\t\t\t\t\t\t\t\tvar options = document.getElementById(formElement['key'] + '_options');\n\t\t\t\t\t\t\t\t\t\tformElement['options'].forEach(function (element, index) {\n\t\t\t\t\t\t\t\t\t\t\tvar newOption = document.createElement('div');\n\t\t\t\t\t\t\t\t\t\t\tnewOption.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"input-icon\"><input class=\"uk-radio\" type=\"radio\" disabled></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i id=\"' + element['key'] + '_removeOption\" class=\"material-icons input-remove\" uk-tooltip=\"title: Remove; pos: bottom\">clear</i>\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\"' + element['key'] + '_option\" style=\"padding-left:40px;\" class=\"uk-input\" type=\"text\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\t\t\t\t\toptions.insertBefore(newOption, options.childNodes[index]);\n\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(element['key'] + '_option').value = element['value'];\n\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(element['key'] + '_option').placeholder = ' Option ' + (index + 1);\n\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(element['key'] + '_option').addEventListener('keyup', function (event) {\n\t\t\t\t\t\t\t\t\t\t\t\telement['value'] = event.target.value;\n\t\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions('<input class=\"uk-radio\" type=\"radio\" disabled>');\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t// set CSS properties to parent eliment\n\t\t\t\t\t\t\t\t\t\t\tvar childOptionsContent = document.getElementById(element['key'] + '_removeOption');\n\t\t\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.id = element['key'];\n\t\t\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.classList.add('uk-inline');\n\t\t\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.style.display = 'block';\n\t\t\t\t\t\t\t\t\t\t\tchildOptionsContent.addEventListener('click', function (event) {\n\t\t\t\t\t\t\t\t\t\t\t\tformElement['options'].splice(index, 1);\n\t\t\t\t\t\t\t\t\t\t\t\tvar currentOptionDiv = event.target.parentElement;\n\t\t\t\t\t\t\t\t\t\t\t\t// remove element from DOM\n\t\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(formElement['key'] + '_options').removeChild(currentOptionDiv);\n\t\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions('<input class=\"uk-radio\" type=\"radio\" disabled>');\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\teditPreviewOptions('<input class=\"uk-radio\" type=\"radio\" disabled>');\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tvar rawOption = {\n\t\t\t\t\t\t\t\t\t\t\tkey: Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5),\n\t\t\t\t\t\t\t\t\t\t\tvalue: ''\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t// create new attribute options in formElement\n\t\t\t\t\t\t\t\t\t\tformElement['options'] = [];\n\t\t\t\t\t\t\t\t\t\tformElement['options'].push(rawOption);\n\t\n\t\t\t\t\t\t\t\t\t\tselectedQuestionDOM.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-margin\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Question Name</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\"short_text_input\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\"uk-input\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\"text\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\"Question Name\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-margin\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Content</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div id=\"' + formElement['key'] + '_options\" class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div id=\"' + rawOption['key'] + '\" class=\"uk-inline\" style=\"display:block;\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"input-icon\"><input class=\"uk-radio\" type=\"radio\" disabled></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i id=\"' + rawOption['key'] + '_removeOption\" class=\"material-icons input-remove\" uk-tooltip=\"title: Remove; pos: bottom\">clear</i>\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\"' + rawOption['key'] + '_option\" style=\"padding-left:40px;\" class=\"uk-input\" type=\"text\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-inline\" style=\"display:block;padding-top:10px;\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"input-icon\" style=\"padding-top:10px;\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\"uk-radio\" type=\"radio\" disabled>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span id=\"add_content\" style=\"padding-left:40px;\">Add Option</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div style=\"border-bottom: 1px dotted rgba(0,0,0,0.38);width: 80px;margin-left: 40px;\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\t\t\t\thiddenElement.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<h1 id=\"' + formElement['key'] + '_title_preview\" class=\"question-preview\">Untitled Question</h1>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div id=\"previewOptions\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\t\t\t\teditPreviewOptions('<input class=\"uk-radio\" type=\"radio\" disabled>');\n\t\n\t\t\t\t\t\t\t\t\t\tvar rawOptionField = document.getElementById(rawOption['key'] + '_option');\n\t\t\t\t\t\t\t\t\t\trawOptionField.placeholder = 'Option 1';\n\t\t\t\t\t\t\t\t\t\trawOptionField.addEventListener('keyup', function (event) {\n\t\t\t\t\t\t\t\t\t\t\tformElement['options'].forEach(function (element) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (element['key'] == _getByKey(event.target.id)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\telement['value'] = event.target.value;\n\t\t\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions('<input class=\"uk-radio\" type=\"radio\" disabled>');\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\t\t\t\t\tvar removeOption = document.getElementById(rawOption['key'] + '_removeOption');\n\t\t\t\t\t\t\t\t\t\tremoveOption.addEventListener('click', function (event) {\n\t\t\t\t\t\t\t\t\t\t\tformElement['options'].forEach(function (element, index) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (element['key'] == _getByKey(event.target.id)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// remove option\n\t\t\t\t\t\t\t\t\t\t\t\t\tformElement['options'].splice(index, 1);\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar currentOptionDiv = event.target.parentElement;\n\t\t\t\t\t\t\t\t\t\t\t\t\t// remove element from DOM\n\t\t\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(formElement['key'] + '_options').removeChild(currentOptionDiv);\n\t\t\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions('<input class=\"uk-radio\" type=\"radio\" disabled>');\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// bind previous options to DOM if present\n\t\t\t\t\t\t\t\t\tvar radioBtn_title = document.querySelector('#' + formElement['key'] + ' #short_text_input');\n\t\t\t\t\t\t\t\t\tvar radioBtn_title_preview = document.getElementById(formElement['key'] + '_title_preview');\n\t\t\t\t\t\t\t\t\tif (formElement['placeholder'] != '') {\n\t\t\t\t\t\t\t\t\t\tradioBtn_title.value = formElement['placeholder'];\n\t\t\t\t\t\t\t\t\t\tradioBtn_title.placeholder = 'Question Name';\n\t\t\t\t\t\t\t\t\t\tradioBtn_title_preview.innerHTML = formElement['placeholder'];\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tradioBtn_title.value = '';\n\t\t\t\t\t\t\t\t\t\tradioBtn_title.placeholder = 'Question Name';\n\t\t\t\t\t\t\t\t\t\tradioBtn_title_preview.innerHTML = 'Untitled Question';\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\teditPreviewOptions('<input class=\"uk-radio\" type=\"radio\" disabled>');\n\t\n\t\t\t\t\t\t\t\t\t// assign keyup event for new textInput\n\t\t\t\t\t\t\t\t\tvar shortTextInput = document.querySelector('#' + formElement['key'] + ' #short_text_input');\n\t\t\t\t\t\t\t\t\tvar titlePreview = document.getElementById(formElement['key'] + '_title_preview');\n\t\t\t\t\t\t\t\t\tshortTextInput.addEventListener('keyup', function (event) {\n\t\t\t\t\t\t\t\t\t\t// assign text to preview text\n\t\t\t\t\t\t\t\t\t\ttitlePreview.innerHTML = event.target.value;\n\t\t\t\t\t\t\t\t\t\tformElement['label'] = event.target.value;\n\t\t\t\t\t\t\t\t\t\tformElement['placeholder'] = event.target.value;\n\t\t\t\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\t\t\t\tvar radioBtn_addOptions = document.querySelector('#' + formElement['key'] + ' #add_content');\n\t\t\t\t\t\t\t\t\tradioBtn_addOptions.addEventListener('click', function (event) {\n\t\t\t\t\t\t\t\t\t\tvar rawOption = {\n\t\t\t\t\t\t\t\t\t\t\tkey: Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5),\n\t\t\t\t\t\t\t\t\t\t\tvalue: ''\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\tformElement['options'].push(rawOption);\n\t\n\t\t\t\t\t\t\t\t\t\t// bind new option to DOM\n\t\t\t\t\t\t\t\t\t\tvar options = document.getElementById(formElement['key'] + '_options');\n\t\t\t\t\t\t\t\t\t\tvar newOption = document.createElement('div');\n\t\t\t\t\t\t\t\t\t\tnewOption.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"input-icon\"><input class=\"uk-radio\" type=\"radio\" disabled></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<i id=\"' + rawOption['key'] + '_removeOption\" class=\"material-icons input-remove\" uk-tooltip=\"title: Remove; pos: bottom\">clear</i>\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\"' + rawOption['key'] + '_option\" style=\"padding-left:40px;\" class=\"uk-input\" type=\"text\">\\n\\t\\t\\t\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\t\t\t\t// set CSS properties to parent eliment\n\t\t\t\t\t\t\t\t\t\toptions.insertBefore(newOption, options.childNodes[formElement['options'].length]);\n\t\t\t\t\t\t\t\t\t\tdocument.getElementById(rawOption['key'] + '_option').placeholder = 'Option ' + formElement['options'].length;\n\t\n\t\t\t\t\t\t\t\t\t\tvar childOptionsContent = document.getElementById(rawOption['key'] + '_removeOption');\n\t\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.id = rawOption['key'];\n\t\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.classList.add('uk-inline');\n\t\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.style.display = 'block';\n\t\t\t\t\t\t\t\t\t\teditPreviewOptions('<input class=\"uk-radio\" type=\"radio\" disabled>');\n\t\n\t\t\t\t\t\t\t\t\t\t// assign event handkler to pass data to the array\n\t\t\t\t\t\t\t\t\t\tvar radioBtn_option = document.getElementById(rawOption['key'] + '_option');\n\t\t\t\t\t\t\t\t\t\tradioBtn_option.addEventListener('keyup', function (event) {\n\t\t\t\t\t\t\t\t\t\t\tformElement['options'].forEach(function (element) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (element['key'] == _getByKey(event.target.id)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\telement['value'] = event.target.value;\n\t\t\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions('<input class=\"uk-radio\" type=\"radio\" disabled>');\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\t\t\t\t\t// add click event handler to remove element\n\t\t\t\t\t\t\t\t\t\tvar radioBtn_remove = document.getElementById(rawOption['key'] + '_removeOption');\n\t\t\t\t\t\t\t\t\t\tradioBtn_remove.addEventListener('click', function (event) {\n\t\t\t\t\t\t\t\t\t\t\tformElement['options'].forEach(function (element, index) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (element['key'] == _getByKey(event.target.id)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// remove option\n\t\t\t\t\t\t\t\t\t\t\t\t\tformElement['options'].splice(index, 1);\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar currentOptionDiv = event.target.parentElement;\n\t\t\t\t\t\t\t\t\t\t\t\t\t// remove element from DOM\n\t\t\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(formElement['key'] + '_options').removeChild(currentOptionDiv);\n\t\t\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions('<input class=\"uk-radio\" type=\"radio\" disabled>');\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t// Checkbox selection\n\t\t\t\t\t\t\t\tcase 'checkbox':\n\t\t\t\t\t\t\t\t\tvar editPreviewOptions = function editPreviewOptions(innetText) {\n\t\t\t\t\t\t\t\t\t\tvar previewOptions = document.querySelector('#' + formElement['key'] + ' #previewOptions');\n\t\t\t\t\t\t\t\t\t\tpreviewOptions.innerHTML = '';\n\t\t\t\t\t\t\t\t\t\tformElement['options'].forEach(function (element, index) {\n\t\t\t\t\t\t\t\t\t\t\tvar div = document.createElement('div');\n\t\n\t\t\t\t\t\t\t\t\t\t\tvar label = document.createElement('label');\n\t\t\t\t\t\t\t\t\t\t\tlabel.innerHTML = innetText;\n\t\t\t\t\t\t\t\t\t\t\tpreviewOptions.insertBefore(label, span);\n\t\t\t\t\t\t\t\t\t\t\tlabel.classList.add('input-preview-icon');\n\t\n\t\t\t\t\t\t\t\t\t\t\tvar span = document.createElement('span');\n\t\t\t\t\t\t\t\t\t\t\tif (element['value'] != '') {\n\t\t\t\t\t\t\t\t\t\t\t\tspan.innerHTML = '' + element['value'];\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tspan.innerHTML = 'Option ' + (index + 1);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tspan.style.display = 'block';\n\t\t\t\t\t\t\t\t\t\t\tspan.style.marginBottom = '-20px';\n\t\t\t\t\t\t\t\t\t\t\tspan.style.marginTop = '-25px';\n\t\t\t\t\t\t\t\t\t\t\tspan.style.paddingLeft = '25px';\n\t\t\t\t\t\t\t\t\t\t\tspan.classList.add('short-answer-text');\n\t\n\t\t\t\t\t\t\t\t\t\t\tdiv.appendChild(label);\n\t\t\t\t\t\t\t\t\t\t\tdiv.appendChild(span);\n\t\t\t\t\t\t\t\t\t\t\tpreviewOptions.appendChild(div);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\t\t\t\tformElement['controlType'] = 'checkbox';\n\t\t\t\t\t\t\t\t\tselectedType.placeholder = 'Checkbox';\n\t\t\t\t\t\t\t\t\tif (formElement['options']) {\n\t\t\t\t\t\t\t\t\t\tselectedQuestionDOM.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-margin\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Question Name</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\"short_text_input\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\"uk-input\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\"text\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\"Question Name\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-margin\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Content</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div id=\"' + formElement['key'] + '_options\" class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-inline\" style=\"display:block;padding-top:10px;\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"input-icon\" style=\"padding-top:10px;\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\"uk-checkbox\" type=\"checkbox\" disabled>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span id=\"add_content\" style=\"padding-left:40px;\">Add Option</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div style=\"border-bottom: 1px dotted rgba(0,0,0,0.38);width: 80px;margin-left: 40px;\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\t\t\t\thiddenElement.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<h1 id=\"' + formElement['key'] + '_title_preview\" class=\"question-preview\">Untitled Question</h1>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div id=\"previewOptions\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t';\n\t\n\t\t\t\t\t\t\t\t\t\tvar options = document.getElementById(formElement['key'] + '_options');\n\t\t\t\t\t\t\t\t\t\tformElement['options'].forEach(function (element, index) {\n\t\t\t\t\t\t\t\t\t\t\tvar newOption = document.createElement('div');\n\t\t\t\t\t\t\t\t\t\t\tnewOption.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"input-icon\"><input class=\"uk-checkbox\" type=\"checkbox\" disabled></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i id=\"' + element['key'] + '_removeOption\" class=\"material-icons input-remove\" uk-tooltip=\"title: Remove; pos: bottom\">clear</i>\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\"' + element['key'] + '_option\" style=\"padding-left:40px;\" class=\"uk-input\" type=\"text\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\t\t\t\t\toptions.insertBefore(newOption, options.childNodes[index]);\n\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(element['key'] + '_option').value = element['value'];\n\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(element['key'] + '_option').placeholder = ' Option ' + (index + 1);\n\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(element['key'] + '_option').addEventListener('keyup', function (event) {\n\t\t\t\t\t\t\t\t\t\t\t\telement['value'] = event.target.value;\n\t\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions('<input class=\"uk-checkbox\" type=\"checkbox\" disabled>');\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t// set CSS properties to parent eliment\n\t\t\t\t\t\t\t\t\t\t\tvar childOptionsContent = document.getElementById(element['key'] + '_removeOption');\n\t\t\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.id = element['key'];\n\t\t\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.classList.add('uk-inline');\n\t\t\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.style.display = 'block';\n\t\t\t\t\t\t\t\t\t\t\tchildOptionsContent.addEventListener('click', function (event) {\n\t\t\t\t\t\t\t\t\t\t\t\tformElement['options'].splice(index, 1);\n\t\t\t\t\t\t\t\t\t\t\t\tvar currentOptionDiv = event.target.parentElement;\n\t\t\t\t\t\t\t\t\t\t\t\t// remove element from DOM\n\t\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(formElement['key'] + '_options').removeChild(currentOptionDiv);\n\t\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions('<input class=\"uk-checkbox\" type=\"checkbox\" disabled>');\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\teditPreviewOptions('<input class=\"uk-checkbox\" type=\"checkbox\" disabled>');\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tvar rawOption = {\n\t\t\t\t\t\t\t\t\t\t\tkey: Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5),\n\t\t\t\t\t\t\t\t\t\t\tvalue: ''\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t// create new attribute options in formElement\n\t\t\t\t\t\t\t\t\t\tformElement['options'] = [];\n\t\t\t\t\t\t\t\t\t\tformElement['options'].push(rawOption);\n\t\n\t\t\t\t\t\t\t\t\t\tselectedQuestionDOM.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-margin\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Question Name</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\"short_text_input\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\"uk-input\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\"text\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\"Question Name\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-margin\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Content</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div id=\"' + formElement['key'] + '_options\" class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div id=\"' + rawOption['key'] + '\" class=\"uk-inline\" style=\"display:block;\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"input-icon\"><input class=\"uk-checkbox\" type=\"checkbox\" disabled></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i id=\"' + rawOption['key'] + '_removeOption\" class=\"material-icons input-remove\" uk-tooltip=\"title: Remove; pos: bottom\">clear</i>\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\"' + rawOption['key'] + '_option\" style=\"padding-left:40px;\" class=\"uk-input\" type=\"text\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-inline\" style=\"display:block;padding-top:10px;\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"input-icon\" style=\"padding-top:10px;\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\"uk-checkbox\" type=\"checkbox\" disabled>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span id=\"add_content\" style=\"padding-left:40px;\">Add Option</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div style=\"border-bottom: 1px dotted rgba(0,0,0,0.38);width: 80px;margin-left: 40px;\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\t\t\t\thiddenElement.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<h1 id=\"' + formElement['key'] + '_title_preview\" class=\"question-preview\">Untitled Question</h1>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div id=\"previewOptions\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\t\t\t\teditPreviewOptions('<input class=\"uk-checkbox\" type=\"checkbox\" disabled>');\n\t\n\t\t\t\t\t\t\t\t\t\tvar rawOptionField = document.getElementById(rawOption['key'] + '_option');\n\t\t\t\t\t\t\t\t\t\trawOptionField.placeholder = 'Option 1';\n\t\t\t\t\t\t\t\t\t\trawOptionField.addEventListener('keyup', function (event) {\n\t\t\t\t\t\t\t\t\t\t\tformElement['options'].forEach(function (element) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (element['key'] == _getByKey(event.target.id)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\telement['value'] = event.target.value;\n\t\t\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions('<input class=\"uk-checkbox\" type=\"checkbox\" disabled>');\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\t\t\t\t\tvar removeOption = document.getElementById(rawOption['key'] + '_removeOption');\n\t\t\t\t\t\t\t\t\t\tremoveOption.addEventListener('click', function (event) {\n\t\t\t\t\t\t\t\t\t\t\tformElement['options'].forEach(function (element, index) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (element['key'] == _getByKey(event.target.id)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// remove option\n\t\t\t\t\t\t\t\t\t\t\t\t\tformElement['options'].splice(index, 1);\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar currentOptionDiv = event.target.parentElement;\n\t\t\t\t\t\t\t\t\t\t\t\t\t// remove element from DOM\n\t\t\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(formElement['key'] + '_options').removeChild(currentOptionDiv);\n\t\t\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions('<input class=\"uk-checkbox\" type=\"checkbox\" disabled>');\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// bind previous options to DOM if present\n\t\t\t\t\t\t\t\t\tvar checkbox_title = document.querySelector('#' + formElement['key'] + ' #short_text_input');\n\t\t\t\t\t\t\t\t\tvar checkbox_title_preview = document.getElementById(formElement['key'] + '_title_preview');\n\t\t\t\t\t\t\t\t\tif (formElement['placeholder'] != '') {\n\t\t\t\t\t\t\t\t\t\tcheckbox_title.value = formElement['placeholder'];\n\t\t\t\t\t\t\t\t\t\tcheckbox_title_preview.innerHTML = formElement['placeholder'];\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tcheckbox_title.value = '';\n\t\t\t\t\t\t\t\t\t\tcheckbox_title.placeholder = 'Question Name';\n\t\t\t\t\t\t\t\t\t\tcheckbox_title_preview.innerHTML = 'Untitled Question';\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\teditPreviewOptions('<input class=\"uk-checkbox\" type=\"checkbox\" disabled>');\n\t\n\t\t\t\t\t\t\t\t\t// assign keyup event for new textInput\n\t\t\t\t\t\t\t\t\tvar shortTextInput = document.querySelector('#' + formElement['key'] + ' #short_text_input');\n\t\t\t\t\t\t\t\t\tvar titlePreview = document.getElementById(formElement['key'] + '_title_preview');\n\t\t\t\t\t\t\t\t\tshortTextInput.addEventListener('keyup', function (event) {\n\t\t\t\t\t\t\t\t\t\t// assign text to preview text\n\t\t\t\t\t\t\t\t\t\ttitlePreview.innerHTML = event.target.value;\n\t\t\t\t\t\t\t\t\t\tformElement['label'] = event.target.value;\n\t\t\t\t\t\t\t\t\t\tformElement['placeholder'] = event.target.value;\n\t\t\t\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\t\t\t\tvar checkbox_addOptions = document.querySelector('#' + formElement['key'] + ' #add_content');\n\t\t\t\t\t\t\t\t\tcheckbox_addOptions.addEventListener('click', function (event) {\n\t\t\t\t\t\t\t\t\t\tvar rawOption = {\n\t\t\t\t\t\t\t\t\t\t\tkey: Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5),\n\t\t\t\t\t\t\t\t\t\t\tvalue: ''\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\tformElement['options'].push(rawOption);\n\t\n\t\t\t\t\t\t\t\t\t\t// bind new option to DOM\n\t\t\t\t\t\t\t\t\t\tvar options = document.getElementById(formElement['key'] + '_options');\n\t\t\t\t\t\t\t\t\t\tvar newOption = document.createElement('div');\n\t\t\t\t\t\t\t\t\t\tnewOption.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"input-icon\"><input class=\"uk-checkbox\" type=\"checkbox\" disabled></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<i id=\"' + rawOption['key'] + '_removeOption\" class=\"material-icons input-remove\" uk-tooltip=\"title: Remove; pos: bottom\">clear</i>\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\"' + rawOption['key'] + '_option\" style=\"padding-left:40px;\" class=\"uk-input\" type=\"text\">\\n\\t\\t\\t\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\t\t\t\t// set CSS properties to parent eliment\n\t\t\t\t\t\t\t\t\t\toptions.insertBefore(newOption, options.childNodes[formElement['options'].length]);\n\t\t\t\t\t\t\t\t\t\tdocument.getElementById(rawOption['key'] + '_option').placeholder = 'Option ' + formElement['options'].length;\n\t\n\t\t\t\t\t\t\t\t\t\tvar childOptionsContent = document.getElementById(rawOption['key'] + '_removeOption');\n\t\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.id = rawOption['key'];\n\t\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.classList.add('uk-inline');\n\t\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.style.display = 'block';\n\t\t\t\t\t\t\t\t\t\teditPreviewOptions('<input class=\"uk-checkbox\" type=\"checkbox\" disabled>');\n\t\n\t\t\t\t\t\t\t\t\t\t// assign event handkler to pass data to the array\n\t\t\t\t\t\t\t\t\t\tvar checkbox_option = document.getElementById(rawOption['key'] + '_option');\n\t\t\t\t\t\t\t\t\t\tcheckbox_option.addEventListener('keyup', function (event) {\n\t\t\t\t\t\t\t\t\t\t\tformElement['options'].forEach(function (element) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (element['key'] == _getByKey(event.target.id)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\telement['value'] = event.target.value;\n\t\t\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions('<input class=\"uk-checkbox\" type=\"checkbox\" disabled>');\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\t\t\t\t\t// add click event handler to remove element\n\t\t\t\t\t\t\t\t\t\tvar checkbox_remove = document.getElementById(rawOption['key'] + '_removeOption');\n\t\t\t\t\t\t\t\t\t\tcheckbox_remove.addEventListener('click', function (event) {\n\t\t\t\t\t\t\t\t\t\t\tformElement['options'].forEach(function (element, index) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (element['key'] == _getByKey(event.target.id)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// remove option\n\t\t\t\t\t\t\t\t\t\t\t\t\tformElement['options'].splice(index, 1);\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar currentOptionDiv = event.target.parentElement;\n\t\t\t\t\t\t\t\t\t\t\t\t\t// remove element from DOM\n\t\t\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(formElement['key'] + '_options').removeChild(currentOptionDiv);\n\t\t\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions('<input class=\"uk-checkbox\" type=\"checkbox\" disabled>');\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t// Dropdown selection\n\t\t\t\t\t\t\t\tcase 'dropdown':\n\t\t\t\t\t\t\t\t\tvar editPreviewOptions = function editPreviewOptions() {\n\t\t\t\t\t\t\t\t\t\tvar previewOptions = document.querySelector('#' + formElement['key'] + ' #previewOptions');\n\t\t\t\t\t\t\t\t\t\tpreviewOptions.innerHTML = '';\n\t\t\t\t\t\t\t\t\t\tformElement['options'].forEach(function (element, index) {\n\t\t\t\t\t\t\t\t\t\t\tvar div = document.createElement('div');\n\t\n\t\t\t\t\t\t\t\t\t\t\tvar label = document.createElement('label');\n\t\t\t\t\t\t\t\t\t\t\tlabel.innerHTML = '<spa>' + (index + 1) + '.</span>';\n\t\t\t\t\t\t\t\t\t\t\tpreviewOptions.insertBefore(label, span);\n\t\t\t\t\t\t\t\t\t\t\tlabel.classList.add('input-preview-icon');\n\t\n\t\t\t\t\t\t\t\t\t\t\tvar span = document.createElement('span');\n\t\t\t\t\t\t\t\t\t\t\tif (element['value'] != '') {\n\t\t\t\t\t\t\t\t\t\t\t\tspan.innerHTML = '' + element['value'];\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tspan.innerHTML = 'Option ' + (index + 1);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tspan.style.display = 'block';\n\t\t\t\t\t\t\t\t\t\t\tspan.style.marginBottom = '-20px';\n\t\t\t\t\t\t\t\t\t\t\tspan.style.marginTop = '-25px';\n\t\t\t\t\t\t\t\t\t\t\tspan.style.paddingLeft = '25px';\n\t\t\t\t\t\t\t\t\t\t\tspan.classList.add('short-answer-text');\n\t\n\t\t\t\t\t\t\t\t\t\t\tdiv.appendChild(label);\n\t\t\t\t\t\t\t\t\t\t\tdiv.appendChild(span);\n\t\t\t\t\t\t\t\t\t\t\tpreviewOptions.appendChild(div);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\t\t\t\tformElement['controlType'] = 'dropdown';\n\t\t\t\t\t\t\t\t\tselectedType.placeholder = 'Dropdown';\n\t\t\t\t\t\t\t\t\tif (formElement['options']) {\n\t\t\t\t\t\t\t\t\t\tselectedQuestionDOM.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-margin\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Question Name</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\"short_text_input\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\"uk-input\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\"text\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\"Question Name\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-margin\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Content</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div id=\"' + formElement['key'] + '_options\" class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-inline\" style=\"display:block;padding-top:10px;\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"input-icon\" style=\"padding-top:10px;\"></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span id=\"add_content\" style=\"padding-left:40px;\">Add Option</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div style=\"border-bottom: 1px dotted rgba(0,0,0,0.38);width: 80px;margin-left: 40px;\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\t\t\t\thiddenElement.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<h1 id=\"' + formElement['key'] + '_title_preview\" class=\"question-preview\">Untitled Question</h1>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div id=\"previewOptions\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t';\n\t\n\t\t\t\t\t\t\t\t\t\tvar options = document.getElementById(formElement['key'] + '_options');\n\t\t\t\t\t\t\t\t\t\tformElement['options'].forEach(function (element, index) {\n\t\t\t\t\t\t\t\t\t\t\tvar newOption = document.createElement('div');\n\t\t\t\t\t\t\t\t\t\t\tnewOption.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"input-icon\"></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i id=\"' + element['key'] + '_removeOption\" class=\"material-icons input-remove\" uk-tooltip=\"title: Remove; pos: bottom\">clear</i>\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\"' + element['key'] + '_option\" style=\"padding-left:40px;\" class=\"uk-input\" type=\"text\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\t\t\t\t\toptions.insertBefore(newOption, options.childNodes[index]);\n\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(element['key'] + '_option').value = element['value'];\n\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(element['key'] + '_option').placeholder = ' Option ' + (index + 1);\n\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(element['key'] + '_option').addEventListener('keyup', function (event) {\n\t\t\t\t\t\t\t\t\t\t\t\telement['value'] = event.target.value;\n\t\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions();\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t// set CSS properties to parent eliment\n\t\t\t\t\t\t\t\t\t\t\tvar childOptionsContent = document.getElementById(element['key'] + '_removeOption');\n\t\t\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.id = element['key'];\n\t\t\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.classList.add('uk-inline');\n\t\t\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.style.display = 'block';\n\t\t\t\t\t\t\t\t\t\t\tchildOptionsContent.addEventListener('click', function (event) {\n\t\t\t\t\t\t\t\t\t\t\t\tformElement['options'].splice(index, 1);\n\t\t\t\t\t\t\t\t\t\t\t\tvar currentOptionDiv = event.target.parentElement;\n\t\t\t\t\t\t\t\t\t\t\t\t// remove element from DOM\n\t\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(formElement['key'] + '_options').removeChild(currentOptionDiv);\n\t\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions();\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\teditPreviewOptions();\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tvar rawOption = {\n\t\t\t\t\t\t\t\t\t\t\tkey: Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5),\n\t\t\t\t\t\t\t\t\t\t\tvalue: ''\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t// create new attribute options in formElement\n\t\t\t\t\t\t\t\t\t\tformElement['options'] = [];\n\t\t\t\t\t\t\t\t\t\tformElement['options'].push(rawOption);\n\t\n\t\t\t\t\t\t\t\t\t\tselectedQuestionDOM.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-margin\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Question Name</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\"short_text_input\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\"uk-input\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\"text\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\"Question Name\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-margin\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Content</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div id=\"' + formElement['key'] + '_options\" class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div id=\"' + rawOption['key'] + '\" class=\"uk-inline\" style=\"display:block;\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"input-icon\"></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i id=\"' + rawOption['key'] + '_removeOption\" class=\"material-icons input-remove\" uk-tooltip=\"title: Remove; pos: bottom\">clear</i>\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\"' + rawOption['key'] + '_option\" style=\"padding-left:40px;\" class=\"uk-input\" type=\"text\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-inline\" style=\"display:block;padding-top:10px;\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"input-icon\" style=\"padding-top:10px;\"></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span id=\"add_content\" style=\"padding-left:40px;\">Add Option</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div style=\"border-bottom: 1px dotted rgba(0,0,0,0.38);width: 80px;margin-left: 40px;\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\t\t\t\thiddenElement.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<h1 id=\"' + formElement['key'] + '_title_preview\" class=\"question-preview\">Untitled Question</h1>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div id=\"previewOptions\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\t\t\t\teditPreviewOptions();\n\t\n\t\t\t\t\t\t\t\t\t\tvar rawOptionField = document.getElementById(rawOption['key'] + '_option');\n\t\t\t\t\t\t\t\t\t\trawOptionField.placeholder = 'Option 1';\n\t\t\t\t\t\t\t\t\t\trawOptionField.addEventListener('keyup', function (event) {\n\t\t\t\t\t\t\t\t\t\t\tformElement['options'].forEach(function (element) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (element['key'] == _getByKey(event.target.id)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\telement['value'] = event.target.value;\n\t\t\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\t\t\t\t\tvar removeOption = document.getElementById(rawOption['key'] + '_removeOption');\n\t\t\t\t\t\t\t\t\t\tremoveOption.addEventListener('click', function (event) {\n\t\t\t\t\t\t\t\t\t\t\tformElement['options'].forEach(function (element, index) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (element['key'] == _getByKey(event.target.id)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// remove option\n\t\t\t\t\t\t\t\t\t\t\t\t\tformElement['options'].splice(index, 1);\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar currentOptionDiv = event.target.parentElement;\n\t\t\t\t\t\t\t\t\t\t\t\t\t// remove element from DOM\n\t\t\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(formElement['key'] + '_options').removeChild(currentOptionDiv);\n\t\t\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// bind previous options to DOM if present\n\t\t\t\t\t\t\t\t\tvar dropDown_title = document.querySelector('#' + formElement['key'] + ' #short_text_input');\n\t\t\t\t\t\t\t\t\tvar dropDown_title_preview = document.getElementById(formElement['key'] + '_title_preview');\n\t\t\t\t\t\t\t\t\tif (formElement['placeholder'] != '') {\n\t\t\t\t\t\t\t\t\t\tdropDown_title.value = formElement['placeholder'];\n\t\t\t\t\t\t\t\t\t\tdropDown_title_preview.innerHTML = formElement['placeholder'];\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tdropDown_title.value = '';\n\t\t\t\t\t\t\t\t\t\tdropDown_title.placeholder = 'Question Name';\n\t\t\t\t\t\t\t\t\t\tdropDown_title_preview.innerHTML = 'Untitled Question';\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\teditPreviewOptions();\n\t\n\t\t\t\t\t\t\t\t\t// assign keyup event for new textInput\n\t\t\t\t\t\t\t\t\tvar shortTextInput = document.querySelector('#' + formElement['key'] + ' #short_text_input');\n\t\t\t\t\t\t\t\t\tvar titlePreview = document.getElementById(formElement['key'] + '_title_preview');\n\t\t\t\t\t\t\t\t\tshortTextInput.addEventListener('keyup', function (event) {\n\t\t\t\t\t\t\t\t\t\t// assign text to preview text\n\t\t\t\t\t\t\t\t\t\ttitlePreview.innerHTML = event.target.value;\n\t\t\t\t\t\t\t\t\t\tformElement['label'] = event.target.value;\n\t\t\t\t\t\t\t\t\t\tformElement['placeholder'] = event.target.value;\n\t\t\t\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\t\t\t\tvar dropdown_addOptions = document.querySelector('#' + formElement['key'] + ' #add_content');\n\t\t\t\t\t\t\t\t\tdropdown_addOptions.addEventListener('click', function (event) {\n\t\t\t\t\t\t\t\t\t\tvar rawOption = {\n\t\t\t\t\t\t\t\t\t\t\tkey: Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5),\n\t\t\t\t\t\t\t\t\t\t\tvalue: ''\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\tformElement['options'].push(rawOption);\n\t\n\t\t\t\t\t\t\t\t\t\t// bind new option to DOM\n\t\t\t\t\t\t\t\t\t\tvar options = document.getElementById(formElement['key'] + '_options');\n\t\t\t\t\t\t\t\t\t\tvar newOption = document.createElement('div');\n\t\t\t\t\t\t\t\t\t\tnewOption.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"input-icon\"></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<i id=\"' + rawOption['key'] + '_removeOption\" class=\"material-icons input-remove\" uk-tooltip=\"title: Remove; pos: bottom\">clear</i>\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\"' + rawOption['key'] + '_option\" style=\"padding-left:40px;\" class=\"uk-input\" type=\"text\">\\n\\t\\t\\t\\t\\t\\t\\t\\t';\n\t\n\t\t\t\t\t\t\t\t\t\t// set CSS properties to parent eliment\n\t\t\t\t\t\t\t\t\t\toptions.insertBefore(newOption, options.childNodes[formElement['options'].length]);\n\t\t\t\t\t\t\t\t\t\tdocument.getElementById(rawOption['key'] + '_option').placeholder = 'Option ' + formElement['options'].length;\n\t\n\t\t\t\t\t\t\t\t\t\tvar childOptionsContent = document.getElementById(rawOption['key'] + '_removeOption');\n\t\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.id = rawOption['key'];\n\t\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.classList.add('uk-inline');\n\t\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.style.display = 'block';\n\t\t\t\t\t\t\t\t\t\teditPreviewOptions();\n\t\n\t\t\t\t\t\t\t\t\t\t// assign event handkler to pass data to the array\n\t\t\t\t\t\t\t\t\t\tvar dropdown_btn_option = document.getElementById(rawOption['key'] + '_option');\n\t\t\t\t\t\t\t\t\t\tdropdown_btn_option.addEventListener('keyup', function (event) {\n\t\t\t\t\t\t\t\t\t\t\tformElement['options'].forEach(function (element) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (element['key'] == _getByKey(event.target.id)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\telement['value'] = event.target.value;\n\t\t\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\t\t\t\t\t// add click event handler to remove element\n\t\t\t\t\t\t\t\t\t\tvar dropdownBtn_remove = document.getElementById(rawOption['key'] + '_removeOption');\n\t\t\t\t\t\t\t\t\t\tdropdownBtn_remove.addEventListener('click', function (event) {\n\t\t\t\t\t\t\t\t\t\t\tformElement['options'].forEach(function (element, index) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (element['key'] == _getByKey(event.target.id)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// remove option\n\t\t\t\t\t\t\t\t\t\t\t\t\tformElement['options'].splice(index, 1);\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar currentOptionDiv = event.target.parentElement;\n\t\t\t\t\t\t\t\t\t\t\t\t\t// remove element from DOM\n\t\t\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(formElement['key'] + '_options').removeChild(currentOptionDiv);\n\t\t\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'date':\n\t\t\t\t\t\t\t\t\tformElement['controlType'] = 'date';\n\t\t\t\t\t\t\t\t\tselectedType.placeholder = 'Date';\n\t\t\t\t\t\t\t\t\tselectedQuestionDOM.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-margin\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Question Name</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\"short_text_input\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\"uk-input\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\"text\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\"Question Name\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-margin\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Content</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\"uk-form-controls\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\"uk-input\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\"text\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdisabled\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\"Date\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\t\t\thiddenElement.innerHTML = '\\n\\t\\t\\t\\t\\t\\t\\t\\t<h1 id=\"' + formElement['key'] + '_title_preview\" class=\"question-preview\">Untitled Question</h1>\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\"short-answer-text\">Date</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div style=\"border-bottom: 1px dotted rgba(0,0,0,0.38);margin-top: -10px;\"></div>\\n\\t\\t\\t\\t\\t\\t\\t';\n\t\t\t\t\t\t\t\t\tif (formElement['placeholder'] != '') {\n\t\t\t\t\t\t\t\t\t\t// populate DOM of previous data\n\t\t\t\t\t\t\t\t\t\tvar shortTextInput = document.querySelector('#' + formElement['key'] + ' #short_text_input');\n\t\t\t\t\t\t\t\t\t\tvar titlePreview = document.getElementById(formElement['key'] + '_title_preview');\n\t\t\t\t\t\t\t\t\t\tshortTextInput.value = formElement['placeholder'];\n\t\t\t\t\t\t\t\t\t\ttitlePreview.innerHTML = formElement['placeholder'];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// assign keyup event for new textInput\n\t\t\t\t\t\t\t\t\tvar shortTextInput = document.querySelector('#' + formElement['key'] + ' #short_text_input');\n\t\t\t\t\t\t\t\t\tvar titlePreview = document.getElementById(formElement['key'] + '_title_preview');\n\t\t\t\t\t\t\t\t\tshortTextInput.addEventListener('keyup', function (event) {\n\t\t\t\t\t\t\t\t\t\t// assign text to preview text\n\t\t\t\t\t\t\t\t\t\ttitlePreview.innerHTML = event.target.value;\n\t\t\t\t\t\t\t\t\t\tformElement['label'] = event.target.value;\n\t\t\t\t\t\t\t\t\t\tformElement['placeholder'] = event.target.value;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn this.selector, this.idf_form_object;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'create',\n\t\t\tvalue: function create() {\n\t\t\t\tvar content = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\n\t\t\t\tconsole.log(content);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'submit',\n\t\t\tvalue: function submit() {\n\t\t\t\tvar content = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'getFormObject',\n\t\t\tvalue: function getFormObject() {\n\t\t\t\treturn this.idf_form_object;\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn idf;\n\t}();\n\t\n\t// export the class instance via a function call\n\t\n\t\n\tmodule.exports = function (selector) {\n\t\treturn new idf(selector);\n\t};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(setImmediate) {/*! UIkit 3.0.0-beta.40 | http://www.getuikit.com | (c) 2014 - 2017 YOOtheme | MIT License */\n\t\n\t(function (global, factory) {\n\t\t true ? module.exports = factory() :\n\t\ttypeof define === 'function' && define.amd ? define('uikit', factory) :\n\t\t(global.UIkit = factory());\n\t}(this, (function () { 'use strict';\n\t\n\tfunction bind(fn, context) {\n\t    return function (a) {\n\t        var l = arguments.length;\n\t        return l ? l > 1 ? fn.apply(context, arguments) : fn.call(context, a) : fn.call(context);\n\t    };\n\t}\n\t\n\tvar ref = Object.prototype;\n\tvar hasOwnProperty = ref.hasOwnProperty;\n\t\n\tfunction hasOwn(obj, key) {\n\t    return hasOwnProperty.call(obj, key);\n\t}\n\t\n\tvar hyphenateRe = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t    return str\n\t        .replace(hyphenateRe, '$1-$2')\n\t        .toLowerCase();\n\t}\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t    return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t    return c ? c.toUpperCase() : '';\n\t}\n\t\n\tfunction ucfirst(str) {\n\t    return str.length ? toUpper(null, str.charAt(0)) + str.slice(1) : '';\n\t}\n\t\n\tvar strPrototype = String.prototype;\n\tvar startsWithFn = strPrototype.startsWith || function (search) { return this.lastIndexOf(search, 0) === 0; };\n\t\n\tfunction startsWith(str, search) {\n\t    return startsWithFn.call(str, search);\n\t}\n\t\n\tvar endsWithFn = strPrototype.endsWith || function (search) { return this.substr(-search.length) === search; };\n\t\n\tfunction endsWith(str, search) {\n\t    return endsWithFn.call(str, search);\n\t}\n\t\n\tvar includesFn = function (search) { return ~this.indexOf(search); };\n\tvar includesStr = strPrototype.includes || includesFn;\n\tvar includesArray = Array.prototype.includes || includesFn;\n\t\n\tfunction includes(obj, search) {\n\t    return obj && (isString(obj) ? includesStr : includesArray).call(obj, search);\n\t}\n\t\n\tvar isArray = Array.isArray;\n\t\n\tfunction isFunction(obj) {\n\t    return typeof obj === 'function';\n\t}\n\t\n\tfunction isObject(obj) {\n\t    return obj !== null && typeof obj === 'object';\n\t}\n\t\n\tfunction isPlainObject(obj) {\n\t    return isObject(obj) && Object.getPrototypeOf(obj) === Object.prototype;\n\t}\n\t\n\tfunction isWindow(obj) {\n\t    return isObject(obj) && obj === obj.window;\n\t}\n\t\n\tfunction isDocument(obj) {\n\t    return isObject(obj) && obj.nodeType === 9;\n\t}\n\t\n\tfunction isJQuery(obj) {\n\t    return isObject(obj) && !!obj.jquery;\n\t}\n\t\n\tfunction isNode(element) {\n\t    return element instanceof Node || isObject(element) && element.nodeType === 1;\n\t}\n\t\n\tfunction isNodeCollection(element) {\n\t    return element instanceof NodeList || element instanceof HTMLCollection;\n\t}\n\t\n\tfunction isBoolean(value) {\n\t    return typeof value === 'boolean';\n\t}\n\t\n\tfunction isString(value) {\n\t    return typeof value === 'string';\n\t}\n\t\n\tfunction isNumber(value) {\n\t    return typeof value === 'number';\n\t}\n\t\n\tfunction isNumeric(value) {\n\t    return isNumber(value) || isString(value) && !isNaN(value - parseFloat(value));\n\t}\n\t\n\tfunction isUndefined(value) {\n\t    return value === void 0;\n\t}\n\t\n\tfunction toBoolean(value) {\n\t    return isBoolean(value)\n\t        ? value\n\t        : value === 'true' || value === '1' || value === ''\n\t            ? true\n\t            : value === 'false' || value === '0'\n\t                ? false\n\t                : value;\n\t}\n\t\n\tfunction toNumber(value) {\n\t    var number = Number(value);\n\t    return !isNaN(number) ? number : false;\n\t}\n\t\n\tfunction toFloat(value) {\n\t    return parseFloat(value) || 0;\n\t}\n\t\n\tfunction toNode(element) {\n\t    return isNode(element) || isWindow(element) || isDocument(element)\n\t        ? element\n\t        : isNodeCollection(element) || isJQuery(element)\n\t            ? element[0]\n\t            : isArray(element)\n\t                ? toNode(element[0])\n\t                : null;\n\t}\n\t\n\tvar arrayProto = Array.prototype;\n\tfunction toNodes(element) {\n\t    return isNode(element)\n\t        ? [element]\n\t        : isNodeCollection(element)\n\t            ? arrayProto.slice.call(element)\n\t            : isArray(element)\n\t                ? element.map(toNode).filter(Boolean)\n\t                : isJQuery(element)\n\t                    ? element.toArray()\n\t                    : [];\n\t}\n\t\n\tfunction toList(value) {\n\t    return isArray(value)\n\t        ? value\n\t        : isString(value)\n\t            ? value.split(/,(?![^(]*\\))/).map(function (value) { return isNumeric(value)\n\t                ? toNumber(value)\n\t                : toBoolean(value.trim()); })\n\t            : [value];\n\t}\n\t\n\tfunction toMs(time) {\n\t    return !time\n\t        ? 0\n\t        : endsWith(time, 'ms')\n\t            ? toFloat(time)\n\t            : toFloat(time) * 1000;\n\t}\n\t\n\tfunction swap(value, a, b) {\n\t    return value.replace(new RegExp((a + \"|\" + b), 'mg'), function (match) {\n\t        return match === a ? b : a;\n\t    });\n\t}\n\t\n\tvar assign = Object.assign || function (target) {\n\t    var args = [], len = arguments.length - 1;\n\t    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\t\n\t    target = Object(target);\n\t    for (var i = 0; i < args.length; i++) {\n\t        var source = args[i];\n\t        if (source !== null) {\n\t            for (var key in source) {\n\t                if (hasOwn(source, key)) {\n\t                    target[key] = source[key];\n\t                }\n\t            }\n\t        }\n\t    }\n\t    return target;\n\t};\n\t\n\tfunction each(obj, cb) {\n\t    for (var key in obj) {\n\t        if (cb.call(obj[key], obj[key], key) === false) {\n\t            break;\n\t        }\n\t    }\n\t}\n\t\n\tfunction sortBy(collection, prop) {\n\t    return collection.sort(function (a, b) { return a[prop] > b[prop]\n\t            ? 1\n\t            : b[prop] > a[prop]\n\t                ? -1\n\t                : 0; }\n\t    );\n\t}\n\t\n\tfunction clamp(number, min, max) {\n\t    if ( min === void 0 ) min = 0;\n\t    if ( max === void 0 ) max = 1;\n\t\n\t    return Math.min(Math.max(number, min), max);\n\t}\n\t\n\tfunction noop() {}\n\t\n\tfunction intersectRect(r1, r2) {\n\t    return r1.left <= r2.right &&\n\t        r2.left <= r1.right &&\n\t        r1.top <= r2.bottom &&\n\t        r2.top <= r1.bottom;\n\t}\n\t\n\tfunction pointInRect(point, rect) {\n\t    return intersectRect({top: point.y, bottom: point.y, left: point.x, right: point.x}, rect);\n\t}\n\t\n\tvar Dimensions = {\n\t\n\t    ratio: function ratio(dimensions, prop, value) {\n\t        var obj;\n\t\n\t\n\t        var aProp = prop === 'width' ? 'height' : 'width';\n\t\n\t        return ( obj = {}, obj[aProp] = Math.round(value * dimensions[aProp] / dimensions[prop]), obj[prop] = value, obj);\n\t    },\n\t\n\t    contain: function contain(dimensions, maxDimensions) {\n\t        var this$1 = this;\n\t\n\t        dimensions = assign({}, dimensions);\n\t\n\t        each(dimensions, function (_, prop) { return dimensions = dimensions[prop] > maxDimensions[prop]\n\t            ? this$1.ratio(dimensions, prop, maxDimensions[prop])\n\t            : dimensions; }\n\t        );\n\t\n\t        return dimensions;\n\t    },\n\t\n\t    cover: function cover(dimensions, maxDimensions) {\n\t        var this$1 = this;\n\t\n\t        dimensions = this.contain(dimensions, maxDimensions);\n\t\n\t        each(dimensions, function (_, prop) { return dimensions = dimensions[prop] < maxDimensions[prop]\n\t            ? this$1.ratio(dimensions, prop, maxDimensions[prop])\n\t            : dimensions; }\n\t        );\n\t\n\t        return dimensions;\n\t    }\n\t\n\t};\n\t\n\tfunction attr(element, name, value) {\n\t\n\t    if (isObject(name)) {\n\t        for (var key in name) {\n\t            attr(element, key, name[key]);\n\t        }\n\t        return;\n\t    }\n\t\n\t    if (isUndefined(value)) {\n\t        element = toNode(element);\n\t        return element && element.getAttribute(name);\n\t    } else {\n\t        toNodes(element).forEach(function (element) {\n\t\n\t            if (isFunction(value)) {\n\t                value = value.call(element, attr(element, name));\n\t            }\n\t\n\t            if (value === null) {\n\t                removeAttr(element, name);\n\t            } else {\n\t                element.setAttribute(name, value);\n\t            }\n\t        });\n\t    }\n\t\n\t}\n\t\n\tfunction hasAttr(element, name) {\n\t    return toNodes(element).some(function (element) { return element.hasAttribute(name); });\n\t}\n\t\n\tfunction removeAttr(element, name) {\n\t    element = toNodes(element);\n\t    name.split(' ').forEach(function (name) { return element.forEach(function (element) { return element.removeAttribute(name); }\n\t        ); }\n\t    );\n\t}\n\t\n\tfunction filterAttr(element, attribute, pattern, replacement) {\n\t    attr(element, attribute, function (value) { return value ? value.replace(pattern, replacement) : value; });\n\t}\n\t\n\tfunction data(element, attribute) {\n\t    for (var i = 0, attrs = [attribute, (\"data-\" + attribute)]; i < attrs.length; i++) {\n\t        if (hasAttr(element, attrs[i])) {\n\t            return attr(element, attrs[i]);\n\t        }\n\t    }\n\t}\n\t\n\t/* global setImmediate */\n\tvar Promise = 'Promise' in window ? window.Promise : PromiseFn;\n\t\n\tvar Deferred = function Deferred() {\n\t    var this$1 = this;\n\t\n\t    this.promise = new Promise(function (resolve, reject) {\n\t        this$1.reject = reject;\n\t        this$1.resolve = resolve;\n\t    });\n\t};\n\t\n\t/**\n\t * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n\t */\n\t\n\tvar RESOLVED = 0;\n\tvar REJECTED = 1;\n\tvar PENDING = 2;\n\t\n\tvar async = 'setImmediate' in window ? setImmediate : setTimeout;\n\t\n\tfunction PromiseFn(executor) {\n\t\n\t    this.state = PENDING;\n\t    this.value = undefined;\n\t    this.deferred = [];\n\t\n\t    var promise = this;\n\t\n\t    try {\n\t        executor(function (x) {\n\t            promise.resolve(x);\n\t        }, function (r) {\n\t            promise.reject(r);\n\t        });\n\t    } catch (e) {\n\t        promise.reject(e);\n\t    }\n\t}\n\t\n\tPromiseFn.reject = function (r) {\n\t    return new PromiseFn(function (resolve, reject) {\n\t        reject(r);\n\t    });\n\t};\n\t\n\tPromiseFn.resolve = function (x) {\n\t    return new PromiseFn(function (resolve, reject) {\n\t        resolve(x);\n\t    });\n\t};\n\t\n\tPromiseFn.all = function all(iterable) {\n\t    return new PromiseFn(function (resolve, reject) {\n\t        var result = [];\n\t        var count = 0;\n\t\n\t        if (iterable.length === 0) {\n\t            resolve(result);\n\t        }\n\t\n\t        function resolver(i) {\n\t            return function (x) {\n\t                result[i] = x;\n\t                count += 1;\n\t\n\t                if (count === iterable.length) {\n\t                    resolve(result);\n\t                }\n\t            };\n\t        }\n\t\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            PromiseFn.resolve(iterable[i]).then(resolver(i), reject);\n\t        }\n\t    });\n\t};\n\t\n\tPromiseFn.race = function race(iterable) {\n\t    return new PromiseFn(function (resolve, reject) {\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            PromiseFn.resolve(iterable[i]).then(resolve, reject);\n\t        }\n\t    });\n\t};\n\t\n\tvar p = PromiseFn.prototype;\n\t\n\tp.resolve = function resolve(x) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (x === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        var called = false;\n\t\n\t        try {\n\t            var then = x && x.then;\n\t\n\t            if (x !== null && isObject(x) && isFunction(then)) {\n\t                then.call(x, function (x) {\n\t                    if (!called) {\n\t                        promise.resolve(x);\n\t                    }\n\t                    called = true;\n\t\n\t                }, function (r) {\n\t                    if (!called) {\n\t                        promise.reject(r);\n\t                    }\n\t                    called = true;\n\t                });\n\t                return;\n\t            }\n\t        } catch (e) {\n\t            if (!called) {\n\t                promise.reject(e);\n\t            }\n\t            return;\n\t        }\n\t\n\t        promise.state = RESOLVED;\n\t        promise.value = x;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp.reject = function reject(reason) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (reason === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        promise.state = REJECTED;\n\t        promise.value = reason;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp.notify = function notify() {\n\t    var this$1 = this;\n\t\n\t    async(function () {\n\t        if (this$1.state !== PENDING) {\n\t            while (this$1.deferred.length) {\n\t                var ref = this$1.deferred.shift();\n\t                var onResolved = ref[0];\n\t                var onRejected = ref[1];\n\t                var resolve = ref[2];\n\t                var reject = ref[3];\n\t\n\t                try {\n\t                    if (this$1.state === RESOLVED) {\n\t                        if (isFunction(onResolved)) {\n\t                            resolve(onResolved.call(undefined, this$1.value));\n\t                        } else {\n\t                            resolve(this$1.value);\n\t                        }\n\t                    } else if (this$1.state === REJECTED) {\n\t                        if (isFunction(onRejected)) {\n\t                            resolve(onRejected.call(undefined, this$1.value));\n\t                        } else {\n\t                            reject(this$1.value);\n\t                        }\n\t                    }\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            }\n\t        }\n\t    });\n\t};\n\t\n\tp.then = function then(onResolved, onRejected) {\n\t    var this$1 = this;\n\t\n\t    return new PromiseFn(function (resolve, reject) {\n\t        this$1.deferred.push([onResolved, onRejected, resolve, reject]);\n\t        this$1.notify();\n\t    });\n\t};\n\t\n\tp.catch = function (onRejected) {\n\t    return this.then(undefined, onRejected);\n\t};\n\t\n\t/* global DocumentTouch */\n\tvar win = window;\n\tvar doc = document;\n\tvar docEl = doc.documentElement;\n\t\n\tvar isRtl = attr(docEl, 'dir') === 'rtl';\n\t\n\tvar Observer = win.MutationObserver;\n\t\n\tvar hasTouchEvents = 'ontouchstart' in win;\n\tvar hasPointerEvents = win.PointerEvent;\n\tvar hasTouch = hasTouchEvents\n\t    || win.DocumentTouch && doc instanceof DocumentTouch\n\t    || navigator.maxTouchPoints; // IE >=11\n\t\n\tvar pointerDown = !hasTouch ? 'mousedown' : (\"mousedown \" + (hasTouchEvents ? 'touchstart' : 'pointerdown'));\n\tvar pointerMove = !hasTouch ? 'mousemove' : (\"mousemove \" + (hasTouchEvents ? 'touchmove' : 'pointermove'));\n\tvar pointerUp = !hasTouch ? 'mouseup' : (\"mouseup \" + (hasTouchEvents ? 'touchend' : 'pointerup'));\n\tvar pointerEnter = hasTouch && hasPointerEvents ? 'pointerenter' : 'mouseenter';\n\tvar pointerLeave = hasTouch && hasPointerEvents ? 'pointerleave' : 'mouseleave';\n\t\n\tfunction getImage(src) {\n\t\n\t    return new Promise(function (resolve, reject) {\n\t        var img = new Image();\n\t\n\t        img.onerror = reject;\n\t        img.onload = function () { return resolve(img); };\n\t\n\t        img.src = src;\n\t    });\n\t\n\t}\n\t\n\tvar supports = {};\n\t\n\t// IE 11\n\t(function () {\n\t\n\t    var list = doc.createElement('_').classList;\n\t    if (list) {\n\t        list.add('a', 'b');\n\t        list.toggle('c', false);\n\t        supports.Multiple = list.contains('b');\n\t        supports.Force = !list.contains('c');\n\t        supports.ClassList = true;\n\t    }\n\t    list = null;\n\t\n\t})();\n\t\n\tfunction query(selector, context) {\n\t    return toNode(selector) || find(selector, isContextSelector(selector) ? context : doc);\n\t}\n\t\n\tfunction queryAll(selector, context) {\n\t    var nodes = toNodes(selector);\n\t    return nodes.length && nodes || findAll(selector, isContextSelector(selector) ? context : doc);\n\t}\n\t\n\tfunction find(selector, context) {\n\t    return toNode(_query(selector, context, 'querySelector'));\n\t}\n\t\n\tfunction findAll(selector, context) {\n\t    return toNodes(_query(selector, context, 'querySelectorAll'));\n\t}\n\t\n\tfunction _query(selector, context, queryFn) {\n\t    if ( context === void 0 ) context = doc;\n\t\n\t\n\t    if (!selector || !isString(selector)) {\n\t        return null;\n\t    }\n\t\n\t    selector = selector.replace(contextSanitizeRe, '$1 *');\n\t\n\t    var removes;\n\t\n\t    if (isContextSelector(selector)) {\n\t\n\t        removes = [];\n\t\n\t        selector = selector.split(',').map(function (selector, i) {\n\t\n\t            var ctx = context;\n\t\n\t            selector = selector.trim();\n\t\n\t            if (selector[0] === '!') {\n\t\n\t                var selectors = selector.substr(1).trim().split(' ');\n\t                ctx = closest(context.parentNode, selectors[0]);\n\t                selector = selectors.slice(1).join(' ');\n\t\n\t            }\n\t\n\t            if (!ctx) {\n\t                return null;\n\t            }\n\t\n\t            if (!ctx.id) {\n\t                ctx.id = \"uk-\" + (Date.now()) + i;\n\t                removes.push(function () { return removeAttr(ctx, 'id'); });\n\t            }\n\t\n\t            return (\"#\" + (escape(ctx.id)) + \" \" + selector);\n\t\n\t        }).filter(Boolean).join(',');\n\t\n\t        context = doc;\n\t\n\t    }\n\t\n\t    try {\n\t\n\t        return context[queryFn](selector);\n\t\n\t    } catch (e) {\n\t\n\t        return null;\n\t\n\t    } finally {\n\t\n\t        removes && removes.forEach(function (remove) { return remove(); });\n\t\n\t    }\n\t\n\t}\n\t\n\tvar contextSelectorRe = /(^|,)\\s*[!>+~]/;\n\tvar contextSanitizeRe = /([!>+~])(?=\\s+[!>+~]|\\s*$)/g;\n\t\n\tfunction isContextSelector(selector) {\n\t    return isString(selector) && selector.match(contextSelectorRe);\n\t}\n\t\n\tvar elProto = Element.prototype;\n\tvar matchesFn = elProto.matches || elProto.webkitMatchesSelector || elProto.msMatchesSelector;\n\t\n\tfunction matches(element, selector) {\n\t    return toNodes(element).some(function (element) { return matchesFn.call(element, selector); });\n\t}\n\t\n\tvar closestFn = elProto.closest || function (selector) {\n\t    var ancestor = this;\n\t\n\t    do {\n\t\n\t        if (matches(ancestor, selector)) {\n\t            return ancestor;\n\t        }\n\t\n\t        ancestor = ancestor.parentNode;\n\t\n\t    } while (ancestor && ancestor.nodeType === 1);\n\t};\n\t\n\tfunction closest(element, selector) {\n\t\n\t    if (startsWith(selector, '>')) {\n\t        selector = selector.slice(1);\n\t    }\n\t\n\t    return isNode(element)\n\t        ? element.parentNode && closestFn.call(element, selector)\n\t        : toNodes(element).map(function (element) { return element.parentNode && closestFn.call(element, selector); }).filter(Boolean);\n\t}\n\t\n\tfunction parents(element, selector) {\n\t    var elements = [];\n\t    var parent = toNode(element).parentNode;\n\t\n\t    while (parent && parent.nodeType === 1) {\n\t\n\t        if (matches(parent, selector)) {\n\t            elements.push(parent);\n\t        }\n\t\n\t        parent = parent.parentNode;\n\t    }\n\t\n\t    return elements;\n\t}\n\t\n\tvar escapeFn = win.CSS && CSS.escape || function (css) { return css.replace(/([^\\x7f-\\uFFFF\\w-])/g, function (match) { return (\"\\\\\" + match); }); };\n\tfunction escape(css) {\n\t    return isString(css) ? escapeFn.call(null, css) : '';\n\t}\n\t\n\tvar voidElements = {\n\t    area: true,\n\t    base: true,\n\t    br: true,\n\t    col: true,\n\t    embed: true,\n\t    hr: true,\n\t    img: true,\n\t    input: true,\n\t    keygen: true,\n\t    link: true,\n\t    menuitem: true,\n\t    meta: true,\n\t    param: true,\n\t    source: true,\n\t    track: true,\n\t    wbr: true\n\t};\n\tfunction isVoidElement(element) {\n\t    return toNodes(element).some(function (element) { return voidElements[element.tagName.toLowerCase()]; });\n\t}\n\t\n\tfunction isVisible(element) {\n\t    return toNodes(element).some(function (element) { return element.offsetHeight || element.getBoundingClientRect().height; });\n\t}\n\t\n\tvar selInput = 'input,select,textarea,button';\n\tfunction isInput(element) {\n\t    return toNodes(element).some(function (element) { return matches(element, selInput); });\n\t}\n\t\n\tfunction filter(element, selector) {\n\t    return toNodes(element).filter(function (element) { return matches(element, selector); });\n\t}\n\t\n\tfunction within(element, selector) {\n\t    return !isString(selector)\n\t        ? element === selector || toNode(selector).contains(toNode(element))\n\t        : matches(element, selector) || closest(element, selector);\n\t}\n\t\n\tfunction on() {\n\t    var args = [], len = arguments.length;\n\t    while ( len-- ) args[ len ] = arguments[ len ];\n\t\n\t\n\t    var ref = getArgs(args);\n\t    var target = ref[0];\n\t    var type = ref[1];\n\t    var selector = ref[2];\n\t    var listener = ref[3];\n\t    var useCapture = ref[4];\n\t\n\t    target = toEventTarget(target);\n\t\n\t    if (selector) {\n\t        listener = delegate(target, selector, listener);\n\t    }\n\t\n\t    if (listener.length > 1) {\n\t        listener = detail(listener);\n\t    }\n\t\n\t    type.split(' ').forEach(function (type) { return target && target.addEventListener(type, listener, useCapture); });\n\t    return function () { return off(target, type, listener, useCapture); };\n\t}\n\t\n\tfunction off(target, type, listener, useCapture) {\n\t    if ( useCapture === void 0 ) useCapture = false;\n\t\n\t    target = toEventTarget(target);\n\t    target && type.split(' ').forEach(function (type) { return target.removeEventListener(type, listener, useCapture); });\n\t}\n\t\n\tfunction once() {\n\t    var args = [], len = arguments.length;\n\t    while ( len-- ) args[ len ] = arguments[ len ];\n\t\n\t\n\t    var ref = getArgs(args);\n\t    var element = ref[0];\n\t    var type = ref[1];\n\t    var selector = ref[2];\n\t    var listener = ref[3];\n\t    var useCapture = ref[4];\n\t    var condition = ref[5];\n\t    var off = on(element, type, selector, function (e) {\n\t        var result = !condition || condition(e);\n\t        if (result) {\n\t            off();\n\t            listener(e, result);\n\t        }\n\t    }, useCapture);\n\t\n\t    return off;\n\t}\n\t\n\tfunction trigger(target, event, detail) {\n\t    return toEventTargets(target).reduce(function (notCanceled, target) { return notCanceled && target.dispatchEvent(createEvent(event, true, true, detail)); }\n\t        , true);\n\t}\n\t\n\tfunction createEvent(e, bubbles, cancelable, detail) {\n\t    if ( bubbles === void 0 ) bubbles = true;\n\t    if ( cancelable === void 0 ) cancelable = false;\n\t\n\t    if (isString(e)) {\n\t        var event = document.createEvent('CustomEvent'); // IE 11\n\t        event.initCustomEvent(e, bubbles, cancelable, detail);\n\t        e = event;\n\t    }\n\t\n\t    return e;\n\t}\n\t\n\tfunction getArgs(args) {\n\t\n\t    if (isString(args[0])) {\n\t        args[0] = find(args[0]);\n\t    }\n\t\n\t    if (isFunction(args[2])) {\n\t        args.splice(2, 0, false);\n\t    }\n\t    return args;\n\t}\n\t\n\tfunction delegate(element, selector, listener) {\n\t    var this$1 = this;\n\t\n\t    return function (e) {\n\t\n\t        var target = e.target;\n\t        var current = selector[0] === '>'\n\t            ? findAll(selector, element).reverse().filter(function (element) { return within(target, element); })[0]\n\t            : closest(target, selector);\n\t\n\t        if (current) {\n\t            e.delegate = element;\n\t            e.current = current;\n\t\n\t            listener.call(this$1, e);\n\t        }\n\t    };\n\t}\n\t\n\tfunction detail(listener) {\n\t    return function (e) { return isArray(e.detail) ? listener.apply(listener, [e].concat(e.detail)) : listener(e); };\n\t}\n\t\n\tfunction isEventTarget(target) {\n\t    return 'EventTarget' in window\n\t        ? target instanceof EventTarget\n\t        : target && 'addEventListener' in target;\n\t}\n\t\n\tfunction toEventTarget(target) {\n\t    return isEventTarget(target) ? target : toNode(target);\n\t}\n\t\n\tfunction toEventTargets(target) {\n\t    return isEventTarget(target)\n\t        ? [target]\n\t        : isArray(target)\n\t            ? target.map(toEventTarget).filter(Boolean)\n\t            : toNodes(target);\n\t}\n\t\n\tfunction preventClick() {\n\t\n\t    var timer = setTimeout(once(document, 'click', function (e) {\n\t\n\t        e.preventDefault();\n\t        e.stopImmediatePropagation();\n\t\n\t        clearTimeout(timer);\n\t\n\t    }, true));\n\t\n\t}\n\t\n\tfunction ajax(url, options) {\n\t    return new Promise(function (resolve, reject) {\n\t\n\t        var env = assign({\n\t            data: null,\n\t            method: 'GET',\n\t            headers: {},\n\t            xhr: new XMLHttpRequest(),\n\t            beforeSend: noop,\n\t            responseType: ''\n\t        }, options);\n\t\n\t        env.beforeSend(env);\n\t\n\t        var xhr = env.xhr;\n\t\n\t        for (var prop in env) {\n\t            if (prop in xhr) {\n\t                try {\n\t\n\t                    xhr[prop] = env[prop];\n\t\n\t                } catch (e) {}\n\t            }\n\t        }\n\t\n\t        xhr.open(env.method.toUpperCase(), url);\n\t\n\t        for (var header in env.headers) {\n\t            xhr.setRequestHeader(header, env.headers[header]);\n\t        }\n\t\n\t        on(xhr, 'load', function () {\n\t\n\t            if (xhr.status === 0 || xhr.status >= 200 && xhr.status < 300 || xhr.status === 304) {\n\t                resolve(xhr);\n\t            } else {\n\t                reject(assign(Error(xhr.statusText), {\n\t                    xhr: xhr,\n\t                    status: xhr.status\n\t                }));\n\t            }\n\t\n\t        });\n\t\n\t        on(xhr, 'error', function () { return reject(assign(Error('Network Error'), {xhr: xhr})); });\n\t        on(xhr, 'timeout', function () { return reject(assign(Error('Network Timeout'), {xhr: xhr})); });\n\t\n\t        xhr.send(env.data);\n\t    });\n\t}\n\t\n\tfunction isReady() {\n\t    return doc.readyState === 'complete' || doc.readyState !== 'loading' && !docEl.doScroll;\n\t}\n\t\n\tfunction ready(fn) {\n\t\n\t    if (isReady()) {\n\t        fn();\n\t        return;\n\t    }\n\t\n\t    var handle = function () {\n\t        unbind1();\n\t        unbind2();\n\t        fn();\n\t    };\n\t    var unbind1 = on(doc, 'DOMContentLoaded', handle);\n\t    var unbind2 = on(win, 'load', handle);\n\t}\n\t\n\tfunction index(element, ref) {\n\t    return ref\n\t        ? toNodes(element).indexOf(toNode(ref))\n\t        : toNodes((element = toNode(element)) && element.parentNode.children).indexOf(element);\n\t}\n\t\n\tfunction getIndex(i, elements, current, finite) {\n\t    if ( current === void 0 ) current = 0;\n\t    if ( finite === void 0 ) finite = false;\n\t\n\t\n\t    elements = toNodes(elements);\n\t\n\t    var length = elements.length;\n\t\n\t    i = isNumeric(i)\n\t        ? toNumber(i)\n\t        : i === 'next'\n\t            ? current + 1\n\t            : i === 'previous'\n\t                ? current - 1\n\t                : index(elements, i);\n\t\n\t    if (finite) {\n\t        return clamp(i, 0, length - 1);\n\t    }\n\t\n\t    i %= length;\n\t\n\t    return i < 0 ? i + length : i;\n\t}\n\t\n\tfunction empty(element) {\n\t    element = toNode(element);\n\t    element.innerHTML = '';\n\t    return element;\n\t}\n\t\n\tfunction html(parent, html) {\n\t    parent = toNode(parent);\n\t    return isUndefined(html)\n\t        ? parent.innerHTML\n\t        : append(parent.hasChildNodes() ? empty(parent) : parent, html);\n\t}\n\t\n\tfunction prepend(parent, element) {\n\t\n\t    parent = toNode(parent);\n\t\n\t    if (!parent.hasChildNodes()) {\n\t        return append(parent, element);\n\t    } else {\n\t        return insertNodes(element, function (element) { return parent.insertBefore(element, parent.firstChild); });\n\t    }\n\t}\n\t\n\tfunction append(parent, element) {\n\t    parent = toNode(parent);\n\t    return insertNodes(element, function (element) { return parent.appendChild(element); });\n\t}\n\t\n\tfunction before(ref, element) {\n\t    ref = toNode(ref);\n\t    return insertNodes(element, function (element) { return ref.parentNode.insertBefore(element, ref); });\n\t}\n\t\n\tfunction after(ref, element) {\n\t    ref = toNode(ref);\n\t    return insertNodes(element, function (element) { return ref.nextSibling\n\t        ? before(ref.nextSibling, element)\n\t        : append(ref.parentNode, element); }\n\t    );\n\t}\n\t\n\tfunction insertNodes(element, fn) {\n\t    element = isString(element) ? fragment(element) : element;\n\t    return element\n\t        ? 'length' in element\n\t            ? toNodes(element).map(fn)\n\t            : fn(element)\n\t        : null;\n\t}\n\t\n\tfunction remove(element) {\n\t    toNodes(element).map(function (element) { return element.parentNode && element.parentNode.removeChild(element); });\n\t}\n\t\n\tfunction wrapAll(element, structure) {\n\t\n\t    structure = toNode(before(element, structure));\n\t\n\t    while (structure.firstChild) {\n\t        structure = structure.firstChild;\n\t    }\n\t\n\t    append(structure, element);\n\t\n\t    return structure;\n\t}\n\t\n\tfunction wrapInner(element, structure) {\n\t    return toNodes(toNodes(element).map(function (element) { return element.hasChildNodes ? wrapAll(toNodes(element.childNodes), structure) : append(element, structure); }\n\t    ));\n\t}\n\t\n\tfunction unwrap(element) {\n\t    toNodes(element)\n\t        .map(function (element) { return element.parentNode; })\n\t        .filter(function (value, index, self) { return self.indexOf(value) === index; })\n\t        .forEach(function (parent) {\n\t            before(parent, parent.childNodes);\n\t            remove(parent);\n\t        });\n\t}\n\t\n\tvar fragmentRE = /^\\s*<(\\w+|!)[^>]*>/;\n\tvar singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>)?$/;\n\t\n\tfunction fragment(html) {\n\t\n\t    var matches = singleTagRE.exec(html);\n\t    if (matches) {\n\t        return doc.createElement(matches[1]);\n\t    }\n\t\n\t    var container = doc.createElement('div');\n\t    if (fragmentRE.test(html)) {\n\t        container.insertAdjacentHTML('beforeend', html.trim());\n\t    } else {\n\t        container.textContent = html;\n\t    }\n\t\n\t    return container.childNodes.length > 1 ? toNodes(container.childNodes) : container.firstChild;\n\t\n\t}\n\t\n\tfunction addClass(element) {\n\t    var args = [], len = arguments.length - 1;\n\t    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\t\n\t    apply(element, args, 'add');\n\t}\n\t\n\tfunction removeClass(element) {\n\t    var args = [], len = arguments.length - 1;\n\t    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\t\n\t    apply(element, args, 'remove');\n\t}\n\t\n\tfunction removeClasses(element, cls) {\n\t    filterAttr(element, 'class', new RegExp((\"(^|\\\\s)\" + cls + \"(?!\\\\S)\"), 'g'), '');\n\t}\n\t\n\tfunction replaceClass(element) {\n\t    var args = [], len = arguments.length - 1;\n\t    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\t\n\t    args[0] && removeClass(element, args[0]);\n\t    args[1] && addClass(element, args[1]);\n\t}\n\t\n\tfunction hasClass(element, cls) {\n\t    return supports.ClassList && toNodes(element).some(function (element) { return element.classList.contains(cls); });\n\t}\n\t\n\tfunction toggleClass(element) {\n\t    var args = [], len = arguments.length - 1;\n\t    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\t\n\t\n\t    if (!supports.ClassList || !args.length) {\n\t        return;\n\t    }\n\t\n\t    args = getArgs$1(args);\n\t\n\t    var force = !isString(args[args.length - 1]) ? args.pop() : []; // in iOS 9.3 force === undefined evaluates to false\n\t\n\t    args = args.filter(Boolean);\n\t\n\t    toNodes(element).forEach(function (ref) {\n\t        var classList = ref.classList;\n\t\n\t        for (var i = 0; i < args.length; i++) {\n\t            supports.Force\n\t                ? classList.toggle.apply(classList, [args[i]].concat(force))\n\t                : (classList[(!isUndefined(force) ? force : !classList.contains(args[i])) ? 'add' : 'remove'](args[i]));\n\t        }\n\t    });\n\t\n\t}\n\t\n\tfunction apply(element, args, fn) {\n\t    args = getArgs$1(args).filter(Boolean);\n\t\n\t    supports.ClassList && args.length && toNodes(element).forEach(function (ref) {\n\t        var classList = ref.classList;\n\t\n\t        supports.Multiple\n\t            ? classList[fn].apply(classList, args)\n\t            : args.forEach(function (cls) { return classList[fn](cls); });\n\t    });\n\t}\n\t\n\tfunction getArgs$1(args) {\n\t    return args.reduce(function (args, arg) { return args.concat.call(args, isString(arg) && includes(arg, ' ') ? arg.trim().split(' ') : arg); }\n\t        , []);\n\t}\n\t\n\tvar cssNumber = {\n\t    'animation-iteration-count': true,\n\t    'column-count': true,\n\t    'fill-opacity': true,\n\t    'flex-grow': true,\n\t    'flex-shrink': true,\n\t    'font-weight': true,\n\t    'line-height': true,\n\t    'opacity': true,\n\t    'order': true,\n\t    'orphans': true,\n\t    'widows': true,\n\t    'z-index': true,\n\t    'zoom': true\n\t};\n\t\n\tfunction css(element, property, value) {\n\t\n\t    return toNodes(element).map(function (element) {\n\t\n\t        if (isString(property)) {\n\t\n\t            property = propName(property);\n\t\n\t            if (isUndefined(value)) {\n\t                return getStyle(element, property);\n\t            } else if (!value && value !== 0) {\n\t                element.style.removeProperty(property);\n\t            } else {\n\t                element.style[property] = isNumeric(value) && !cssNumber[property] ? (value + \"px\") : value;\n\t            }\n\t\n\t        } else if (isArray(property)) {\n\t\n\t            var styles = getStyles(element);\n\t\n\t            return property.reduce(function (props, property) {\n\t                props[property] = styles[propName(property)];\n\t                return props;\n\t            }, {});\n\t\n\t        } else if (isObject(property)) {\n\t            each(property, function (value, property) { return css(element, property, value); });\n\t        }\n\t\n\t        return element;\n\t\n\t    })[0];\n\t\n\t}\n\t\n\tfunction getStyles(element, pseudoElt) {\n\t    element = toNode(element);\n\t    return element.ownerDocument.defaultView.getComputedStyle(element, pseudoElt);\n\t}\n\t\n\tfunction getStyle(element, property, pseudoElt) {\n\t    return getStyles(element, pseudoElt)[property];\n\t}\n\t\n\tvar vars = {};\n\t\n\tfunction getCssVar(name) {\n\t\n\t    if (!(name in vars)) {\n\t\n\t        /* usage in css: .var-name:before { content:\"xyz\" } */\n\t\n\t        var element = append(docEl, doc.createElement('div'));\n\t\n\t        addClass(element, (\"var-\" + name));\n\t\n\t        try {\n\t\n\t            vars[name] = getStyle(element, 'content', ':before').replace(/^[\"'](.*)[\"']$/, '$1');\n\t            vars[name] = JSON.parse(vars[name]);\n\t\n\t        } catch (e) {}\n\t\n\t        docEl.removeChild(element);\n\t\n\t    }\n\t\n\t    return vars[name];\n\t\n\t}\n\t\n\tvar cssProps = {};\n\t\n\tfunction propName(name) {\n\t\n\t    var ret = cssProps[name];\n\t    if (!ret) {\n\t        ret = cssProps[name] = vendorPropName(name) || name;\n\t    }\n\t    return ret;\n\t}\n\t\n\tvar cssPrefixes = ['webkit', 'moz', 'ms'];\n\tvar ref$1 = doc.createElement('_');\n\tvar style = ref$1.style;\n\t\n\tfunction vendorPropName(name) {\n\t\n\t    name = hyphenate(name);\n\t\n\t    if (name in style) {\n\t        return name;\n\t    }\n\t\n\t    var i = cssPrefixes.length, prefixedName;\n\t\n\t    while (i--) {\n\t        prefixedName = \"-\" + (cssPrefixes[i]) + \"-\" + name;\n\t        if (prefixedName in style) {\n\t            return prefixedName;\n\t        }\n\t    }\n\t}\n\t\n\tfunction transition(element, props, duration, timing) {\n\t    if ( duration === void 0 ) duration = 400;\n\t    if ( timing === void 0 ) timing = 'linear';\n\t\n\t\n\t    return Promise.all(toNodes(element).map(function (element) { return new Promise(function (resolve, reject) {\n\t\n\t            for (var name in props) {\n\t                var value = css(element, name);\n\t                if (value === '') {\n\t                    css(element, name, value);\n\t                }\n\t            }\n\t\n\t            var timer = setTimeout(function () { return trigger(element, 'transitionend'); }, duration);\n\t\n\t            once(element, 'transitionend transitioncanceled', function (ref) {\n\t                var type = ref.type;\n\t\n\t                clearTimeout(timer);\n\t                removeClass(element, 'uk-transition');\n\t                css(element, {\n\t                    'transition-property': '',\n\t                    'transition-duration': '',\n\t                    'transition-timing-function': ''\n\t                });\n\t                type === 'transitioncanceled' ? reject() : resolve();\n\t            }, false, function (ref) {\n\t                var target = ref.target;\n\t\n\t                return element === target;\n\t            });\n\t\n\t            addClass(element, 'uk-transition');\n\t            css(element, assign({\n\t                'transition-property': Object.keys(props).map(propName).join(','),\n\t                'transition-duration': (duration + \"ms\"),\n\t                'transition-timing-function': timing\n\t            }, props));\n\t\n\t        }); }\n\t    ));\n\t\n\t}\n\t\n\tvar Transition = {\n\t\n\t    start: transition,\n\t\n\t    stop: function stop(element) {\n\t        trigger(element, 'transitionend');\n\t        return Promise.resolve();\n\t    },\n\t\n\t    cancel: function cancel(element) {\n\t        trigger(element, 'transitioncanceled');\n\t    },\n\t\n\t    inProgress: function inProgress(element) {\n\t        return hasClass(element, 'uk-transition');\n\t    }\n\t\n\t};\n\t\n\tvar animationPrefix = 'uk-animation-';\n\tvar clsCancelAnimation = 'uk-cancel-animation';\n\t\n\tfunction animate(element, animation, duration, origin, out) {\n\t    var arguments$1 = arguments;\n\t    if ( duration === void 0 ) duration = 200;\n\t\n\t\n\t    return Promise.all(toNodes(element).map(function (element) { return new Promise(function (resolve, reject) {\n\t\n\t            if (hasClass(element, clsCancelAnimation)) {\n\t                requestAnimationFrame(function () { return Promise.resolve().then(function () { return animate.apply(void 0, arguments$1).then(resolve, reject); }\n\t                    ); }\n\t                );\n\t                return;\n\t            }\n\t\n\t            var cls = animation + \" \" + animationPrefix + (out ? 'leave' : 'enter');\n\t\n\t            if (startsWith(animation, animationPrefix)) {\n\t\n\t                if (origin) {\n\t                    cls += \" uk-transform-origin-\" + origin;\n\t                }\n\t\n\t                if (out) {\n\t                    cls += \" \" + animationPrefix + \"reverse\";\n\t                }\n\t\n\t            }\n\t\n\t            reset();\n\t\n\t            once(element, 'animationend animationcancel', function (ref) {\n\t                var type = ref.type;\n\t\n\t\n\t                var hasReset = false;\n\t\n\t                if (type === 'animationcancel') {\n\t                    reject();\n\t                    reset();\n\t                } else {\n\t                    resolve();\n\t                    Promise.resolve().then(function () {\n\t                        hasReset = true;\n\t                        reset();\n\t                    });\n\t                }\n\t\n\t                requestAnimationFrame(function () {\n\t                    if (!hasReset) {\n\t                        addClass(element, clsCancelAnimation);\n\t\n\t                        requestAnimationFrame(function () { return removeClass(element, clsCancelAnimation); });\n\t                    }\n\t                });\n\t\n\t            }, false, function (ref) {\n\t                var target = ref.target;\n\t\n\t                return element === target;\n\t            });\n\t\n\t            css(element, 'animationDuration', (duration + \"ms\"));\n\t            addClass(element, cls);\n\t\n\t            function reset() {\n\t                css(element, 'animationDuration', '');\n\t                removeClasses(element, (animationPrefix + \"\\\\S*\"));\n\t            }\n\t\n\t        }); }\n\t    ));\n\t\n\t}\n\t\n\tvar inProgress = new RegExp((animationPrefix + \"(enter|leave)\"));\n\tvar Animation = {\n\t\n\t    in: function in$1(element, animation, duration, origin) {\n\t        return animate(element, animation, duration, origin, false);\n\t    },\n\t\n\t    out: function out(element, animation, duration, origin) {\n\t        return animate(element, animation, duration, origin, true);\n\t    },\n\t\n\t    inProgress: function inProgress$1(element) {\n\t        return inProgress.test(attr(element, 'class'));\n\t    },\n\t\n\t    cancel: function cancel(element) {\n\t        trigger(element, 'animationcancel');\n\t    }\n\t\n\t};\n\t\n\tfunction $(selector, context) {\n\t    return !isString(selector)\n\t        ? toNode(selector)\n\t        : isHtml(selector)\n\t            ? toNode(fragment(selector))\n\t            : find(selector, context);\n\t}\n\t\n\tfunction $$(selector, context) {\n\t    return !isString(selector)\n\t        ? toNodes(selector)\n\t        : isHtml(selector)\n\t            ? toNodes(fragment(selector))\n\t            : findAll(selector, context);\n\t}\n\t\n\tfunction isHtml(str) {\n\t    return str[0] === '<' || str.match(/^\\s*</);\n\t}\n\t\n\tvar dirs = {\n\t    width: ['x', 'left', 'right'],\n\t    height: ['y', 'top', 'bottom']\n\t};\n\t\n\tfunction positionAt(element, target, elAttach, targetAttach, elOffset, targetOffset, flip, boundary) {\n\t\n\t    elAttach = getPos(elAttach);\n\t    targetAttach = getPos(targetAttach);\n\t\n\t    var flipped = {element: elAttach, target: targetAttach};\n\t\n\t    if (!element || !target) {\n\t        return flipped;\n\t    }\n\t\n\t    var dim = getDimensions(element);\n\t    var targetDim = getDimensions(target);\n\t    var position = targetDim;\n\t\n\t    moveTo(position, elAttach, dim, -1);\n\t    moveTo(position, targetAttach, targetDim, 1);\n\t\n\t    elOffset = getOffsets(elOffset, dim.width, dim.height);\n\t    targetOffset = getOffsets(targetOffset, targetDim.width, targetDim.height);\n\t\n\t    elOffset['x'] += targetOffset['x'];\n\t    elOffset['y'] += targetOffset['y'];\n\t\n\t    position.left += elOffset['x'];\n\t    position.top += elOffset['y'];\n\t\n\t    boundary = getDimensions(boundary || window$1(element));\n\t\n\t    if (flip) {\n\t        each(dirs, function (ref, prop) {\n\t            var dir = ref[0];\n\t            var align = ref[1];\n\t            var alignFlip = ref[2];\n\t\n\t\n\t            if (!(flip === true || includes(flip, dir))) {\n\t                return;\n\t            }\n\t\n\t            var elemOffset = elAttach[dir] === align\n\t                ? -dim[prop]\n\t                : elAttach[dir] === alignFlip\n\t                    ? dim[prop]\n\t                    : 0;\n\t\n\t            var targetOffset = targetAttach[dir] === align\n\t                ? targetDim[prop]\n\t                : targetAttach[dir] === alignFlip\n\t                    ? -targetDim[prop]\n\t                    : 0;\n\t\n\t            if (position[align] < boundary[align] || position[align] + dim[prop] > boundary[alignFlip]) {\n\t\n\t                var centerOffset = dim[prop] / 2;\n\t                var centerTargetOffset = targetAttach[dir] === 'center' ? -targetDim[prop] / 2 : 0;\n\t\n\t                elAttach[dir] === 'center' && (\n\t                    apply(centerOffset, centerTargetOffset)\n\t                    || apply(-centerOffset, -centerTargetOffset)\n\t                ) || apply(elemOffset, targetOffset);\n\t\n\t            }\n\t\n\t            function apply(elemOffset, targetOffset) {\n\t\n\t                var newVal = position[align] + elemOffset + targetOffset - elOffset[dir] * 2;\n\t\n\t                if (newVal >= boundary[align] && newVal + dim[prop] <= boundary[alignFlip]) {\n\t                    position[align] = newVal;\n\t\n\t                    ['element', 'target'].forEach(function (el) {\n\t                        flipped[el][dir] = !elemOffset\n\t                            ? flipped[el][dir]\n\t                            : flipped[el][dir] === dirs[prop][1]\n\t                                ? dirs[prop][2]\n\t                                : dirs[prop][1];\n\t                    });\n\t\n\t                    return true;\n\t                }\n\t\n\t            }\n\t\n\t        });\n\t    }\n\t\n\t    offset(element, position);\n\t\n\t    return flipped;\n\t}\n\t\n\tfunction offset(element, coordinates) {\n\t\n\t    element = toNode(element);\n\t\n\t    if (coordinates) {\n\t\n\t        var currentOffset = offset(element);\n\t        var pos = css(element, 'position');\n\t\n\t        ['left', 'top'].forEach(function (prop) {\n\t            if (prop in coordinates) {\n\t                var value = css(element, prop);\n\t                element.style[prop] = ((coordinates[prop] - currentOffset[prop])\n\t                + toFloat(pos === 'absolute' && value === 'auto' ? position(element)[prop] : value)) + \"px\";\n\t            }\n\t        });\n\t\n\t        return;\n\t    }\n\t\n\t    return getDimensions(element);\n\t}\n\t\n\tfunction getDimensions(element) {\n\t\n\t    element = toNode(element);\n\t\n\t    var ref = window$1(element);\n\t    var top = ref.pageYOffset;\n\t    var left = ref.pageXOffset;\n\t\n\t    if (isWindow(element)) {\n\t\n\t        var height = element.innerHeight;\n\t        var width = element.innerWidth;\n\t\n\t        return {\n\t            top: top,\n\t            left: left,\n\t            height: height,\n\t            width: width,\n\t            bottom: top + height,\n\t            right: left + width,\n\t        };\n\t    }\n\t\n\t    var display = false;\n\t    if (!isVisible(element)) {\n\t        display = element.style.display;\n\t        element.style.display = 'block';\n\t    }\n\t\n\t    var rect = element.getBoundingClientRect();\n\t\n\t    if (display !== false) {\n\t        element.style.display = display;\n\t    }\n\t\n\t    return {\n\t        height: rect.height,\n\t        width: rect.width,\n\t        top: rect.top + top,\n\t        left: rect.left + left,\n\t        bottom: rect.bottom + top,\n\t        right: rect.right + left,\n\t    };\n\t}\n\t\n\tfunction position(element) {\n\t    element = toNode(element);\n\t\n\t    var parent = offsetParent(element);\n\t    var parentOffset = parent === docEl$1(element) ? {top: 0, left: 0} : offset(parent);\n\t    var ref = ['top', 'left'].reduce(function (props, prop) {\n\t        var propName$$1 = ucfirst(prop);\n\t        props[prop] -= parentOffset[prop]\n\t            + (toFloat(css(element, (\"margin\" + propName$$1))) || 0)\n\t            + (toFloat(css(parent, (\"border\" + propName$$1 + \"Width\"))) || 0);\n\t        return props;\n\t    }, offset(element));\n\t    var top = ref.top;\n\t    var left = ref.left;\n\t\n\t    return {top: top, left: left};\n\t}\n\t\n\tfunction offsetParent(element) {\n\t\n\t    var parent = toNode(element).offsetParent;\n\t\n\t    while (parent && css(parent, 'position') === 'static') {\n\t        parent = parent.offsetParent;\n\t    }\n\t\n\t    return parent || docEl$1(element);\n\t}\n\t\n\tvar height = dimension('height');\n\tvar width = dimension('width');\n\t\n\tfunction dimension(prop) {\n\t    var propName$$1 = ucfirst(prop);\n\t    return function (element, value) {\n\t\n\t        element = toNode(element);\n\t\n\t        if (isUndefined(value)) {\n\t\n\t            if (isWindow(element)) {\n\t                return element[(\"inner\" + propName$$1)];\n\t            }\n\t\n\t            if (isDocument(element)) {\n\t                var doc = element.documentElement;\n\t                return Math.max(doc.offsetHeight, doc.scrollHeight);\n\t            }\n\t\n\t            value = css(element, prop);\n\t            value = value === 'auto' ? element[(\"offset\" + propName$$1)] : toFloat(value) || 0;\n\t\n\t            return getContentSize(prop, element, value);\n\t\n\t        } else {\n\t\n\t            css(element, prop, !value && value !== 0\n\t                ? ''\n\t                : getContentSize(prop, element, value) + 'px'\n\t            );\n\t\n\t        }\n\t\n\t    };\n\t}\n\t\n\tfunction getContentSize(prop, element, value) {\n\t    return css(element, 'boxSizing') === 'border-box' ? dirs[prop].slice(1).map(ucfirst).reduce(function (value, prop) { return value\n\t        - toFloat(css(element, (\"padding\" + prop)))\n\t        - toFloat(css(element, (\"border\" + prop + \"Width\"))); }\n\t        , value) : value;\n\t}\n\t\n\tfunction moveTo(position, attach, dim, factor) {\n\t    each(dirs, function (ref, prop) {\n\t        var dir = ref[0];\n\t        var align = ref[1];\n\t        var alignFlip = ref[2];\n\t\n\t        if (attach[dir] === alignFlip) {\n\t            position[align] += dim[prop] * factor;\n\t        } else if (attach[dir] === 'center') {\n\t            position[align] += dim[prop] * factor / 2;\n\t        }\n\t    });\n\t}\n\t\n\tfunction getPos(pos) {\n\t\n\t    var x = /left|center|right/;\n\t    var y = /top|center|bottom/;\n\t\n\t    pos = (pos || '').split(' ');\n\t\n\t    if (pos.length === 1) {\n\t        pos = x.test(pos[0])\n\t            ? pos.concat(['center'])\n\t            : y.test(pos[0])\n\t                ? ['center'].concat(pos)\n\t                : ['center', 'center'];\n\t    }\n\t\n\t    return {\n\t        x: x.test(pos[0]) ? pos[0] : 'center',\n\t        y: y.test(pos[1]) ? pos[1] : 'center'\n\t    };\n\t}\n\t\n\tfunction getOffsets(offsets, width, height) {\n\t\n\t    var ref = (offsets || '').split(' ');\n\t    var x = ref[0];\n\t    var y = ref[1];\n\t\n\t    return {\n\t        x: x ? toFloat(x) * (endsWith(x, '%') ? width / 100 : 1) : 0,\n\t        y: y ? toFloat(y) * (endsWith(y, '%') ? height / 100 : 1) : 0\n\t    };\n\t}\n\t\n\tfunction flipPosition(pos) {\n\t    switch (pos) {\n\t        case 'left':\n\t            return 'right';\n\t        case 'right':\n\t            return 'left';\n\t        case 'top':\n\t            return 'bottom';\n\t        case 'bottom':\n\t            return 'top';\n\t        default:\n\t            return pos;\n\t    }\n\t}\n\t\n\tfunction isInView(element, top, left) {\n\t    if ( top === void 0 ) top = 0;\n\t    if ( left === void 0 ) left = 0;\n\t\n\t\n\t    element = toNode(element);\n\t\n\t    var win = window$1(element);\n\t    return intersectRect(element.getBoundingClientRect(), {\n\t        top: top,\n\t        left: left,\n\t        bottom: top + height(win),\n\t        right: left + width(win)\n\t    });\n\t}\n\t\n\tfunction scrolledOver(element) {\n\t\n\t    element = toNode(element);\n\t\n\t    var win = window$1(element);\n\t    var doc = document$1(element);\n\t    var elHeight = element.offsetHeight;\n\t    var top = positionTop(element);\n\t    var vp = height(win);\n\t    var vh = vp + Math.min(0, top - vp);\n\t    var diff = Math.max(0, vp - (height(doc) - (top + elHeight)));\n\t\n\t    return clamp(((vh + win.pageYOffset - top) / ((vh + (elHeight - (diff < vp ? diff : 0))) / 100)) / 100);\n\t}\n\t\n\tfunction positionTop(element) {\n\t    var top = 0;\n\t\n\t    do {\n\t\n\t        top += element.offsetTop;\n\t\n\t    } while ((element = element.offsetParent));\n\t\n\t    return top;\n\t}\n\t\n\tfunction window$1(element) {\n\t    return isWindow(element) ? element : document$1(element).defaultView;\n\t}\n\t\n\tfunction document$1(element) {\n\t    return toNode(element).ownerDocument;\n\t}\n\t\n\tfunction docEl$1(element) {\n\t    return document$1(element).documentElement;\n\t}\n\t\n\t/*\n\t    Based on:\n\t    Copyright (c) 2016 Wilson Page wilsonpage@me.com\n\t    https://github.com/wilsonpage/fastdom\n\t*/\n\t\n\tvar fastdom = {\n\t\n\t    reads: [],\n\t    writes: [],\n\t\n\t    read: function read(task) {\n\t        this.reads.push(task);\n\t        scheduleFlush();\n\t        return task;\n\t    },\n\t\n\t    write: function write(task) {\n\t        this.writes.push(task);\n\t        scheduleFlush();\n\t        return task;\n\t    },\n\t\n\t    clear: function clear(task) {\n\t        return remove$1(this.reads, task) || remove$1(this.writes, task);\n\t    },\n\t\n\t    flush: function flush() {\n\t\n\t        runTasks(this.reads);\n\t        runTasks(this.writes.splice(0, this.writes.length));\n\t\n\t        this.scheduled = false;\n\t\n\t        if (this.reads.length || this.writes.length) {\n\t            scheduleFlush();\n\t        }\n\t\n\t    }\n\t\n\t};\n\t\n\tfunction scheduleFlush() {\n\t    if (!fastdom.scheduled) {\n\t        fastdom.scheduled = true;\n\t        requestAnimationFrame(fastdom.flush.bind(fastdom));\n\t    }\n\t}\n\t\n\tfunction runTasks(tasks) {\n\t    var task;\n\t    while ((task = tasks.shift())) {\n\t        task();\n\t    }\n\t}\n\t\n\tfunction remove$1(array, item) {\n\t    var index = array.indexOf(item);\n\t    return !!~index && !!array.splice(index, 1);\n\t}\n\t\n\tfunction MouseTracker() {}\n\t\n\tMouseTracker.prototype = {\n\t\n\t    positions: [],\n\t    position: null,\n\t\n\t    init: function init() {\n\t        var this$1 = this;\n\t\n\t\n\t        this.positions = [];\n\t        this.position = null;\n\t\n\t        var ticking = false;\n\t        this.unbind = on(doc, 'mousemove', function (e) {\n\t\n\t            if (ticking) {\n\t                return;\n\t            }\n\t\n\t            setTimeout(function () {\n\t\n\t                var time = Date.now();\n\t                var ref = this$1.positions;\n\t                var length = ref.length;\n\t\n\t                if (length && (time - this$1.positions[length - 1].time > 100)) {\n\t                    this$1.positions.splice(0, length);\n\t                }\n\t\n\t                this$1.positions.push({time: time, x: e.pageX, y: e.pageY});\n\t\n\t                if (this$1.positions.length > 5) {\n\t                    this$1.positions.shift();\n\t                }\n\t\n\t                ticking = false;\n\t            }, 5);\n\t\n\t            ticking = true;\n\t        });\n\t\n\t    },\n\t\n\t    cancel: function cancel() {\n\t        if (this.unbind) {\n\t            this.unbind();\n\t        }\n\t    },\n\t\n\t    movesTo: function movesTo(target) {\n\t\n\t        if (this.positions.length < 2) {\n\t            return false;\n\t        }\n\t\n\t        var p = offset(target);\n\t        var position$$1 = this.positions[this.positions.length - 1];\n\t        var ref = this.positions;\n\t        var prevPos = ref[0];\n\t\n\t        if (p.left <= position$$1.x && position$$1.x <= p.right && p.top <= position$$1.y && position$$1.y <= p.bottom) {\n\t            return false;\n\t        }\n\t\n\t        var points = [\n\t            [{x: p.left, y: p.top}, {x: p.right, y: p.bottom}],\n\t            [{x: p.right, y: p.top}, {x: p.left, y: p.bottom}]\n\t        ];\n\t\n\t        if (p.right <= position$$1.x) {\n\t            // empty\n\t        } else if (p.left >= position$$1.x) {\n\t            points[0].reverse();\n\t            points[1].reverse();\n\t        } else if (p.bottom <= position$$1.y) {\n\t            points[0].reverse();\n\t        } else if (p.top >= position$$1.y) {\n\t            points[1].reverse();\n\t        }\n\t\n\t        return !!points.reduce(function (result, point) {\n\t            return result + (slope(prevPos, point[0]) < slope(position$$1, point[0]) && slope(prevPos, point[1]) > slope(position$$1, point[1]));\n\t        }, 0);\n\t    }\n\t\n\t};\n\t\n\tfunction slope(a, b) {\n\t    return (b.y - a.y) / (b.x - a.x);\n\t}\n\t\n\tvar strats = {};\n\t\n\t// concat strategy\n\tstrats.args =\n\tstrats.events =\n\tstrats.init =\n\tstrats.created =\n\tstrats.beforeConnect =\n\tstrats.connected =\n\tstrats.ready =\n\tstrats.beforeDisconnect =\n\tstrats.disconnected =\n\tstrats.destroy = function (parentVal, childVal) {\n\t\n\t    parentVal = parentVal && !isArray(parentVal) ? [parentVal] : parentVal;\n\t\n\t    return childVal\n\t        ? parentVal\n\t            ? parentVal.concat(childVal)\n\t            : isArray(childVal)\n\t                ? childVal\n\t                : [childVal]\n\t        : parentVal;\n\t};\n\t\n\t// update strategy\n\tstrats.update = function (parentVal, childVal) {\n\t    return strats.args(parentVal, isFunction(childVal) ? {read: childVal} : childVal);\n\t};\n\t\n\t// property strategy\n\tstrats.props = function (parentVal, childVal) {\n\t\n\t    if (isArray(childVal)) {\n\t        childVal = childVal.reduce(function (value, key) {\n\t            value[key] = String;\n\t            return value;\n\t        }, {});\n\t    }\n\t\n\t    return strats.methods(parentVal, childVal);\n\t};\n\t\n\t// extend strategy\n\tstrats.computed =\n\tstrats.defaults =\n\tstrats.methods = function (parentVal, childVal) {\n\t    return childVal\n\t        ? parentVal\n\t            ? assign({}, parentVal, childVal)\n\t            : childVal\n\t        : parentVal;\n\t};\n\t\n\t// default strategy\n\tvar defaultStrat = function (parentVal, childVal) {\n\t    return isUndefined(childVal) ? parentVal : childVal;\n\t};\n\t\n\tfunction mergeOptions(parent, child) {\n\t\n\t    var options = {};\n\t\n\t    if (child.mixins) {\n\t        for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t            parent = mergeOptions(parent, child.mixins[i]);\n\t        }\n\t    }\n\t\n\t    for (var key in parent) {\n\t        mergeKey(key);\n\t    }\n\t\n\t    for (var key$1 in child) {\n\t        if (!hasOwn(parent, key$1)) {\n\t            mergeKey(key$1);\n\t        }\n\t    }\n\t\n\t    function mergeKey(key) {\n\t        options[key] = (strats[key] || defaultStrat)(parent[key], child[key]);\n\t    }\n\t\n\t    return options;\n\t}\n\t\n\tvar id = 0;\n\t\n\tvar Player = function Player(el) {\n\t    this.id = ++id;\n\t    this.el = toNode(el);\n\t};\n\t\n\tPlayer.prototype.isVideo = function isVideo () {\n\t    return this.isYoutube() || this.isVimeo() || this.isHTML5();\n\t};\n\t\n\tPlayer.prototype.isHTML5 = function isHTML5 () {\n\t    return this.el.tagName === 'VIDEO';\n\t};\n\t\n\tPlayer.prototype.isIFrame = function isIFrame () {\n\t    return this.el.tagName === 'IFRAME';\n\t};\n\t\n\tPlayer.prototype.isYoutube = function isYoutube () {\n\t    return this.isIFrame() && !!this.el.src.match(/\\/\\/.*?youtube(-nocookie)?\\.[a-z]+\\/(watch\\?v=[^&\\s]+|embed)|youtu\\.be\\/.*/);\n\t};\n\t\n\tPlayer.prototype.isVimeo = function isVimeo () {\n\t    return this.isIFrame() && !!this.el.src.match(/vimeo\\.com\\/video\\/.*/);\n\t};\n\t\n\tPlayer.prototype.enableApi = function enableApi () {\n\t        var this$1 = this;\n\t\n\t\n\t    if (this.ready) {\n\t        return this.ready;\n\t    }\n\t\n\t    var youtube = this.isYoutube();\n\t    var vimeo = this.isVimeo();\n\t\n\t    var poller;\n\t\n\t    if (youtube || vimeo) {\n\t\n\t        return this.ready = new Promise(function (resolve) {\n\t\n\t            once(this$1.el, 'load', function () {\n\t                if (youtube) {\n\t                    var listener = function () { return post(this$1.el, {event: 'listening', id: this$1.id}); };\n\t                    poller = setInterval(listener, 100);\n\t                    listener();\n\t                }\n\t            });\n\t\n\t            listen(function (data$$1) { return youtube && data$$1.id === this$1.id && data$$1.event === 'onReady' || vimeo && Number(data$$1.player_id) === this$1.id; })\n\t                .then(function () {\n\t                    resolve();\n\t                    poller && clearInterval(poller);\n\t                });\n\t\n\t            attr(this$1.el, 'src', (\"\" + (this$1.el.src) + (includes(this$1.el.src, '?') ? '&' : '?') + (youtube ? 'enablejsapi=1' : (\"api=1&player_id=\" + id))));\n\t\n\t        });\n\t\n\t    }\n\t\n\t    return Promise.resolve();\n\t\n\t};\n\t\n\tPlayer.prototype.play = function play () {\n\t        var this$1 = this;\n\t\n\t\n\t    if (!this.isVideo()) {\n\t        return;\n\t    }\n\t\n\t    if (this.isIFrame()) {\n\t        this.enableApi().then(function () { return post(this$1.el, {func: 'playVideo', method: 'play'}); });\n\t    } else if (this.isHTML5()) {\n\t        try {\n\t            this.el.play();\n\t        } catch (e) {}\n\t    }\n\t};\n\t\n\tPlayer.prototype.pause = function pause () {\n\t        var this$1 = this;\n\t\n\t\n\t    if (!this.isVideo()) {\n\t        return;\n\t    }\n\t\n\t    if (this.isIFrame()) {\n\t        this.enableApi().then(function () { return post(this$1.el, {func: 'pauseVideo', method: 'pause'}); });\n\t    } else if (this.isHTML5()) {\n\t        this.el.pause();\n\t    }\n\t};\n\t\n\tPlayer.prototype.mute = function mute () {\n\t        var this$1 = this;\n\t\n\t\n\t    if (!this.isVideo()) {\n\t        return;\n\t    }\n\t\n\t    if (this.isIFrame()) {\n\t        this.enableApi().then(function () { return post(this$1.el, {func: 'mute', method: 'setVolume', value: 0}); });\n\t    } else if (this.isHTML5()) {\n\t        this.el.muted = true;\n\t        attr(this.el, 'muted', '');\n\t    }\n\t\n\t};\n\t\n\tfunction post(el, cmd) {\n\t    try {\n\t        el.contentWindow.postMessage(JSON.stringify(assign({event: 'command'}, cmd)), '*');\n\t    } catch (e) {}\n\t}\n\t\n\tfunction listen(cb) {\n\t\n\t    return new Promise(function (resolve) {\n\t\n\t        once(win, 'message', function (_, data$$1) { return resolve(data$$1); }, false, function (ref) {\n\t            var data$$1 = ref.data;\n\t\n\t\n\t            if (!data$$1 || !isString(data$$1)) {\n\t                return;\n\t            }\n\t\n\t            try {\n\t                data$$1 = JSON.parse(data$$1);\n\t            } catch (e) {\n\t                return;\n\t            }\n\t\n\t            return data$$1 && cb(data$$1);\n\t\n\t        });\n\t\n\t    });\n\t\n\t}\n\t\n\t/*\n\t    Based on:\n\t    Copyright (c) 2010-2016 Thomas Fuchs\n\t    http://zeptojs.com/\n\t*/\n\tvar touch = {};\n\tvar clickTimeout;\n\tvar swipeTimeout;\n\tvar tapTimeout;\n\tvar clicked;\n\t\n\tfunction swipeDirection(ref) {\n\t    var x1 = ref.x1;\n\t    var x2 = ref.x2;\n\t    var y1 = ref.y1;\n\t    var y2 = ref.y2;\n\t\n\t    return Math.abs(x1 - x2) >= Math.abs(y1 - y2) ? (x1 - x2 > 0 ? 'Left' : 'Right') : (y1 - y2 > 0 ? 'Up' : 'Down');\n\t}\n\t\n\tfunction cancelAll() {\n\t    clickTimeout && clearTimeout(clickTimeout);\n\t    swipeTimeout && clearTimeout(swipeTimeout);\n\t    tapTimeout && clearTimeout(tapTimeout);\n\t    clickTimeout = swipeTimeout = tapTimeout = null;\n\t    touch = {};\n\t}\n\t\n\tready(function () {\n\t\n\t    on(doc, 'click', function () { return clicked = true; }, true);\n\t\n\t    on(doc, pointerDown, function (e) {\n\t\n\t        var target = e.target;\n\t        var ref = getPos$1(e);\n\t        var x = ref.x;\n\t        var y = ref.y;\n\t        var now = Date.now();\n\t        var type = getType(e.type);\n\t\n\t        if (touch.type && touch.type !== type) {\n\t            return;\n\t        }\n\t\n\t        touch.el = 'tagName' in target ? target : target.parentNode;\n\t\n\t        clickTimeout && clearTimeout(clickTimeout);\n\t\n\t        touch.x1 = x;\n\t        touch.y1 = y;\n\t\n\t        if (touch.last && now - touch.last <= 250) {\n\t            touch = {};\n\t        }\n\t\n\t        touch.type = type;\n\t        touch.last = now;\n\t\n\t        clicked = e.button > 0;\n\t\n\t    });\n\t\n\t    on(doc, pointerMove, function (e) {\n\t\n\t        if (e.defaultPrevented) {\n\t            return;\n\t        }\n\t\n\t        var ref = getPos$1(e);\n\t        var x = ref.x;\n\t        var y = ref.y;\n\t\n\t        touch.x2 = x;\n\t        touch.y2 = y;\n\t\n\t    });\n\t\n\t    on(doc, pointerUp, function (ref) {\n\t        var type = ref.type;\n\t        var target = ref.target;\n\t\n\t\n\t        if (touch.type !== getType(type)) {\n\t            return;\n\t        }\n\t\n\t        // swipe\n\t        if (touch.x2 && Math.abs(touch.x1 - touch.x2) > 30 || touch.y2 && Math.abs(touch.y1 - touch.y2) > 30) {\n\t\n\t            swipeTimeout = setTimeout(function () {\n\t                if (touch.el) {\n\t                    trigger(touch.el, 'swipe');\n\t                    trigger(touch.el, (\"swipe\" + (swipeDirection(touch))));\n\t                }\n\t                touch = {};\n\t            });\n\t\n\t        // normal tap\n\t        } else if ('last' in touch) {\n\t\n\t            tapTimeout = setTimeout(function () { return trigger(touch.el, 'tap'); });\n\t\n\t            // trigger single click after 350ms of inactivity\n\t            if (touch.el && type !== 'mouseup' && within(target, touch.el)) {\n\t                clickTimeout = setTimeout(function () {\n\t                    clickTimeout = null;\n\t                    if (touch.el && !clicked) {\n\t                        trigger(touch.el, 'click');\n\t                    }\n\t                    touch = {};\n\t                }, 350);\n\t            }\n\t\n\t        } else {\n\t            touch = {};\n\t        }\n\t\n\t    });\n\t\n\t    on(doc, 'touchcancel', cancelAll);\n\t    on(win, 'scroll', cancelAll);\n\t\n\t});\n\t\n\tvar touching = false;\n\ton(doc, 'touchstart', function () { return touching = true; }, true);\n\ton(doc, 'click', function () {touching = false;});\n\ton(doc, 'touchcancel', function () { return touching = false; }, true);\n\t\n\tfunction isTouch(e) {\n\t    return touching || e.pointerType === 'touch';\n\t}\n\t\n\tfunction getPos$1(e) {\n\t    var touches = e.touches;\n\t    var changedTouches = e.changedTouches;\n\t    var ref = touches && touches[0] || changedTouches && changedTouches[0] || e;\n\t    var x = ref.pageX;\n\t    var y = ref.pageY;\n\t\n\t    return {x: x, y: y};\n\t}\n\t\n\tfunction getType(type) {\n\t    return type.slice(0, 5);\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tajax: ajax,\n\t\ttransition: transition,\n\t\tTransition: Transition,\n\t\tanimate: animate,\n\t\tAnimation: Animation,\n\t\tattr: attr,\n\t\thasAttr: hasAttr,\n\t\tremoveAttr: removeAttr,\n\t\tfilterAttr: filterAttr,\n\t\tdata: data,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\tremoveClasses: removeClasses,\n\t\treplaceClass: replaceClass,\n\t\thasClass: hasClass,\n\t\ttoggleClass: toggleClass,\n\t\t$: $,\n\t\t$$: $$,\n\t\tpositionAt: positionAt,\n\t\toffset: offset,\n\t\tposition: position,\n\t\theight: height,\n\t\twidth: width,\n\t\tflipPosition: flipPosition,\n\t\tisInView: isInView,\n\t\tscrolledOver: scrolledOver,\n\t\tisReady: isReady,\n\t\tready: ready,\n\t\tindex: index,\n\t\tgetIndex: getIndex,\n\t\tempty: empty,\n\t\thtml: html,\n\t\tprepend: prepend,\n\t\tappend: append,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\twrapAll: wrapAll,\n\t\twrapInner: wrapInner,\n\t\tunwrap: unwrap,\n\t\tfragment: fragment,\n\t\twin: win,\n\t\tdoc: doc,\n\t\tdocEl: docEl,\n\t\tisRtl: isRtl,\n\t\tObserver: Observer,\n\t\thasTouch: hasTouch,\n\t\tpointerDown: pointerDown,\n\t\tpointerMove: pointerMove,\n\t\tpointerUp: pointerUp,\n\t\tpointerEnter: pointerEnter,\n\t\tpointerLeave: pointerLeave,\n\t\tgetImage: getImage,\n\t\tsupports: supports,\n\t\ton: on,\n\t\toff: off,\n\t\tonce: once,\n\t\ttrigger: trigger,\n\t\tcreateEvent: createEvent,\n\t\ttoEventTargets: toEventTargets,\n\t\tpreventClick: preventClick,\n\t\tfastdom: fastdom,\n\t\tisVoidElement: isVoidElement,\n\t\tisVisible: isVisible,\n\t\tselInput: selInput,\n\t\tisInput: isInput,\n\t\tfilter: filter,\n\t\twithin: within,\n\t\tbind: bind,\n\t\thasOwn: hasOwn,\n\t\thyphenate: hyphenate,\n\t\tcamelize: camelize,\n\t\tucfirst: ucfirst,\n\t\tstartsWith: startsWith,\n\t\tendsWith: endsWith,\n\t\tincludes: includes,\n\t\tisArray: isArray,\n\t\tisFunction: isFunction,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tisWindow: isWindow,\n\t\tisDocument: isDocument,\n\t\tisJQuery: isJQuery,\n\t\tisNode: isNode,\n\t\tisNodeCollection: isNodeCollection,\n\t\tisBoolean: isBoolean,\n\t\tisString: isString,\n\t\tisNumber: isNumber,\n\t\tisNumeric: isNumeric,\n\t\tisUndefined: isUndefined,\n\t\ttoBoolean: toBoolean,\n\t\ttoNumber: toNumber,\n\t\ttoFloat: toFloat,\n\t\ttoNode: toNode,\n\t\ttoNodes: toNodes,\n\t\ttoList: toList,\n\t\ttoMs: toMs,\n\t\tswap: swap,\n\t\tassign: assign,\n\t\teach: each,\n\t\tsortBy: sortBy,\n\t\tclamp: clamp,\n\t\tnoop: noop,\n\t\tintersectRect: intersectRect,\n\t\tpointInRect: pointInRect,\n\t\tDimensions: Dimensions,\n\t\tMouseTracker: MouseTracker,\n\t\tmergeOptions: mergeOptions,\n\t\tPlayer: Player,\n\t\tPromise: Promise,\n\t\tDeferred: Deferred,\n\t\tquery: query,\n\t\tqueryAll: queryAll,\n\t\tfind: find,\n\t\tfindAll: findAll,\n\t\tmatches: matches,\n\t\tclosest: closest,\n\t\tparents: parents,\n\t\tescape: escape,\n\t\tcss: css,\n\t\tgetStyles: getStyles,\n\t\tgetStyle: getStyle,\n\t\tgetCssVar: getCssVar,\n\t\tpropName: propName,\n\t\tisTouch: isTouch,\n\t\tgetPos: getPos$1\n\t});\n\t\n\tfunction componentAPI (UIkit) {\n\t\n\t    var DATA = UIkit.data;\n\t\n\t    UIkit.components = {};\n\t\n\t    UIkit.component = function (id, options) {\n\t\n\t        var name = camelize(id);\n\t\n\t        if (isPlainObject(options)) {\n\t            options.name = name;\n\t            options = UIkit.extend(options);\n\t        } else if (isUndefined(options)) {\n\t            return UIkit.components[name];\n\t        } else {\n\t            options.options.name = name;\n\t        }\n\t\n\t        UIkit.components[name] = options;\n\t\n\t        UIkit[name] = function (element, data) {\n\t            var i = arguments.length, argsArray = Array(i);\n\t            while ( i-- ) argsArray[i] = arguments[i];\n\t\n\t\n\t            if (isPlainObject(element)) {\n\t                return new UIkit.components[name]({data: element});\n\t            }\n\t\n\t            if (UIkit.components[name].options.functional) {\n\t                return new UIkit.components[name]({data: [].concat( argsArray )});\n\t            }\n\t\n\t            return element && element.nodeType ? init(element) : $$(element).map(init)[0];\n\t\n\t            function init(element) {\n\t\n\t                var cmp = UIkit.getComponent(element, name);\n\t\n\t                if (cmp && data) {\n\t                    cmp.$reset(data);\n\t                }\n\t\n\t                return cmp || new UIkit.components[name]({el: element, data: data || {}});\n\t            }\n\t\n\t        };\n\t\n\t        if (UIkit._initialized && !options.options.functional) {\n\t            fastdom.read(function () { return UIkit[name]((\"[uk-\" + id + \"],[data-uk-\" + id + \"]\")); });\n\t        }\n\t\n\t        return UIkit.components[name];\n\t    };\n\t\n\t    UIkit.getComponents = function (element) { return element && (element = isJQuery(element) ? element[0] : element) && element[DATA] || {}; };\n\t    UIkit.getComponent = function (element, name) { return UIkit.getComponents(element)[name]; };\n\t\n\t    UIkit.connect = function (node) {\n\t\n\t        if (node[DATA]) {\n\t            for (var name in node[DATA]) {\n\t                node[DATA][name]._callConnected();\n\t            }\n\t        }\n\t\n\t        for (var i = 0; i < node.attributes.length; i++) {\n\t\n\t            var name$1 = getComponentName(node.attributes[i].name);\n\t\n\t            if (name$1 && name$1 in UIkit.components) {\n\t                UIkit[name$1](node);\n\t            }\n\t\n\t        }\n\t\n\t    };\n\t\n\t    UIkit.disconnect = function (node) {\n\t        for (var name in node[DATA]) {\n\t            node[DATA][name]._callDisconnected();\n\t        }\n\t    };\n\t\n\t}\n\t\n\tfunction getComponentName(attribute) {\n\t    return startsWith(attribute, 'uk-') || startsWith(attribute, 'data-uk-')\n\t        ? camelize(attribute.replace('data-uk-', '').replace('uk-', ''))\n\t        : false;\n\t}\n\t\n\tfunction boot (UIkit) {\n\t\n\t    var connect = UIkit.connect;\n\t    var disconnect = UIkit.disconnect;\n\t\n\t    if (!Observer) {\n\t        return;\n\t    }\n\t\n\t    if (doc.body) {\n\t\n\t        init();\n\t\n\t    } else {\n\t\n\t        (new Observer(function () {\n\t\n\t            if (doc.body) {\n\t                this.disconnect();\n\t                init();\n\t            }\n\t\n\t        })).observe(docEl, {childList: true, subtree: true});\n\t\n\t    }\n\t\n\t    function init() {\n\t\n\t        apply(doc.body, connect);\n\t\n\t        fastdom.flush();\n\t\n\t        (new Observer(function (mutations) { return mutations.forEach(applyMutation); })).observe(docEl, {\n\t            childList: true,\n\t            subtree: true,\n\t            characterData: true,\n\t            attributes: true\n\t        });\n\t\n\t        UIkit._initialized = true;\n\t    }\n\t\n\t    function applyMutation(mutation) {\n\t\n\t        var target = mutation.target;\n\t        var type = mutation.type;\n\t\n\t        var update = type !== 'attributes'\n\t            ? applyChildList(mutation)\n\t            : applyAttribute(mutation);\n\t\n\t        update && UIkit.update('update', target, true);\n\t\n\t    }\n\t\n\t    function applyAttribute(ref) {\n\t        var target = ref.target;\n\t        var attributeName = ref.attributeName;\n\t\n\t\n\t        if (attributeName === 'href') {\n\t            return true;\n\t        }\n\t\n\t        var name = getComponentName(attributeName);\n\t\n\t        if (!name || !(name in UIkit.components)) {\n\t            return;\n\t        }\n\t\n\t        if (hasAttr(target, attributeName)) {\n\t            UIkit[name](target);\n\t            return true;\n\t        }\n\t\n\t        var component = UIkit.getComponent(target, name);\n\t\n\t        if (component) {\n\t            component.$destroy();\n\t            return true;\n\t        }\n\t\n\t    }\n\t\n\t    function applyChildList(ref) {\n\t        var addedNodes = ref.addedNodes;\n\t        var removedNodes = ref.removedNodes;\n\t\n\t\n\t        for (var i = 0; i < addedNodes.length; i++) {\n\t            apply(addedNodes[i], connect);\n\t        }\n\t\n\t        for (var i$1 = 0; i$1 < removedNodes.length; i$1++) {\n\t            apply(removedNodes[i$1], disconnect);\n\t        }\n\t\n\t        return true;\n\t    }\n\t    function apply(node, fn) {\n\t\n\t        if (node.nodeType !== 1 || hasAttr(node, 'uk-no-boot')) {\n\t            return;\n\t        }\n\t\n\t        fn(node);\n\t        node = node.firstElementChild;\n\t        while (node) {\n\t            var next = node.nextElementSibling;\n\t            apply(node, fn);\n\t            node = next;\n\t        }\n\t    }\n\t\n\t}\n\t\n\tfunction globalAPI (UIkit) {\n\t\n\t    var DATA = UIkit.data;\n\t\n\t    UIkit.use = function (plugin) {\n\t\n\t        if (plugin.installed) {\n\t            return;\n\t        }\n\t\n\t        plugin.call(null, this);\n\t        plugin.installed = true;\n\t\n\t        return this;\n\t    };\n\t\n\t    UIkit.mixin = function (mixin, component) {\n\t        component = (isString(component) ? UIkit.components[component] : component) || this;\n\t        mixin = mergeOptions({}, mixin);\n\t        mixin.mixins = component.options.mixins;\n\t        delete component.options.mixins;\n\t        component.options = mergeOptions(mixin, component.options);\n\t    };\n\t\n\t    UIkit.extend = function (options) {\n\t\n\t        options = options || {};\n\t\n\t        var Super = this;\n\t        var Sub = function UIkitComponent (options) {\n\t            this._init(options);\n\t        };\n\t\n\t        Sub.prototype = Object.create(Super.prototype);\n\t        Sub.prototype.constructor = Sub;\n\t        Sub.options = mergeOptions(Super.options, options);\n\t\n\t        Sub['super'] = Super;\n\t        Sub.extend = Super.extend;\n\t\n\t        return Sub;\n\t    };\n\t\n\t    UIkit.update = function (e, element, parents) {\n\t        if ( parents === void 0 ) parents = false;\n\t\n\t\n\t        e = createEvent(e || 'update');\n\t\n\t        if (!element) {\n\t\n\t            update(UIkit.instances, e);\n\t            return;\n\t\n\t        }\n\t\n\t        element = toNode(element);\n\t\n\t        if (parents) {\n\t\n\t            do {\n\t\n\t                update(element[DATA], e);\n\t                element = element.parentNode;\n\t\n\t            } while (element);\n\t\n\t        } else {\n\t\n\t            apply(element, function (element) { return update(element[DATA], e); });\n\t\n\t        }\n\t\n\t    };\n\t\n\t    var container;\n\t    Object.defineProperty(UIkit, 'container', {\n\t\n\t        get: function get() {\n\t            return container || doc.body;\n\t        },\n\t\n\t        set: function set(element) {\n\t            container = $(element);\n\t        }\n\t\n\t    });\n\t\n\t    function apply(node, fn) {\n\t\n\t        if (node.nodeType !== 1) {\n\t            return;\n\t        }\n\t\n\t        fn(node);\n\t        node = node.firstElementChild;\n\t        while (node) {\n\t            apply(node, fn);\n\t            node = node.nextElementSibling;\n\t        }\n\t    }\n\t\n\t    function update(data, e) {\n\t\n\t        if (!data) {\n\t            return;\n\t        }\n\t\n\t        for (var name in data) {\n\t            if (data[name]._isReady) {\n\t                data[name]._callUpdate(e);\n\t            }\n\t        }\n\t\n\t    }\n\t\n\t}\n\t\n\tfunction hooksAPI (UIkit) {\n\t\n\t    UIkit.prototype._callHook = function (hook) {\n\t        var this$1 = this;\n\t\n\t\n\t        var handlers = this.$options[hook];\n\t\n\t        if (handlers) {\n\t            handlers.forEach(function (handler) { return handler.call(this$1); });\n\t        }\n\t    };\n\t\n\t    UIkit.prototype._callConnected = function () {\n\t        var this$1 = this;\n\t\n\t\n\t        if (this._connected) {\n\t            return;\n\t        }\n\t\n\t        if (!includes(UIkit.elements, this.$options.el)) {\n\t            UIkit.elements.push(this.$options.el);\n\t        }\n\t\n\t        UIkit.instances[this._uid] = this;\n\t\n\t        this._data = {};\n\t\n\t        this._callHook('beforeConnect');\n\t        this._connected = true;\n\t\n\t        this._initEvents();\n\t        this._initObserver();\n\t\n\t        this._callHook('connected');\n\t\n\t        if (!this._isReady) {\n\t            ready(function () { return this$1._callReady(); });\n\t        }\n\t\n\t        this._callUpdate();\n\t    };\n\t\n\t    UIkit.prototype._callDisconnected = function () {\n\t\n\t        if (!this._connected) {\n\t            return;\n\t        }\n\t\n\t        this._callHook('beforeDisconnect');\n\t\n\t        if (this._observer) {\n\t            this._observer.disconnect();\n\t            this._observer = null;\n\t        }\n\t\n\t        var index = UIkit.elements.indexOf(this.$options.el);\n\t\n\t        if (~index) {\n\t            UIkit.elements.splice(index, 1);\n\t        }\n\t\n\t        delete UIkit.instances[this._uid];\n\t\n\t        this._unbindEvents();\n\t        this._callHook('disconnected');\n\t\n\t        this._connected = false;\n\t\n\t    };\n\t\n\t    UIkit.prototype._callReady = function () {\n\t\n\t        if (this._isReady) {\n\t            return;\n\t        }\n\t\n\t        this._isReady = true;\n\t        this._callHook('ready');\n\t        this._resetComputeds();\n\t        this._callUpdate();\n\t    };\n\t\n\t    UIkit.prototype._callUpdate = function (e) {\n\t        var this$1 = this;\n\t\n\t\n\t        e = createEvent(e || 'update');\n\t\n\t        var type = e.type;\n\t\n\t        if (includes(['update', 'load', 'resize'], type)) {\n\t            this._resetComputeds();\n\t        }\n\t\n\t        var updates = this.$options.update;\n\t        var ref = this._frames;\n\t        var reads = ref.reads;\n\t        var writes = ref.writes;\n\t\n\t        if (!updates) {\n\t            return;\n\t        }\n\t\n\t        updates.forEach(function (ref, i) {\n\t            var read = ref.read;\n\t            var write = ref.write;\n\t            var events = ref.events;\n\t\n\t\n\t            if (type !== 'update' && !includes(events, type)) {\n\t                return;\n\t            }\n\t\n\t            if (read && !includes(fastdom.reads, reads[i])) {\n\t                reads[i] = fastdom.read(function () {\n\t\n\t                    var result = read.call(this$1, this$1._data, e);\n\t\n\t                    if (result === false && write) {\n\t                        fastdom.clear(writes[i]);\n\t                        delete writes[i];\n\t                    } else if (isPlainObject(result)) {\n\t                        assign(this$1._data, result);\n\t                    }\n\t                    delete reads[i];\n\t                });\n\t            }\n\t\n\t            if (write && !includes(fastdom.writes, writes[i])) {\n\t                writes[i] = fastdom.write(function () {\n\t                    write.call(this$1, this$1._data, e);\n\t                    delete writes[i];\n\t                });\n\t            }\n\t\n\t        });\n\t\n\t    };\n\t\n\t}\n\t\n\tfunction stateAPI (UIkit) {\n\t\n\t    var uid = 0;\n\t\n\t    UIkit.prototype.props = {};\n\t\n\t    UIkit.prototype._init = function (options) {\n\t\n\t        options = options || {};\n\t        options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t        this.$el = null;\n\t        this.$name = UIkit.prefix + hyphenate(this.$options.name);\n\t        this.$props = {};\n\t\n\t        this._frames = {reads: {}, writes: {}};\n\t        this._events = [];\n\t\n\t        this._uid = uid++;\n\t        this._initData();\n\t        this._initMethods();\n\t        this._initComputeds();\n\t        this._callHook('created');\n\t\n\t        if (options.el) {\n\t            this.$mount(options.el);\n\t        }\n\t    };\n\t\n\t    UIkit.prototype._initData = function () {\n\t        var this$1 = this;\n\t\n\t\n\t        var ref = this.$options;\n\t        var defaults = ref.defaults;\n\t        var data$$1 = ref.data; if ( data$$1 === void 0 ) data$$1 = {};\n\t        var args = ref.args; if ( args === void 0 ) args = [];\n\t        var props = ref.props; if ( props === void 0 ) props = {};\n\t        var el = ref.el;\n\t\n\t        if (args.length && isArray(data$$1)) {\n\t            data$$1 = data$$1.slice(0, args.length).reduce(function (data$$1, value, index) {\n\t                if (isPlainObject(value)) {\n\t                    assign(data$$1, value);\n\t                } else {\n\t                    data$$1[args[index]] = value;\n\t                }\n\t                return data$$1;\n\t            }, {});\n\t        }\n\t\n\t        for (var key in assign({}, defaults, props)) {\n\t            this$1.$props[key] = this$1[key] = hasOwn(data$$1, key) && !isUndefined(data$$1[key])\n\t                ? coerce(props[key], data$$1[key], el)\n\t                : defaults\n\t                    ? defaults[key] && isArray(defaults[key])\n\t                        ? defaults[key].concat()\n\t                        : defaults[key]\n\t                    : null;\n\t        }\n\t    };\n\t\n\t    UIkit.prototype._initMethods = function () {\n\t        var this$1 = this;\n\t\n\t\n\t        var ref = this.$options;\n\t        var methods = ref.methods;\n\t\n\t        if (methods) {\n\t            for (var key in methods) {\n\t                this$1[key] = bind(methods[key], this$1);\n\t            }\n\t        }\n\t    };\n\t\n\t    UIkit.prototype._initComputeds = function () {\n\t        var this$1 = this;\n\t\n\t\n\t        var ref = this.$options;\n\t        var computed = ref.computed;\n\t\n\t        this._resetComputeds();\n\t\n\t        if (computed) {\n\t            for (var key in computed) {\n\t                registerComputed(this$1, key, computed[key]);\n\t            }\n\t        }\n\t    };\n\t\n\t    UIkit.prototype._resetComputeds = function () {\n\t        this._computeds = {};\n\t    };\n\t\n\t    UIkit.prototype._initProps = function (props) {\n\t        var this$1 = this;\n\t\n\t\n\t        var key;\n\t\n\t        this._resetComputeds();\n\t\n\t        props = props || getProps(this.$options, this.$name);\n\t\n\t        for (key in props) {\n\t            if (!isUndefined(props[key])) {\n\t                this$1.$props[key] = props[key];\n\t            }\n\t        }\n\t\n\t        var exclude = [this.$options.computed, this.$options.methods];\n\t        for (key in this$1.$props) {\n\t            if (key in props && notIn(exclude, key)) {\n\t                this$1[key] = this$1.$props[key];\n\t            }\n\t        }\n\t    };\n\t\n\t    UIkit.prototype._initEvents = function () {\n\t        var this$1 = this;\n\t\n\t\n\t        var ref = this.$options;\n\t        var events = ref.events;\n\t\n\t        if (events) {\n\t\n\t            events.forEach(function (event) {\n\t\n\t                if (!hasOwn(event, 'handler')) {\n\t                    for (var key in event) {\n\t                        registerEvent(this$1, event[key], key);\n\t                    }\n\t                } else {\n\t                    registerEvent(this$1, event);\n\t                }\n\t\n\t            });\n\t        }\n\t    };\n\t\n\t    UIkit.prototype._unbindEvents = function () {\n\t        this._events.forEach(function (unbind) { return unbind(); });\n\t        this._events = [];\n\t    };\n\t\n\t    UIkit.prototype._initObserver = function () {\n\t        var this$1 = this;\n\t\n\t\n\t        var ref = this.$options;\n\t        var attrs = ref.attrs;\n\t        var props = ref.props;\n\t        var el = ref.el;\n\t        if (this._observer || !props || !attrs || !Observer) {\n\t            return;\n\t        }\n\t\n\t        attrs = isArray(attrs) ? attrs : Object.keys(props).map(function (key) { return hyphenate(key); });\n\t\n\t        this._observer = new Observer(function () {\n\t\n\t            var data$$1 = getProps(this$1.$options, this$1.$name);\n\t            if (attrs.some(function (key) { return !isUndefined(data$$1[key]) && data$$1[key] !== this$1.$props[key]; })) {\n\t                this$1.$reset(data$$1);\n\t            }\n\t\n\t        });\n\t\n\t        this._observer.observe(el, {attributes: true, attributeFilter: attrs.concat([this.$name, (\"data-\" + (this.$name))])});\n\t    };\n\t\n\t    function getProps(opts, name) {\n\t\n\t        var data$$1 = {};\n\t        var args = opts.args; if ( args === void 0 ) args = [];\n\t        var props = opts.props; if ( props === void 0 ) props = {};\n\t        var el = opts.el;\n\t\n\t        if (!props) {\n\t            return data$$1;\n\t        }\n\t\n\t        for (var key in props) {\n\t            var prop = hyphenate(key);\n\t            if (hasAttr(el, prop)) {\n\t\n\t                var value = coerce(props[key], attr(el, prop), el);\n\t\n\t                if (prop === 'target' && (!value || startsWith(value, '_'))) {\n\t                    continue;\n\t                }\n\t\n\t                data$$1[key] = value;\n\t            }\n\t        }\n\t\n\t        var options = parseOptions(data(el, name), args);\n\t\n\t        for (var key$1 in options) {\n\t            var prop$1 = camelize(key$1);\n\t            if (props[prop$1] !== undefined) {\n\t                data$$1[prop$1] = coerce(props[prop$1], options[key$1], el);\n\t            }\n\t        }\n\t\n\t        return data$$1;\n\t    }\n\t\n\t    function parseOptions(options, args) {\n\t        var obj;\n\t\n\t        if ( args === void 0 ) args = [];\n\t\n\t        try {\n\t\n\t            return !options\n\t                ? {}\n\t                : startsWith(options, '{')\n\t                    ? JSON.parse(options)\n\t                    : args.length && !includes(options, ':')\n\t                        ? (( obj = {}, obj[args[0]] = options, obj))\n\t                        : options.split(';').reduce(function (options, option) {\n\t                            var ref = option.split(/:(.+)/);\n\t                            var key = ref[0];\n\t                            var value = ref[1];\n\t                            if (key && value) {\n\t                                options[key.trim()] = value.trim();\n\t                            }\n\t                            return options;\n\t                        }, {});\n\t\n\t        } catch (e) {\n\t            return {};\n\t        }\n\t\n\t    }\n\t\n\t    function registerComputed(component, key, cb) {\n\t        Object.defineProperty(component, key, {\n\t\n\t            enumerable: true,\n\t\n\t            get: function get() {\n\t\n\t                var _computeds = component._computeds;\n\t                var $props = component.$props;\n\t                var $el = component.$el;\n\t\n\t                if (!hasOwn(_computeds, key)) {\n\t                    _computeds[key] = cb.call(component, $props, $el);\n\t                }\n\t\n\t                return _computeds[key];\n\t            },\n\t\n\t            set: function set(value) {\n\t                component._computeds[key] = value;\n\t            }\n\t\n\t        });\n\t    }\n\t\n\t    function registerEvent(component, event, key) {\n\t\n\t        if (!isPlainObject(event)) {\n\t            event = ({name: key, handler: event});\n\t        }\n\t\n\t        var name = event.name;\n\t        var el = event.el;\n\t        var handler = event.handler;\n\t        var capture = event.capture;\n\t        var delegate = event.delegate;\n\t        var filter = event.filter;\n\t        var self = event.self;\n\t        el = isFunction(el)\n\t            ? el.call(component)\n\t            : el || component.$el;\n\t\n\t        if (isArray(el)) {\n\t            el.forEach(function (el) { return registerEvent(component, assign({}, event, {el: el}), key); });\n\t            return;\n\t        }\n\t\n\t        if (!el || filter && !filter.call(component)) {\n\t            return;\n\t        }\n\t\n\t        handler = detail(isString(handler) ? component[handler] : bind(handler, component));\n\t\n\t        if (self) {\n\t            handler = selfFilter(handler);\n\t        }\n\t\n\t        component._events.push(\n\t            on(\n\t                el,\n\t                name,\n\t                !delegate\n\t                    ? null\n\t                    : isString(delegate)\n\t                        ? delegate\n\t                        : delegate.call(component),\n\t                handler,\n\t                capture\n\t            )\n\t        );\n\t\n\t    }\n\t\n\t    function selfFilter(handler) {\n\t        return function selfHandler(e) {\n\t            if (e.target === e.currentTarget || e.target === e.current) {\n\t                return handler.call(null, e);\n\t            }\n\t        };\n\t    }\n\t\n\t    function notIn(options, key) {\n\t        return options.every(function (arr) { return !arr || !hasOwn(arr, key); });\n\t    }\n\t\n\t    function detail(listener) {\n\t        return function (e) { return isArray(e.detail) ? listener.apply(void 0, [e].concat(e.detail)) : listener(e); };\n\t    }\n\t\n\t    function coerce(type, value, context) {\n\t\n\t        if (type === Boolean) {\n\t            return toBoolean(value);\n\t        } else if (type === Number) {\n\t            return toNumber(value);\n\t        } else if (type === 'query') {\n\t            return query(value, context);\n\t        } else if (type === 'list') {\n\t            return toList(value);\n\t        } else if (type === 'media') {\n\t            return toMedia(value);\n\t        }\n\t\n\t        return type ? type(value) : value;\n\t    }\n\t\n\t    function toMedia(value) {\n\t\n\t        if (isString(value)) {\n\t            if (value[0] === '@') {\n\t                var name = \"media-\" + (value.substr(1));\n\t                value = toFloat(getCssVar(name));\n\t            } else if (isNaN(value)) {\n\t                return value;\n\t            }\n\t        }\n\t\n\t        return value && !isNaN(value) ? (\"(min-width: \" + value + \"px)\") : false;\n\t    }\n\t\n\t}\n\t\n\tfunction instanceAPI (UIkit) {\n\t\n\t    var DATA = UIkit.data;\n\t\n\t    UIkit.prototype.$mount = function (el) {\n\t\n\t        var ref = this.$options;\n\t        var name = ref.name;\n\t\n\t        if (!el[DATA]) {\n\t            el[DATA] = {};\n\t        }\n\t\n\t        if (el[DATA][name]) {\n\t            return;\n\t        }\n\t\n\t        el[DATA][name] = this;\n\t\n\t        this.$el = this.$options.el = this.$options.el || el;\n\t\n\t        this._initProps();\n\t\n\t        this._callHook('init');\n\t\n\t        if (within(el, docEl)) {\n\t            this._callConnected();\n\t        }\n\t    };\n\t\n\t    UIkit.prototype.$emit = function (e) {\n\t        this._callUpdate(e);\n\t    };\n\t\n\t    UIkit.prototype.$update = function (e, parents) {\n\t        UIkit.update(e, this.$options.el, parents);\n\t    };\n\t\n\t    UIkit.prototype.$reset = function (data) {\n\t        this._callDisconnected();\n\t        this._initProps(data);\n\t        this._callConnected();\n\t    };\n\t\n\t    UIkit.prototype.$destroy = function (removeEl) {\n\t        if ( removeEl === void 0 ) removeEl = false;\n\t\n\t\n\t        var ref = this.$options;\n\t        var el = ref.el;\n\t        var name = ref.name;\n\t\n\t        if (el) {\n\t            this._callDisconnected();\n\t        }\n\t\n\t        this._callHook('destroy');\n\t\n\t        if (!el || !el[DATA]) {\n\t            return;\n\t        }\n\t\n\t        delete el[DATA][name];\n\t\n\t        if (!Object.keys(el[DATA]).length) {\n\t            delete el[DATA];\n\t        }\n\t\n\t        if (removeEl) {\n\t            remove(this.$el);\n\t        }\n\t    };\n\t\n\t}\n\t\n\tvar UIkit$2 = function (options) {\n\t    this._init(options);\n\t};\n\t\n\tUIkit$2.util = util;\n\tUIkit$2.data = '__uikit__';\n\tUIkit$2.prefix = 'uk-';\n\tUIkit$2.options = {};\n\tUIkit$2.instances = {};\n\tUIkit$2.elements = [];\n\t\n\tglobalAPI(UIkit$2);\n\thooksAPI(UIkit$2);\n\tstateAPI(UIkit$2);\n\tinstanceAPI(UIkit$2);\n\tcomponentAPI(UIkit$2);\n\t\n\tvar Class = {\n\t\n\t    init: function init() {\n\t        addClass(this.$el, this.$name);\n\t    }\n\t\n\t};\n\t\n\tvar Container = {\n\t\n\t    props: {\n\t        container: Boolean\n\t    },\n\t\n\t    defaults: {\n\t        container: true\n\t    },\n\t\n\t    computed: {\n\t\n\t        container: function container(ref) {\n\t            var container = ref.container;\n\t\n\t            return container === true && UIkit$2.container || container && $(container);\n\t        }\n\t\n\t    }\n\t\n\t};\n\t\n\tvar Togglable = {\n\t\n\t    props: {\n\t        cls: Boolean,\n\t        animation: 'list',\n\t        duration: Number,\n\t        origin: String,\n\t        transition: String,\n\t        queued: Boolean\n\t    },\n\t\n\t    defaults: {\n\t        cls: false,\n\t        animation: [false],\n\t        duration: 200,\n\t        origin: false,\n\t        transition: 'linear',\n\t        queued: false,\n\t\n\t        initProps: {\n\t            overflow: '',\n\t            height: '',\n\t            paddingTop: '',\n\t            paddingBottom: '',\n\t            marginTop: '',\n\t            marginBottom: ''\n\t        },\n\t\n\t        hideProps: {\n\t            overflow: 'hidden',\n\t            height: 0,\n\t            paddingTop: 0,\n\t            paddingBottom: 0,\n\t            marginTop: 0,\n\t            marginBottom: 0\n\t        }\n\t\n\t    },\n\t\n\t    computed: {\n\t\n\t        hasAnimation: function hasAnimation(ref) {\n\t            var animation = ref.animation;\n\t\n\t            return !!animation[0];\n\t        },\n\t\n\t        hasTransition: function hasTransition(ref) {\n\t            var animation = ref.animation;\n\t\n\t            return this.hasAnimation && animation[0] === true;\n\t        }\n\t\n\t    },\n\t\n\t    methods: {\n\t\n\t        toggleElement: function toggleElement(targets, show, animate) {\n\t            var this$1 = this;\n\t\n\t            return new Promise(function (resolve) {\n\t\n\t                targets = toNodes(targets);\n\t\n\t                var all = function (targets) { return Promise.all(targets.map(function (el) { return this$1._toggleElement(el, show, animate); })); };\n\t                var toggled = targets.filter(function (el) { return this$1.isToggled(el); });\n\t                var untoggled = targets.filter(function (el) { return !includes(toggled, el); });\n\t\n\t                var p;\n\t\n\t                if (!this$1.queued || !isUndefined(animate) || !isUndefined(show) || !this$1.hasAnimation || targets.length < 2) {\n\t\n\t                    p = all(untoggled.concat(toggled));\n\t\n\t                } else {\n\t\n\t                    var body = doc.body;\n\t                    var scroll = body.scrollTop;\n\t                    var el = toggled[0];\n\t                    var inProgress = Animation.inProgress(el) && hasClass(el, 'uk-animation-leave')\n\t                            || Transition.inProgress(el) && el.style.height === '0px';\n\t\n\t                    p = all(toggled);\n\t\n\t                    if (!inProgress) {\n\t                        p = p.then(function () {\n\t                            var p = all(untoggled);\n\t                            body.scrollTop = scroll;\n\t                            return p;\n\t                        });\n\t                    }\n\t\n\t                }\n\t\n\t                p.then(resolve, noop);\n\t\n\t            });\n\t        },\n\t\n\t        toggleNow: function toggleNow(targets, show) {\n\t            var this$1 = this;\n\t\n\t            return new Promise(function (resolve) { return Promise.all(toNodes(targets).map(function (el) { return this$1._toggleElement(el, show, false); })).then(resolve, noop); });\n\t        },\n\t\n\t        isToggled: function isToggled(el) {\n\t            var nodes = toNodes(el || this.$el);\n\t            return this.cls\n\t                ? hasClass(nodes, this.cls.split(' ')[0])\n\t                : !hasAttr(nodes, 'hidden');\n\t        },\n\t\n\t        updateAria: function updateAria(el) {\n\t            if (this.cls === false) {\n\t                attr(el, 'aria-hidden', !this.isToggled(el));\n\t            }\n\t        },\n\t\n\t        _toggleElement: function _toggleElement(el, show, animate) {\n\t            var this$1 = this;\n\t\n\t\n\t            show = isBoolean(show)\n\t                ? show\n\t                : Animation.inProgress(el)\n\t                    ? hasClass(el, 'uk-animation-leave')\n\t                    : Transition.inProgress(el)\n\t                        ? el.style.height === '0px'\n\t                        : !this.isToggled(el);\n\t\n\t            if (!trigger(el, (\"before\" + (show ? 'show' : 'hide')), [this])) {\n\t                return Promise.reject();\n\t            }\n\t\n\t            var promise = (animate === false || !this.hasAnimation\n\t                ? this._toggleImmediate\n\t                : this.hasTransition\n\t                    ? this._toggleHeight\n\t                    : this._toggleAnimation\n\t            )(el, show);\n\t\n\t            trigger(el, show ? 'show' : 'hide', [this]);\n\t\n\t            return promise.then(function () {\n\t                trigger(el, show ? 'shown' : 'hidden', [this$1]);\n\t                UIkit$2.update(null, el);\n\t            });\n\t        },\n\t\n\t        _toggle: function _toggle(el, toggled) {\n\t\n\t            if (!el) {\n\t                return;\n\t            }\n\t\n\t            if (this.cls) {\n\t                toggleClass(el, this.cls, includes(this.cls, ' ') ? undefined : toggled);\n\t            } else {\n\t                attr(el, 'hidden', !toggled ? '' : null);\n\t            }\n\t\n\t            $$('[autofocus]', el).some(function (el) { return isVisible(el) && (el.focus() || true); });\n\t\n\t            this.updateAria(el);\n\t            UIkit$2.update(null, el);\n\t        },\n\t\n\t        _toggleImmediate: function _toggleImmediate(el, show) {\n\t            this._toggle(el, show);\n\t            return Promise.resolve();\n\t        },\n\t\n\t        _toggleHeight: function _toggleHeight(el, show) {\n\t            var this$1 = this;\n\t\n\t\n\t            var inProgress = Transition.inProgress(el);\n\t            var inner = el.hasChildNodes ? toFloat(css(el.firstElementChild, 'marginTop')) + toFloat(css(el.lastElementChild, 'marginBottom')) : 0;\n\t            var currentHeight = isVisible(el) ? height(el) + (inProgress ? 0 : inner) : 0;\n\t\n\t            Transition.cancel(el);\n\t\n\t            if (!this.isToggled(el)) {\n\t                this._toggle(el, true);\n\t            }\n\t\n\t            height(el, '');\n\t\n\t            // Update child components first\n\t            fastdom.flush();\n\t\n\t            var endHeight = height(el) + (inProgress ? 0 : inner);\n\t            height(el, currentHeight);\n\t\n\t            return (show\n\t                ? Transition.start(el, assign({}, this.initProps, {overflow: 'hidden', height: endHeight}), Math.round(this.duration * (1 - currentHeight / endHeight)), this.transition)\n\t                : Transition.start(el, this.hideProps, Math.round(this.duration * (currentHeight / endHeight)), this.transition).then(function () { return this$1._toggle(el, false); })\n\t            ).then(function () { return css(el, this$1.initProps); });\n\t\n\t        },\n\t\n\t        _toggleAnimation: function _toggleAnimation(el, show) {\n\t            var this$1 = this;\n\t\n\t\n\t            Animation.cancel(el);\n\t\n\t            if (show) {\n\t                this._toggle(el, true);\n\t                return Animation.in(el, this.animation[0], this.duration, this.origin);\n\t            }\n\t\n\t            return Animation.out(el, this.animation[1] || this.animation[0], this.duration, this.origin).then(function () { return this$1._toggle(el, false); });\n\t        }\n\t\n\t    }\n\t\n\t};\n\t\n\tvar active;\n\t\n\tvar Modal = {\n\t\n\t    mixins: [Class, Container, Togglable],\n\t\n\t    props: {\n\t        clsPanel: String,\n\t        selClose: String,\n\t        escClose: Boolean,\n\t        bgClose: Boolean,\n\t        stack: Boolean\n\t    },\n\t\n\t    defaults: {\n\t        cls: 'uk-open',\n\t        escClose: true,\n\t        bgClose: true,\n\t        overlay: true,\n\t        stack: false\n\t    },\n\t\n\t    computed: {\n\t\n\t        panel: function panel(ref, $el) {\n\t            var clsPanel = ref.clsPanel;\n\t\n\t            return $((\".\" + clsPanel), $el);\n\t        },\n\t\n\t        transitionElement: function transitionElement() {\n\t            return this.panel;\n\t        },\n\t\n\t        transitionDuration: function transitionDuration() {\n\t            return toMs(css(this.transitionElement, 'transitionDuration'));\n\t        }\n\t\n\t    },\n\t\n\t    events: [\n\t\n\t        {\n\t\n\t            name: 'click',\n\t\n\t            delegate: function delegate() {\n\t                return this.selClose;\n\t            },\n\t\n\t            handler: function handler(e) {\n\t                e.preventDefault();\n\t                this.hide();\n\t            }\n\t\n\t        },\n\t\n\t        {\n\t\n\t            name: 'toggle',\n\t\n\t            self: true,\n\t\n\t            handler: function handler(e) {\n\t\n\t                if (e.defaultPrevented) {\n\t                    return;\n\t                }\n\t\n\t                e.preventDefault();\n\t                this.toggle();\n\t            }\n\t\n\t        },\n\t\n\t        {\n\t            name: 'beforeshow',\n\t\n\t            self: true,\n\t\n\t            handler: function handler(e) {\n\t\n\t                var prev = active && active !== this && active;\n\t\n\t                active = this;\n\t\n\t                if (prev) {\n\t                    if (this.stack) {\n\t                        this.prev = prev;\n\t                    } else {\n\t                        prev.hide().then(this.show);\n\t                        e.preventDefault();\n\t                        return;\n\t                    }\n\t                }\n\t\n\t                registerEvents();\n\t\n\t            }\n\t\n\t        },\n\t\n\t        {\n\t            name: 'beforehide',\n\t\n\t            self: true,\n\t\n\t            handler: function handler() {\n\t\n\t                active = active && active !== this && active || this.prev;\n\t\n\t                if (!active) {\n\t                    deregisterEvents();\n\t                }\n\t\n\t            }\n\t\n\t        },\n\t\n\t        {\n\t\n\t            name: 'show',\n\t\n\t            self: true,\n\t\n\t            handler: function handler() {\n\t\n\t                if (!hasClass(docEl, this.clsPage)) {\n\t                    this.scrollbarWidth = width(win) - docEl.offsetWidth;\n\t                    css(doc.body, 'overflowY', this.scrollbarWidth && this.overlay ? 'scroll' : '');\n\t                }\n\t\n\t                addClass(docEl, this.clsPage);\n\t\n\t            }\n\t\n\t        },\n\t\n\t        {\n\t\n\t            name: 'hidden',\n\t\n\t            self: true,\n\t\n\t            handler: function handler() {\n\t                var this$1 = this;\n\t\n\t\n\t                var found;\n\t                var ref = this;\n\t                var prev = ref.prev;\n\t\n\t                while (prev) {\n\t\n\t                    if (prev.clsPage === this$1.clsPage) {\n\t                        found = true;\n\t                        break;\n\t                    }\n\t\n\t                    prev = prev.prev;\n\t\n\t                }\n\t\n\t                if (!found) {\n\t                    removeClass(docEl, this.clsPage);\n\t\n\t                }\n\t\n\t                !this.prev && css(doc.body, 'overflowY', '');\n\t            }\n\t\n\t        }\n\t\n\t    ],\n\t\n\t    methods: {\n\t\n\t        toggle: function toggle() {\n\t            return this.isToggled() ? this.hide() : this.show();\n\t        },\n\t\n\t        show: function show() {\n\t\n\t            if (this.isToggled()) {\n\t                return;\n\t            }\n\t\n\t            if (this.container && this.$el.parentNode !== this.container) {\n\t                append(this.container, this.$el);\n\t                this._callConnected();\n\t            }\n\t\n\t            return this.toggleNow(this.$el, true);\n\t        },\n\t\n\t        hide: function hide() {\n\t            if (this.isToggled()) {\n\t                return this.toggleNow(this.$el, false);\n\t            }\n\t        },\n\t\n\t        getActive: function getActive() {\n\t            return active;\n\t        },\n\t\n\t        _toggleImmediate: function _toggleImmediate(el, show) {\n\t            var this$1 = this;\n\t\n\t            return new Promise(function (resolve) { return requestAnimationFrame(function () {\n\t                    this$1._toggle(el, show);\n\t\n\t                    if (this$1.transitionDuration) {\n\t                        once(this$1.transitionElement, 'transitionend', resolve, false, function (e) { return e.target === this$1.transitionElement; });\n\t                    } else {\n\t                        resolve();\n\t                    }\n\t                }); }\n\t            );\n\t        }\n\t\n\t    }\n\t\n\t};\n\t\n\tvar events;\n\t\n\tfunction registerEvents() {\n\t\n\t    if (events) {\n\t        return;\n\t    }\n\t\n\t    events = [\n\t        on(docEl, 'click', function (ref) {\n\t            var target = ref.target;\n\t            var defaultPrevented = ref.defaultPrevented;\n\t\n\t            if (active && active.bgClose && !defaultPrevented && !within(target, (active.panel || active.$el))) {\n\t                active.hide();\n\t            }\n\t        }),\n\t        on(doc, 'keydown', function (e) {\n\t            if (e.keyCode === 27 && active && active.escClose) {\n\t                e.preventDefault();\n\t                active.hide();\n\t            }\n\t        })\n\t    ];\n\t}\n\t\n\tfunction deregisterEvents() {\n\t    events && events.forEach(function (unbind) { return unbind(); });\n\t    events = null;\n\t}\n\t\n\tvar Position = {\n\t\n\t    props: {\n\t        pos: String,\n\t        offset: null,\n\t        flip: Boolean,\n\t        clsPos: String\n\t    },\n\t\n\t    defaults: {\n\t        pos: (\"bottom-\" + (!isRtl ? 'left' : 'right')),\n\t        flip: true,\n\t        offset: false,\n\t        clsPos: ''\n\t    },\n\t\n\t    computed: {\n\t\n\t        pos: function pos(ref) {\n\t            var pos = ref.pos;\n\t\n\t            return (pos + (!includes(pos, '-') ? '-center' : '')).split('-');\n\t        },\n\t\n\t        dir: function dir() {\n\t            return this.pos[0];\n\t        },\n\t\n\t        align: function align() {\n\t            return this.pos[1];\n\t        }\n\t\n\t    },\n\t\n\t    methods: {\n\t\n\t        positionAt: function positionAt$1(element, target, boundary) {\n\t\n\t            removeClasses(element, ((this.clsPos) + \"-(top|bottom|left|right)(-[a-z]+)?\"));\n\t            css(element, {top: '', left: ''});\n\t\n\t            var node;\n\t            var ref = this;\n\t            var offset$$1 = ref.offset;\n\t\n\t            offset$$1 = isNumeric(offset$$1)\n\t                ? offset$$1\n\t                : (node = $(offset$$1))\n\t                    ? offset(node)[axis === 'x' ? 'left' : 'top'] - offset(target)[axis === 'x' ? 'right' : 'bottom']\n\t                    : 0;\n\t\n\t            var axis = this.getAxis();\n\t            var ref$1 = positionAt(\n\t                element,\n\t                target,\n\t                axis === 'x' ? ((flipPosition(this.dir)) + \" \" + (this.align)) : ((this.align) + \" \" + (flipPosition(this.dir))),\n\t                axis === 'x' ? ((this.dir) + \" \" + (this.align)) : ((this.align) + \" \" + (this.dir)),\n\t                axis === 'x' ? (\"\" + (this.dir === 'left' ? -offset$$1 : offset$$1)) : (\" \" + (this.dir === 'top' ? -offset$$1 : offset$$1)),\n\t                null,\n\t                this.flip,\n\t                boundary\n\t            ).target;\n\t            var x = ref$1.x;\n\t            var y = ref$1.y;\n\t\n\t            this.dir = axis === 'x' ? x : y;\n\t            this.align = axis === 'x' ? y : x;\n\t\n\t            toggleClass(element, ((this.clsPos) + \"-\" + (this.dir) + \"-\" + (this.align)), this.offset === false);\n\t\n\t        },\n\t\n\t        getAxis: function getAxis() {\n\t            return this.dir === 'top' || this.dir === 'bottom' ? 'y' : 'x';\n\t        }\n\t\n\t    }\n\t\n\t};\n\t\n\tfunction mixin (UIkit) {\n\t\n\t    UIkit.mixin.class = Class;\n\t    UIkit.mixin.container = Container;\n\t    UIkit.mixin.modal = Modal;\n\t    UIkit.mixin.position = Position;\n\t    UIkit.mixin.togglable = Togglable;\n\t\n\t}\n\t\n\tfunction Accordion (UIkit) {\n\t\n\t    UIkit.component('accordion', {\n\t\n\t        mixins: [Class, Togglable],\n\t\n\t        props: {\n\t            targets: String,\n\t            active: null,\n\t            collapsible: Boolean,\n\t            multiple: Boolean,\n\t            toggle: String,\n\t            content: String,\n\t            transition: String\n\t        },\n\t\n\t        defaults: {\n\t            targets: '> *',\n\t            active: false,\n\t            animation: [true],\n\t            collapsible: true,\n\t            multiple: false,\n\t            clsOpen: 'uk-open',\n\t            toggle: '> .uk-accordion-title',\n\t            content: '> .uk-accordion-content',\n\t            transition: 'ease'\n\t        },\n\t\n\t        computed: {\n\t\n\t            items: function items(ref, $el) {\n\t                var targets = ref.targets;\n\t\n\t                return $$(targets, $el);\n\t            }\n\t\n\t        },\n\t\n\t        events: [\n\t\n\t            {\n\t\n\t                name: 'click',\n\t\n\t                delegate: function delegate() {\n\t                    return ((this.targets) + \" \" + (this.$props.toggle));\n\t                },\n\t\n\t                handler: function handler(e) {\n\t                    e.preventDefault();\n\t                    this.toggle(index($$(((this.targets) + \" \" + (this.$props.toggle)), this.$el), e.current));\n\t                }\n\t\n\t            }\n\t\n\t        ],\n\t\n\t        connected: function connected() {\n\t\n\t            if (this.active === false) {\n\t                return;\n\t            }\n\t\n\t            var active = this.items[Number(this.active)];\n\t            if (active && !hasClass(active, this.clsOpen)) {\n\t                this.toggle(active, false);\n\t            }\n\t        },\n\t\n\t        update: function update() {\n\t            var this$1 = this;\n\t\n\t\n\t            this.items.forEach(function (el) { return this$1._toggleImmediate($(this$1.content, el), hasClass(el, this$1.clsOpen)); });\n\t\n\t            var active = !this.collapsible && !hasClass(this.items, this.clsOpen) && this.items[0];\n\t            if (active) {\n\t                this.toggle(active, false);\n\t            }\n\t        },\n\t\n\t        methods: {\n\t\n\t            toggle: function toggle(item, animate) {\n\t                var this$1 = this;\n\t\n\t\n\t                var index = getIndex(item, this.items);\n\t                var active = filter(this.items, (\".\" + (this.clsOpen)));\n\t\n\t                item = this.items[index];\n\t\n\t                item && [item]\n\t                    .concat(!this.multiple && !includes(active, item) && active || [])\n\t                    .forEach(function (el) {\n\t\n\t                        var isItem = el === item;\n\t                        var state = isItem && !hasClass(el, this$1.clsOpen);\n\t\n\t                        if (!state && isItem && !this$1.collapsible && active.length < 2) {\n\t                            return;\n\t                        }\n\t\n\t                        toggleClass(el, this$1.clsOpen, state);\n\t\n\t                        var content = el._wrapper ? el._wrapper.firstElementChild : $(this$1.content, el);\n\t\n\t                        if (!el._wrapper) {\n\t                            el._wrapper = wrapAll(content, '<div>');\n\t                            attr(el._wrapper, 'hidden', state ? '' : null);\n\t                        }\n\t\n\t                        this$1._toggleImmediate(content, true);\n\t                        this$1.toggleElement(el._wrapper, state, animate).then(function () {\n\t                            if (hasClass(el, this$1.clsOpen) === state) {\n\t\n\t                                if (!state) {\n\t                                    this$1._toggleImmediate(content, false);\n\t                                }\n\t\n\t                                el._wrapper = null;\n\t                                unwrap(content);\n\t                            }\n\t                        });\n\t\n\t                    });\n\t            }\n\t\n\t        }\n\t\n\t    });\n\t\n\t}\n\t\n\tfunction Alert (UIkit) {\n\t\n\t    UIkit.component('alert', {\n\t\n\t        attrs: true,\n\t\n\t        mixins: [Class, Togglable],\n\t\n\t        args: 'animation',\n\t\n\t        props: {\n\t            close: String\n\t        },\n\t\n\t        defaults: {\n\t            animation: [true],\n\t            selClose: '.uk-alert-close',\n\t            duration: 150,\n\t            hideProps: assign({opacity: 0}, Togglable.defaults.hideProps)\n\t        },\n\t\n\t        events: [\n\t\n\t            {\n\t\n\t                name: 'click',\n\t\n\t                delegate: function delegate() {\n\t                    return this.selClose;\n\t                },\n\t\n\t                handler: function handler(e) {\n\t                    e.preventDefault();\n\t                    this.close();\n\t                }\n\t\n\t            }\n\t\n\t        ],\n\t\n\t        methods: {\n\t\n\t            close: function close() {\n\t                var this$1 = this;\n\t\n\t                this.toggleElement(this.$el).then(function () { return this$1.$destroy(true); });\n\t            }\n\t\n\t        }\n\t\n\t    });\n\t\n\t}\n\t\n\tfunction Core (UIkit) {\n\t\n\t    ready(function () {\n\t\n\t        var scroll = 0;\n\t        var started = 0;\n\t\n\t        on(win, 'load resize', UIkit.update);\n\t        on(win, 'scroll', function (e) {\n\t            e.dir = scroll <= win.pageYOffset ? 'down' : 'up';\n\t            e.scrollY = scroll = win.pageYOffset;\n\t            UIkit.update(e);\n\t        });\n\t\n\t        on(doc, 'animationstart', function (ref) {\n\t            var target = ref.target;\n\t\n\t            if ((css(target, 'animationName') || '').match(/^uk-.*(left|right)/)) {\n\t                started++;\n\t                doc.body.style.overflowX = 'hidden';\n\t                setTimeout(function () {\n\t                    if (!--started) {\n\t                        doc.body.style.overflowX = '';\n\t                    }\n\t                }, toMs(css(target, 'animationDuration')) + 100);\n\t            }\n\t        }, true);\n\t\n\t        if (!hasTouch) {\n\t            return;\n\t        }\n\t\n\t        var cls = 'uk-hover';\n\t\n\t        on(doc, 'tap', function (ref) {\n\t                var target = ref.target;\n\t\n\t                return $$((\".\" + cls)).forEach(function (el) { return !within(target, el) && removeClass(el, cls); }\n\t            );\n\t        }\n\t        );\n\t\n\t        Object.defineProperty(UIkit, 'hoverSelector', {\n\t\n\t            set: function set(selector) {\n\t                on(doc, 'tap', selector, function (ref) {\n\t                    var current = ref.current;\n\t\n\t                    return addClass(current, cls);\n\t                });\n\t            }\n\t\n\t        });\n\t\n\t        UIkit.hoverSelector = '.uk-animation-toggle, .uk-transition-toggle, [uk-hover]';\n\t\n\t    });\n\t\n\t}\n\t\n\tfunction Cover (UIkit) {\n\t\n\t    UIkit.component('cover', {\n\t\n\t        mixins: [Class, UIkit.components.video.options],\n\t\n\t        props: {\n\t            width: Number,\n\t            height: Number\n\t        },\n\t\n\t        defaults: {\n\t            automute: true\n\t        },\n\t\n\t        update: {\n\t\n\t            write: function write() {\n\t\n\t                var el = this.$el;\n\t\n\t                if (!isVisible(el)) {\n\t                    return;\n\t                }\n\t\n\t                var ref = el.parentNode;\n\t                var height = ref.offsetHeight;\n\t                var width = ref.offsetWidth;\n\t\n\t                css(\n\t                    css(el, {width: '', height: ''}),\n\t                    Dimensions.cover(\n\t                        {\n\t                            width: this.width || el.clientWidth,\n\t                            height: this.height || el.clientHeight\n\t                        },\n\t                        {\n\t                            width: width + (width % 2 ? 1 : 0),\n\t                            height: height + (height % 2 ? 1 : 0)\n\t                        }\n\t                    )\n\t                );\n\t\n\t            },\n\t\n\t            events: ['load', 'resize']\n\t\n\t        },\n\t\n\t        events: {\n\t\n\t            loadedmetadata: function loadedmetadata() {\n\t                this.$emit();\n\t            }\n\t\n\t        }\n\t\n\t    });\n\t\n\t}\n\t\n\tfunction Drop (UIkit) {\n\t\n\t    var active;\n\t\n\t    UIkit.component('drop', {\n\t\n\t        mixins: [Position, Togglable],\n\t\n\t        args: 'pos',\n\t\n\t        props: {\n\t            mode: 'list',\n\t            toggle: Boolean,\n\t            boundary: 'query',\n\t            boundaryAlign: Boolean,\n\t            delayShow: Number,\n\t            delayHide: Number,\n\t            clsDrop: String\n\t        },\n\t\n\t        defaults: {\n\t            mode: ['click', 'hover'],\n\t            toggle: true,\n\t            boundary: win,\n\t            boundaryAlign: false,\n\t            delayShow: 0,\n\t            delayHide: 800,\n\t            clsDrop: false,\n\t            hoverIdle: 200,\n\t            animation: ['uk-animation-fade'],\n\t            cls: 'uk-open'\n\t        },\n\t\n\t        computed: {\n\t\n\t            clsDrop: function clsDrop(ref) {\n\t                var clsDrop = ref.clsDrop;\n\t\n\t                return clsDrop || (\"uk-\" + (this.$options.name));\n\t            },\n\t\n\t            clsPos: function clsPos() {\n\t                return this.clsDrop;\n\t            }\n\t\n\t        },\n\t\n\t        init: function init() {\n\t            this.tracker = new MouseTracker();\n\t            addClass(this.$el, this.clsDrop);\n\t        },\n\t\n\t        connected: function connected() {\n\t\n\t            var ref = this.$props;\n\t            var toggle = ref.toggle;\n\t            this.toggle = toggle && UIkit.toggle(isString(toggle) ? query(toggle, this.$el) : this.$el.previousElementSibling, {\n\t                target: this.$el,\n\t                mode: this.mode\n\t            });\n\t\n\t            this.updateAria(this.$el);\n\t\n\t        },\n\t\n\t        events: [\n\t\n\t            {\n\t\n\t                name: 'click',\n\t\n\t                delegate: function delegate() {\n\t                    return (\".\" + (this.clsDrop) + \"-close\");\n\t                },\n\t\n\t                handler: function handler(e) {\n\t                    e.preventDefault();\n\t                    this.hide(false);\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t\n\t                name: 'click',\n\t\n\t                delegate: function delegate() {\n\t                    return 'a[href^=\"#\"]';\n\t                },\n\t\n\t                handler: function handler(e) {\n\t\n\t                    if (e.defaultPrevented) {\n\t                        return;\n\t                    }\n\t\n\t                    var id = e.target.hash;\n\t\n\t                    if (!id) {\n\t                        e.preventDefault();\n\t                    }\n\t\n\t                    if (!id || !within(id, this.$el)) {\n\t                        this.hide(false);\n\t                    }\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t\n\t                name: 'beforescroll',\n\t\n\t                handler: function handler() {\n\t                    this.hide(false);\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t\n\t                name: 'toggle',\n\t\n\t                self: true,\n\t\n\t                handler: function handler(e, toggle) {\n\t\n\t                    e.preventDefault();\n\t\n\t                    if (this.isToggled()) {\n\t                        this.hide(false);\n\t                    } else {\n\t                        this.show(toggle, false);\n\t                    }\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t\n\t                name: pointerEnter,\n\t\n\t                filter: function filter() {\n\t                    return includes(this.mode, 'hover');\n\t                },\n\t\n\t                handler: function handler(e) {\n\t\n\t                    if (isTouch(e)) {\n\t                        return;\n\t                    }\n\t\n\t                    if (active\n\t                        && active !== this\n\t                        && active.toggle\n\t                        && includes(active.toggle.mode, 'hover')\n\t                        && !within(e.target, active.toggle.$el)\n\t                        && !pointInRect({x: e.pageX, y: e.pageY}, offset(active.$el))\n\t                    ) {\n\t                        active.hide(false);\n\t                    }\n\t\n\t                    e.preventDefault();\n\t                    this.show(this.toggle);\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t\n\t                name: 'toggleshow',\n\t\n\t                handler: function handler(e, toggle) {\n\t\n\t                    if (toggle && !includes(toggle.target, this.$el)) {\n\t                        return;\n\t                    }\n\t\n\t                    e.preventDefault();\n\t                    this.show(toggle || this.toggle);\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t\n\t                name: (\"togglehide \" + pointerLeave),\n\t\n\t                handler: function handler(e, toggle) {\n\t\n\t                    if (isTouch(e) || toggle && !includes(toggle.target, this.$el)) {\n\t                        return;\n\t                    }\n\t\n\t                    e.preventDefault();\n\t\n\t                    if (this.toggle && includes(this.toggle.mode, 'hover')) {\n\t                        this.hide();\n\t                    }\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t\n\t                name: 'beforeshow',\n\t\n\t                self: true,\n\t\n\t                handler: function handler() {\n\t                    this.clearTimers();\n\t                    this.position();\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t\n\t                name: 'show',\n\t\n\t                self: true,\n\t\n\t                handler: function handler() {\n\t                    this.tracker.init();\n\t                    addClass(this.toggle.$el, this.cls);\n\t                    attr(this.toggle.$el, 'aria-expanded', 'true');\n\t                    registerEvent();\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t\n\t                name: 'beforehide',\n\t\n\t                self: true,\n\t\n\t                handler: function handler() {\n\t                    this.clearTimers();\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t\n\t                name: 'hide',\n\t\n\t                handler: function handler(ref) {\n\t                    var target = ref.target;\n\t\n\t\n\t                    if (this.$el !== target) {\n\t                        active = active === null && within(target, this.$el) && this.isToggled() ? this : active;\n\t                        return;\n\t                    }\n\t\n\t                    active = this.isActive() ? null : active;\n\t                    removeClass(this.toggle.$el, this.cls);\n\t                    attr(this.toggle.$el, 'aria-expanded', 'false');\n\t                    this.toggle.$el.blur();\n\t                    $$('a, button', this.toggle.$el).forEach(function (el) { return el.blur(); });\n\t                    this.tracker.cancel();\n\t                }\n\t\n\t            }\n\t\n\t        ],\n\t\n\t        update: {\n\t\n\t            write: function write() {\n\t\n\t                if (this.isToggled() && !Animation.inProgress(this.$el)) {\n\t                    this.position();\n\t                }\n\t\n\t            },\n\t\n\t            events: ['resize']\n\t\n\t        },\n\t\n\t        methods: {\n\t\n\t            show: function show(toggle, delay) {\n\t                var this$1 = this;\n\t                if ( delay === void 0 ) delay = true;\n\t\n\t\n\t                var show = function () { return !this$1.isToggled() && this$1.toggleElement(this$1.$el, true); };\n\t                var tryShow = function () {\n\t\n\t                    this$1.toggle = toggle || this$1.toggle;\n\t\n\t                    this$1.clearTimers();\n\t\n\t                    if (this$1.isActive()) {\n\t                        return;\n\t                    } else if (delay && active && active !== this$1 && active.isDelaying) {\n\t                        this$1.showTimer = setTimeout(this$1.show, 10);\n\t                        return;\n\t                    } else if (this$1.isParentOf(active)) {\n\t\n\t                        if (active.hideTimer) {\n\t                            active.hide(false);\n\t                        } else {\n\t                            return;\n\t                        }\n\t\n\t                    } else if (active && !this$1.isChildOf(active) && !this$1.isParentOf(active)) {\n\t\n\t                        var prev;\n\t                        while (active && active !== prev && !this$1.isChildOf(active)) {\n\t                            prev = active;\n\t                            active.hide(false);\n\t                        }\n\t\n\t                    }\n\t\n\t                    if (delay && this$1.delayShow) {\n\t                        this$1.showTimer = setTimeout(show, this$1.delayShow);\n\t                    } else {\n\t                        show();\n\t                    }\n\t\n\t                    active = this$1;\n\t                };\n\t\n\t                if (toggle && this.toggle && toggle.$el !== this.toggle.$el) {\n\t\n\t                    once(this.$el, 'hide', tryShow);\n\t                    this.hide(false);\n\t\n\t                } else {\n\t                    tryShow();\n\t                }\n\t            },\n\t\n\t            hide: function hide(delay) {\n\t                var this$1 = this;\n\t                if ( delay === void 0 ) delay = true;\n\t\n\t\n\t                var hide = function () { return this$1.toggleNow(this$1.$el, false); };\n\t\n\t                this.clearTimers();\n\t\n\t                this.isDelaying = this.tracker.movesTo(this.$el);\n\t\n\t                if (delay && this.isDelaying) {\n\t                    this.hideTimer = setTimeout(this.hide, this.hoverIdle);\n\t                } else if (delay && this.delayHide) {\n\t                    this.hideTimer = setTimeout(hide, this.delayHide);\n\t                } else {\n\t                    hide();\n\t                }\n\t            },\n\t\n\t            clearTimers: function clearTimers() {\n\t                clearTimeout(this.showTimer);\n\t                clearTimeout(this.hideTimer);\n\t                this.showTimer = null;\n\t                this.hideTimer = null;\n\t                this.isDelaying = false;\n\t            },\n\t\n\t            isActive: function isActive() {\n\t                return active === this;\n\t            },\n\t\n\t            isChildOf: function isChildOf(drop) {\n\t                return drop && drop !== this && within(this.$el, drop.$el);\n\t            },\n\t\n\t            isParentOf: function isParentOf(drop) {\n\t                return drop && drop !== this && within(drop.$el, this.$el);\n\t            },\n\t\n\t            position: function position() {\n\t\n\t                removeClasses(this.$el, ((this.clsDrop) + \"-(stack|boundary)\"));\n\t                css(this.$el, {top: '', left: '', display: 'block'});\n\t                toggleClass(this.$el, ((this.clsDrop) + \"-boundary\"), this.boundaryAlign);\n\t\n\t                var boundary = offset(this.boundary);\n\t                var alignTo = this.boundaryAlign ? boundary : offset(this.toggle.$el);\n\t\n\t                if (this.align === 'justify') {\n\t                    var prop = this.getAxis() === 'y' ? 'width' : 'height';\n\t                    css(this.$el, prop, alignTo[prop]);\n\t                } else if (this.$el.offsetWidth > Math.max(boundary.right - alignTo.left, alignTo.right - boundary.left)) {\n\t                    addClass(this.$el, ((this.clsDrop) + \"-stack\"));\n\t                }\n\t\n\t                this.positionAt(this.$el, this.boundaryAlign ? this.boundary : this.toggle.$el, this.boundary);\n\t\n\t                css(this.$el, 'display', '');\n\t\n\t            }\n\t\n\t        }\n\t\n\t    });\n\t\n\t    UIkit.drop.getActive = function () { return active; };\n\t\n\t    var registered;\n\t\n\t    function registerEvent() {\n\t\n\t        if (registered) {\n\t            return;\n\t        }\n\t\n\t        registered = true;\n\t        on(docEl, 'click', function (ref) {\n\t            var target = ref.target;\n\t            var defaultPrevented = ref.defaultPrevented;\n\t\n\t            var prev;\n\t\n\t            if (defaultPrevented) {\n\t                return;\n\t            }\n\t\n\t            while (active && active !== prev && !within(target, active.$el) && !(active.toggle && within(target, active.toggle.$el))) {\n\t                prev = active;\n\t                active.hide(false);\n\t            }\n\t        });\n\t    }\n\t\n\t}\n\t\n\tfunction Dropdown (UIkit) {\n\t\n\t    UIkit.component('dropdown', UIkit.components.drop.extend({name: 'dropdown'}));\n\t\n\t}\n\t\n\tfunction FormCustom (UIkit) {\n\t\n\t    UIkit.component('form-custom', {\n\t\n\t        mixins: [Class],\n\t\n\t        args: 'target',\n\t\n\t        props: {\n\t            target: Boolean\n\t        },\n\t\n\t        defaults: {\n\t            target: false\n\t        },\n\t\n\t        computed: {\n\t\n\t            input: function input(_, $el) {\n\t                return $(selInput, $el);\n\t            },\n\t\n\t            state: function state() {\n\t                return this.input.nextElementSibling;\n\t            },\n\t\n\t            target: function target(ref, $el) {\n\t                var target = ref.target;\n\t\n\t                return target && (target === true\n\t                    && this.input.parentNode === $el\n\t                    && this.input.nextElementSibling\n\t                    || query(target, $el));\n\t            }\n\t\n\t        },\n\t\n\t        update: function update() {\n\t\n\t            var ref = this;\n\t            var target = ref.target;\n\t            var input = ref.input;\n\t\n\t            if (!target) {\n\t                return;\n\t            }\n\t\n\t            var option;\n\t\n\t            target[isInput(target) ? 'value' : 'textContent'] = input.files && input.files[0]\n\t                ? input.files[0].name\n\t                : matches(input, 'select') && (option = $$('option', input).filter(function (el) { return el.selected; })[0])\n\t                    ? option.textContent\n\t                    : input.value;\n\t\n\t        },\n\t\n\t        events: [\n\t\n\t            {\n\t\n\t                name: 'focusin focusout mouseenter mouseleave',\n\t\n\t                delegate: selInput,\n\t\n\t                handler: function handler(ref) {\n\t                    var type = ref.type;\n\t                    var current = ref.current;\n\t\n\t                    if (current === this.input) {\n\t                        toggleClass(\n\t                            this.state,\n\t                            (\"uk-\" + (includes(type, 'focus') ? 'focus' : 'hover')),\n\t                            includes(['focusin', 'mouseenter'], type)\n\t                        );\n\t                    }\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t\n\t                name: 'change',\n\t\n\t                handler: function handler() {\n\t                    this.$emit();\n\t                }\n\t\n\t            }\n\t\n\t        ]\n\t\n\t    });\n\t\n\t}\n\t\n\tfunction Gif (UIkit) {\n\t\n\t    // Deprecated\n\t    UIkit.component('gif', {\n\t\n\t        update: {\n\t\n\t            read: function read(data) {\n\t\n\t                var inview = isInView(this.$el);\n\t\n\t                if (!inview || data.isInView === inview) {\n\t                    return false;\n\t                }\n\t\n\t                data.isInView = inview;\n\t            },\n\t\n\t            write: function write() {\n\t                this.$el.src = this.$el.src;\n\t            },\n\t\n\t            events: ['scroll', 'load', 'resize']\n\t        }\n\t\n\t    });\n\t\n\t}\n\t\n\tfunction Grid (UIkit) {\n\t\n\t    UIkit.component('grid', UIkit.components.margin.extend({\n\t\n\t        mixins: [Class],\n\t\n\t        name: 'grid',\n\t\n\t        defaults: {\n\t            margin: 'uk-grid-margin',\n\t            clsStack: 'uk-grid-stack'\n\t        },\n\t\n\t        update: {\n\t\n\t            write: function write(ref) {\n\t                var stacks = ref.stacks;\n\t\n\t\n\t                toggleClass(this.$el, this.clsStack, stacks);\n\t\n\t            },\n\t\n\t            events: ['load', 'resize']\n\t\n\t        }\n\t\n\t    }));\n\t\n\t}\n\t\n\tfunction HeightMatch (UIkit) {\n\t\n\t    UIkit.component('height-match', {\n\t\n\t        args: 'target',\n\t\n\t        props: {\n\t            target: String,\n\t            row: Boolean\n\t        },\n\t\n\t        defaults: {\n\t            target: '> *',\n\t            row: true\n\t        },\n\t\n\t        computed: {\n\t\n\t            elements: function elements(ref, $el) {\n\t                var target = ref.target;\n\t\n\t                return $$(target, $el);\n\t            }\n\t\n\t        },\n\t\n\t        update: {\n\t\n\t            read: function read() {\n\t                var this$1 = this;\n\t\n\t\n\t                var lastOffset = false;\n\t\n\t                css(this.elements, 'minHeight', '');\n\t\n\t                return {\n\t                    rows: !this.row\n\t                        ? [this.match(this.elements)]\n\t                        : this.elements.reduce(function (rows, el) {\n\t\n\t                            if (lastOffset !== el.offsetTop) {\n\t                                rows.push([el]);\n\t                            } else {\n\t                                rows[rows.length - 1].push(el);\n\t                            }\n\t\n\t                            lastOffset = el.offsetTop;\n\t\n\t                            return rows;\n\t\n\t                        }, []).map(function (elements) { return this$1.match(elements); })\n\t                };\n\t            },\n\t\n\t            write: function write(ref) {\n\t                var rows = ref.rows;\n\t\n\t\n\t                rows.forEach(function (ref) {\n\t                    var height = ref.height;\n\t                    var elements = ref.elements;\n\t\n\t                    return css(elements, 'minHeight', height);\n\t                });\n\t\n\t            },\n\t\n\t            events: ['load', 'resize']\n\t\n\t        },\n\t\n\t        methods: {\n\t\n\t            match: function match(elements) {\n\t\n\t                if (elements.length < 2) {\n\t                    return {};\n\t                }\n\t\n\t                var heights = [];\n\t                var max = 0;\n\t\n\t                elements\n\t                    .forEach(function (el) {\n\t\n\t                        var style, hidden;\n\t\n\t                        if (!isVisible(el)) {\n\t                            style = attr(el, 'style');\n\t                            hidden = attr(el, 'hidden');\n\t\n\t                            attr(el, {\n\t                                style: ((style || '') + \";display:block !important;\"),\n\t                                hidden: null\n\t                            });\n\t                        }\n\t\n\t                        max = Math.max(max, el.offsetHeight);\n\t                        heights.push(el.offsetHeight);\n\t\n\t                        if (!isUndefined(style)) {\n\t                            attr(el, {style: style, hidden: hidden});\n\t                        }\n\t\n\t                    });\n\t\n\t                elements = elements.filter(function (el, i) { return heights[i] < max; });\n\t\n\t                return {height: max, elements: elements};\n\t            }\n\t        }\n\t\n\t    });\n\t\n\t}\n\t\n\tfunction HeightViewport (UIkit) {\n\t\n\t    UIkit.component('height-viewport', {\n\t\n\t        props: {\n\t            expand: Boolean,\n\t            offsetTop: Boolean,\n\t            offsetBottom: Boolean,\n\t            minHeight: Number\n\t        },\n\t\n\t        defaults: {\n\t            expand: false,\n\t            offsetTop: false,\n\t            offsetBottom: false,\n\t            minHeight: 0\n\t        },\n\t\n\t        update: {\n\t\n\t            write: function write() {\n\t\n\t                css(this.$el, 'boxSizing', 'border-box');\n\t\n\t                var viewport = height(win);\n\t                var minHeight, offsetTop = 0;\n\t\n\t                if (this.expand) {\n\t\n\t                    css(this.$el, {height: '', minHeight: ''});\n\t\n\t                    var diff = viewport - offsetHeight(docEl);\n\t\n\t                    if (diff > 0) {\n\t                        minHeight = offsetHeight(this.$el) + diff;\n\t                    }\n\t\n\t                } else {\n\t\n\t                    var ref = offset(this.$el);\n\t                    var top = ref.top;\n\t\n\t                    if (top < viewport / 2 && this.offsetTop) {\n\t                        offsetTop += top;\n\t                    }\n\t\n\t                    if (this.offsetBottom === true) {\n\t\n\t                        offsetTop += offsetHeight(this.$el.nextElementSibling);\n\t\n\t                    } else if (isNumeric(this.offsetBottom)) {\n\t\n\t                        offsetTop += (viewport / 100) * this.offsetBottom;\n\t\n\t                    } else if (this.offsetBottom && endsWith(this.offsetBottom, 'px')) {\n\t\n\t                        offsetTop += toFloat(this.offsetBottom);\n\t\n\t                    } else if (isString(this.offsetBottom)) {\n\t\n\t                        offsetTop += offsetHeight(query(this.offsetBottom, this.$el));\n\t\n\t                    }\n\t\n\t                    // on mobile devices (iOS and Android) window.innerHeight !== 100vh\n\t                    minHeight = offsetTop ? (\"calc(100vh - \" + offsetTop + \"px)\") : '100vh';\n\t\n\t                }\n\t\n\t                if (!minHeight) {\n\t                    return;\n\t                }\n\t\n\t                css(this.$el, {height: '', minHeight: minHeight});\n\t\n\t                var elHeight = this.$el.offsetHeight;\n\t                if (this.minHeight && this.minHeight > elHeight) {\n\t                    css(this.$el, 'minHeight', this.minHeight);\n\t                }\n\t\n\t                // IE 11 fix (min-height on a flex container won't apply to its flex items)\n\t                if (viewport - offsetTop >= elHeight) {\n\t                    css(this.$el, 'height', minHeight);\n\t                }\n\t\n\t            },\n\t\n\t            events: ['load', 'resize']\n\t\n\t        }\n\t\n\t    });\n\t\n\t    function offsetHeight(el) {\n\t        return el && el.offsetHeight || 0;\n\t    }\n\t\n\t}\n\t\n\tvar closeIcon = \"<svg width=\\\"14\\\" height=\\\"14\\\" viewBox=\\\"0 0 14 14\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"1\\\" y1=\\\"1\\\" x2=\\\"13\\\" y2=\\\"13\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"13\\\" y1=\\\"1\\\" x2=\\\"1\\\" y2=\\\"13\\\"/></svg>\";\n\t\n\tvar closeLarge = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" x1=\\\"1\\\" y1=\\\"1\\\" x2=\\\"19\\\" y2=\\\"19\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" x1=\\\"19\\\" y1=\\\"1\\\" x2=\\\"1\\\" y2=\\\"19\\\"/></svg>\";\n\t\n\tvar marker = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"9\\\" y=\\\"4\\\" width=\\\"1\\\" height=\\\"11\\\"/><rect x=\\\"4\\\" y=\\\"9\\\" width=\\\"11\\\" height=\\\"1\\\"/></svg>\";\n\t\n\tvar navbarToggleIcon = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect y=\\\"9\\\" width=\\\"20\\\" height=\\\"2\\\"/><rect y=\\\"3\\\" width=\\\"20\\\" height=\\\"2\\\"/><rect y=\\\"15\\\" width=\\\"20\\\" height=\\\"2\\\"/></svg>\";\n\t\n\tvar overlayIcon = \"<svg width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"19\\\" y=\\\"0\\\" width=\\\"1\\\" height=\\\"40\\\"/><rect x=\\\"0\\\" y=\\\"19\\\" width=\\\"40\\\" height=\\\"1\\\"/></svg>\";\n\t\n\tvar paginationNext = \"<svg width=\\\"7\\\" height=\\\"12\\\" viewBox=\\\"0 0 7 12\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" points=\\\"1 1 6 6 1 11\\\"/></svg>\";\n\t\n\tvar paginationPrevious = \"<svg width=\\\"7\\\" height=\\\"12\\\" viewBox=\\\"0 0 7 12\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" points=\\\"6 1 1 6 6 11\\\"/></svg>\";\n\t\n\tvar searchIcon = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"9\\\" cy=\\\"9\\\" r=\\\"7\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M14,14 L18,18 L14,14 Z\\\"/></svg>\";\n\t\n\tvar searchLarge = \"<svg width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.8\\\" cx=\\\"17.5\\\" cy=\\\"17.5\\\" r=\\\"16.5\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.8\\\" x1=\\\"38\\\" y1=\\\"39\\\" x2=\\\"29\\\" y2=\\\"30\\\"/></svg>\";\n\t\n\tvar searchNavbar = \"<svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10.5\\\" cy=\\\"10.5\\\" r=\\\"9.5\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"23\\\" y1=\\\"23\\\" x2=\\\"17\\\" y2=\\\"17\\\"/></svg>\";\n\t\n\tvar slidenavNext = \"<svg width=\\\"14px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 14 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" points=\\\"1.225,23 12.775,12 1.225,1 \\\"/></svg>\";\n\t\n\tvar slidenavNextLarge = \"<svg width=\\\"25px\\\" height=\\\"40px\\\" viewBox=\\\"0 0 25 40\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"2\\\" points=\\\"4.002,38.547 22.527,20.024 4,1.5 \\\"/></svg>\";\n\t\n\tvar slidenavPrevious = \"<svg width=\\\"14px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 14 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" points=\\\"12.775,1 1.225,12 12.775,23 \\\"/></svg>\";\n\t\n\tvar slidenavPreviousLarge = \"<svg width=\\\"25px\\\" height=\\\"40px\\\" viewBox=\\\"0 0 25 40\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"2\\\" points=\\\"20.527,1.5 2,20.024 20.525,38.547 \\\"/></svg>\";\n\t\n\tvar spinner = \"<svg width=\\\"30\\\" height=\\\"30\\\" viewBox=\\\"0 0 30 30\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"15\\\" cy=\\\"15\\\" r=\\\"14\\\"/></svg>\";\n\t\n\tvar totop = \"<svg width=\\\"18\\\" height=\\\"10\\\" viewBox=\\\"0 0 18 10\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" points=\\\"1 9 9 1 17 9 \\\"/></svg>\";\n\t\n\tfunction Icon (UIkit) {\n\t\n\t    var parsed = {};\n\t    var icons = {\n\t        spinner: spinner,\n\t        totop: totop,\n\t        marker: marker,\n\t        'close-icon': closeIcon,\n\t        'close-large': closeLarge,\n\t        'navbar-toggle-icon': navbarToggleIcon,\n\t        'overlay-icon': overlayIcon,\n\t        'pagination-next': paginationNext,\n\t        'pagination-previous': paginationPrevious,\n\t        'search-icon': searchIcon,\n\t        'search-large': searchLarge,\n\t        'search-navbar': searchNavbar,\n\t        'slidenav-next': slidenavNext,\n\t        'slidenav-next-large': slidenavNextLarge,\n\t        'slidenav-previous': slidenavPrevious,\n\t        'slidenav-previous-large': slidenavPreviousLarge\n\t    };\n\t\n\t    UIkit.component('icon', UIkit.components.svg.extend({\n\t\n\t        attrs: ['icon', 'ratio'],\n\t\n\t        mixins: [Class],\n\t\n\t        name: 'icon',\n\t\n\t        args: 'icon',\n\t\n\t        props: ['icon'],\n\t\n\t        defaults: {exclude: ['id', 'style', 'class', 'src', 'icon']},\n\t\n\t        init: function init() {\n\t            addClass(this.$el, 'uk-icon');\n\t\n\t            if (isRtl) {\n\t                this.icon = swap(swap(this.icon, 'left', 'right'), 'previous', 'next');\n\t            }\n\t        },\n\t\n\t        methods: {\n\t\n\t            getSvg: function getSvg() {\n\t\n\t                var icon = getIcon(this.icon);\n\t\n\t                if (!icon) {\n\t                    return Promise.reject('Icon not found.');\n\t                }\n\t\n\t                return Promise.resolve(icon);\n\t            }\n\t\n\t        }\n\t\n\t    }));\n\t\n\t    [\n\t        'marker',\n\t        'navbar-toggle-icon',\n\t        'overlay-icon',\n\t        'pagination-previous',\n\t        'pagination-next',\n\t        'totop'\n\t    ].forEach(function (name) { return registerComponent(name); });\n\t\n\t    [\n\t        'slidenav-previous',\n\t        'slidenav-next'\n\t    ].forEach(function (name) { return registerComponent(name, {\n\t\n\t        init: function init() {\n\t            addClass(this.$el, 'uk-slidenav');\n\t\n\t            if (hasClass(this.$el, 'uk-slidenav-large')) {\n\t                this.icon += '-large';\n\t            }\n\t        }\n\t\n\t    }); });\n\t\n\t    registerComponent('search-icon', {\n\t\n\t        init: function init() {\n\t            if (hasClass(this.$el, 'uk-search-icon') && parents(this.$el, '.uk-search-large').length) {\n\t                this.icon = 'search-large';\n\t            } else if (parents(this.$el, '.uk-search-navbar').length) {\n\t                this.icon = 'search-navbar';\n\t            }\n\t        }\n\t\n\t    });\n\t\n\t    registerComponent('close', {\n\t\n\t        init: function init() {\n\t            this.icon = \"close-\" + (hasClass(this.$el, 'uk-close-large') ? 'large' : 'icon');\n\t        }\n\t\n\t    });\n\t\n\t    registerComponent('spinner', {\n\t\n\t        connected: function connected() {\n\t            var this$1 = this;\n\t\n\t            this.svg.then(function (svg) { return this$1.ratio !== 1 && css($('circle', svg), 'stroke-width', 1 / this$1.ratio); }, noop);\n\t        }\n\t\n\t    });\n\t\n\t    UIkit.icon.add = function (added) {\n\t        Object.keys(added).forEach(function (name) {\n\t            icons[name] = added[name];\n\t            delete parsed[name];\n\t        });\n\t\n\t        if (UIkit._initialized) {\n\t            each(UIkit.instances, function (component) {\n\t                if (component.$options.name === 'icon') {\n\t                    component.$reset();\n\t                }\n\t            });\n\t        }\n\t    };\n\t\n\t    function registerComponent(name, mixin$$1) {\n\t\n\t        UIkit.component(name, UIkit.components.icon.extend({\n\t\n\t            name: name,\n\t\n\t            mixins: mixin$$1 ? [mixin$$1] : [],\n\t\n\t            defaults: {\n\t                icon: name\n\t            }\n\t\n\t        }));\n\t    }\n\t\n\t    function getIcon(icon) {\n\t\n\t        if (!icons[icon]) {\n\t            return null;\n\t        }\n\t\n\t        if (!parsed[icon]) {\n\t            parsed[icon] = $(icons[icon].trim());\n\t        }\n\t\n\t        return parsed[icon];\n\t    }\n\t\n\t}\n\t\n\tfunction Leader (UIkit) {\n\t\n\t    UIkit.component('leader', {\n\t\n\t        mixins: [Class],\n\t\n\t        props: {\n\t            fill: String,\n\t            media: 'media'\n\t        },\n\t\n\t        defaults: {\n\t            fill: '',\n\t            media: false,\n\t            clsWrapper: 'uk-leader-fill',\n\t            clsHide: 'uk-leader-hide',\n\t            attrFill: 'data-fill'\n\t        },\n\t\n\t        computed: {\n\t\n\t            fill: function fill(ref) {\n\t                var fill = ref.fill;\n\t\n\t                return fill || getCssVar('leader-fill');\n\t            }\n\t\n\t        },\n\t\n\t        connected: function connected() {\n\t            var assign;\n\t            (assign = wrapInner(this.$el, (\"<span class=\\\"\" + (this.clsWrapper) + \"\\\">\")), this.wrapper = assign[0]);\n\t        },\n\t\n\t        disconnected: function disconnected() {\n\t            unwrap(this.wrapper.childNodes);\n\t        },\n\t\n\t        update: [\n\t\n\t            {\n\t\n\t                read: function read(ref) {\n\t                    var changed = ref.changed;\n\t                    var width = ref.width;\n\t\n\t\n\t                    var prev = width;\n\t\n\t                    width = Math.floor(this.$el.offsetWidth / 2);\n\t\n\t                    return {\n\t                        width: width,\n\t                        changed: changed || prev !== width,\n\t                        hide: this.media && !win.matchMedia(this.media).matches\n\t                    };\n\t                },\n\t\n\t                write: function write(data) {\n\t\n\t                    toggleClass(this.wrapper, this.clsHide, data.hide);\n\t\n\t                    if (data.changed) {\n\t                        data.changed = false;\n\t                        attr(this.wrapper, this.attrFill, new Array(data.width).join(this.fill));\n\t                    }\n\t\n\t                },\n\t\n\t                events: ['load', 'resize']\n\t\n\t            }\n\t        ]\n\t    });\n\t\n\t}\n\t\n\tfunction Margin (UIkit) {\n\t\n\t    UIkit.component('margin', {\n\t\n\t        props: {\n\t            margin: String,\n\t            firstColumn: Boolean\n\t        },\n\t\n\t        defaults: {\n\t            margin: 'uk-margin-small-top',\n\t            firstColumn: 'uk-first-column'\n\t        },\n\t\n\t        update: {\n\t\n\t            read: function read(data) {\n\t\n\t                var items = this.$el.children;\n\t\n\t                if (!items.length || !isVisible(this.$el)) {\n\t                    return data.rows = false;\n\t                }\n\t\n\t                data.stacks = true;\n\t\n\t                var rows = [[]];\n\t\n\t                for (var i = 0; i < items.length; i++) {\n\t\n\t                    var el = items[i];\n\t                    var dim = el.getBoundingClientRect();\n\t\n\t                    if (!dim.height) {\n\t                        continue;\n\t                    }\n\t\n\t                    for (var j = rows.length - 1; j >= 0; j--) {\n\t\n\t                        var row = rows[j];\n\t\n\t                        if (!row[0]) {\n\t                            row.push(el);\n\t                            break;\n\t                        }\n\t\n\t                        var leftDim = row[0].getBoundingClientRect();\n\t\n\t                        if (dim.top >= Math.floor(leftDim.bottom)) {\n\t                            rows.push([el]);\n\t                            break;\n\t                        }\n\t\n\t                        if (Math.floor(dim.bottom) > leftDim.top) {\n\t\n\t                            data.stacks = false;\n\t\n\t                            if (dim.left < leftDim.left && !isRtl) {\n\t                                row.unshift(el);\n\t                                break;\n\t                            }\n\t\n\t                            row.push(el);\n\t                            break;\n\t                        }\n\t\n\t                        if (j === 0) {\n\t                            rows.unshift([el]);\n\t                            break;\n\t                        }\n\t\n\t                    }\n\t\n\t                }\n\t\n\t                data.rows = rows;\n\t\n\t            },\n\t\n\t            write: function write(ref) {\n\t                var this$1 = this;\n\t                var rows = ref.rows;\n\t\n\t\n\t                rows.forEach(function (row, i) { return row.forEach(function (el, j) {\n\t                        toggleClass(el, this$1.margin, i !== 0);\n\t                        toggleClass(el, this$1.firstColumn, j === 0);\n\t                    }); }\n\t                );\n\t\n\t            },\n\t\n\t            events: ['load', 'resize']\n\t\n\t        }\n\t\n\t    });\n\t\n\t}\n\t\n\tfunction Modal$1 (UIkit) {\n\t\n\t    UIkit.component('modal', {\n\t\n\t        mixins: [Modal],\n\t\n\t        defaults: {\n\t            clsPage: 'uk-modal-page',\n\t            clsPanel: 'uk-modal-dialog',\n\t            selClose: '.uk-modal-close, .uk-modal-close-default, .uk-modal-close-outside, .uk-modal-close-full'\n\t        },\n\t\n\t        events: [\n\t\n\t            {\n\t                name: 'show',\n\t\n\t                self: true,\n\t\n\t                handler: function handler() {\n\t\n\t                    if (hasClass(this.panel, 'uk-margin-auto-vertical')) {\n\t                        addClass(this.$el, 'uk-flex');\n\t                    } else {\n\t                        css(this.$el, 'display', 'block');\n\t                    }\n\t\n\t                    height(this.$el); // force reflow\n\t                }\n\t            },\n\t\n\t            {\n\t                name: 'hidden',\n\t\n\t                self: true,\n\t\n\t                handler: function handler() {\n\t\n\t                    css(this.$el, 'display', '');\n\t                    removeClass(this.$el, 'uk-flex');\n\t\n\t                }\n\t            }\n\t\n\t        ]\n\t\n\t    });\n\t\n\t    UIkit.component('overflow-auto', {\n\t\n\t        mixins: [Class],\n\t\n\t        computed: {\n\t\n\t            modal: function modal(_, $el) {\n\t                return closest($el, '.uk-modal');\n\t            },\n\t\n\t            panel: function panel(_, $el) {\n\t                return closest($el, '.uk-modal-dialog');\n\t            }\n\t\n\t        },\n\t\n\t        connected: function connected() {\n\t            css(this.$el, 'minHeight', 150);\n\t        },\n\t\n\t        update: {\n\t\n\t            write: function write() {\n\t\n\t                if (!this.panel || !this.modal) {\n\t                    return;\n\t                }\n\t\n\t                var current = css(this.$el, 'maxHeight');\n\t\n\t                css(css(this.$el, 'maxHeight', 150), 'maxHeight', Math.max(150, 150 + height(this.modal) - this.panel.offsetHeight));\n\t                if (current !== css(this.$el, 'maxHeight')) {\n\t                    trigger(this.$el, 'resize');\n\t                }\n\t            },\n\t\n\t            events: ['load', 'resize']\n\t\n\t        }\n\t\n\t    });\n\t\n\t    UIkit.modal.dialog = function (content, options) {\n\t\n\t        var dialog = UIkit.modal((\" <div class=\\\"uk-modal\\\"> <div class=\\\"uk-modal-dialog\\\">\" + content + \"</div> </div> \"), options);\n\t\n\t        dialog.show();\n\t\n\t        on(dialog.$el, 'hidden', function (ref) {\n\t            var target = ref.target;\n\t            var currentTarget = ref.currentTarget;\n\t\n\t            if (target === currentTarget) {\n\t                dialog.$destroy(true);\n\t            }\n\t        });\n\t\n\t        return dialog;\n\t    };\n\t\n\t    UIkit.modal.alert = function (message, options) {\n\t\n\t        options = assign({bgClose: false, escClose: false, labels: UIkit.modal.labels}, options);\n\t\n\t        return new Promise(\n\t            function (resolve) { return on(UIkit.modal.dialog((\" <div class=\\\"uk-modal-body\\\">\" + (isString(message) ? message : html(message)) + \"</div> <div class=\\\"uk-modal-footer uk-text-right\\\"> <button class=\\\"uk-button uk-button-primary uk-modal-close\\\" autofocus>\" + (options.labels.ok) + \"</button> </div> \"), options).$el, 'hide', resolve); }\n\t        );\n\t    };\n\t\n\t    UIkit.modal.confirm = function (message, options) {\n\t\n\t        options = assign({bgClose: false, escClose: true, labels: UIkit.modal.labels}, options);\n\t\n\t        return new Promise(function (resolve, reject) {\n\t\n\t            var confirm = UIkit.modal.dialog((\" <form> <div class=\\\"uk-modal-body\\\">\" + (isString(message) ? message : html(message)) + \"</div> <div class=\\\"uk-modal-footer uk-text-right\\\"> <button class=\\\"uk-button uk-button-default uk-modal-close\\\" type=\\\"button\\\">\" + (options.labels.cancel) + \"</button> <button class=\\\"uk-button uk-button-primary\\\" autofocus>\" + (options.labels.ok) + \"</button> </div> </form> \"), options);\n\t\n\t            var resolved = false;\n\t\n\t            on(confirm.$el, 'submit', 'form', function (e) {\n\t                e.preventDefault();\n\t                resolve();\n\t                resolved = true;\n\t                confirm.hide();\n\t            });\n\t            on(confirm.$el, 'hide', function () {\n\t                if (!resolved) {\n\t                    reject();\n\t                }\n\t            });\n\t\n\t        });\n\t    };\n\t\n\t    UIkit.modal.prompt = function (message, value, options) {\n\t\n\t        options = assign({bgClose: false, escClose: true, labels: UIkit.modal.labels}, options);\n\t\n\t        return new Promise(function (resolve) {\n\t\n\t            var prompt = UIkit.modal.dialog((\" <form class=\\\"uk-form-stacked\\\"> <div class=\\\"uk-modal-body\\\"> <label>\" + (isString(message) ? message : html(message)) + \"</label> <input class=\\\"uk-input\\\" autofocus> </div> <div class=\\\"uk-modal-footer uk-text-right\\\"> <button class=\\\"uk-button uk-button-default uk-modal-close\\\" type=\\\"button\\\">\" + (options.labels.cancel) + \"</button> <button class=\\\"uk-button uk-button-primary\\\">\" + (options.labels.ok) + \"</button> </div> </form> \"), options),\n\t                input = $('input', prompt.$el);\n\t\n\t            input.value = value;\n\t\n\t            var resolved = false;\n\t\n\t            on(prompt.$el, 'submit', 'form', function (e) {\n\t                e.preventDefault();\n\t                resolve(input.value);\n\t                resolved = true;\n\t                prompt.hide();\n\t            });\n\t            on(prompt.$el, 'hide', function () {\n\t                if (!resolved) {\n\t                    resolve(null);\n\t                }\n\t            });\n\t\n\t        });\n\t    };\n\t\n\t    UIkit.modal.labels = {\n\t        ok: 'Ok',\n\t        cancel: 'Cancel'\n\t    };\n\t\n\t}\n\t\n\tfunction Nav (UIkit) {\n\t\n\t    UIkit.component('nav', UIkit.components.accordion.extend({\n\t\n\t        name: 'nav',\n\t\n\t        defaults: {\n\t            targets: '> .uk-parent',\n\t            toggle: '> a',\n\t            content: '> ul'\n\t        }\n\t\n\t    }));\n\t\n\t}\n\t\n\tfunction Navbar (UIkit) {\n\t\n\t    UIkit.component('navbar', {\n\t\n\t        mixins: [Class],\n\t\n\t        props: {\n\t            dropdown: String,\n\t            mode: 'list',\n\t            align: String,\n\t            offset: Number,\n\t            boundary: Boolean,\n\t            boundaryAlign: Boolean,\n\t            clsDrop: String,\n\t            delayShow: Number,\n\t            delayHide: Number,\n\t            dropbar: Boolean,\n\t            dropbarMode: String,\n\t            dropbarAnchor: 'query',\n\t            duration: Number\n\t        },\n\t\n\t        defaults: {\n\t            dropdown: '.uk-navbar-nav > li',\n\t            align: !isRtl ? 'left' : 'right',\n\t            clsDrop: 'uk-navbar-dropdown',\n\t            mode: undefined,\n\t            offset: undefined,\n\t            delayShow: undefined,\n\t            delayHide: undefined,\n\t            boundaryAlign: undefined,\n\t            flip: 'x',\n\t            boundary: true,\n\t            dropbar: false,\n\t            dropbarMode: 'slide',\n\t            dropbarAnchor: false,\n\t            duration: 200,\n\t        },\n\t\n\t        computed: {\n\t\n\t            boundary: function boundary(ref, $el) {\n\t                var boundary = ref.boundary;\n\t                var boundaryAlign = ref.boundaryAlign;\n\t\n\t                return (boundary === true || boundaryAlign) ? $el : boundary;\n\t            },\n\t\n\t            pos: function pos(ref) {\n\t                var align = ref.align;\n\t\n\t                return (\"bottom-\" + align);\n\t            }\n\t\n\t        },\n\t\n\t        beforeConnect: function beforeConnect() {\n\t\n\t            var ref = this.$props;\n\t            var dropbar = ref.dropbar;\n\t\n\t            this.dropbar = dropbar && (isString(dropbar) && query(dropbar, this.$el) || $('<div></div>'));\n\t\n\t            if (this.dropbar) {\n\t\n\t                addClass(this.dropbar, 'uk-navbar-dropbar');\n\t\n\t                if (this.dropbarMode === 'slide') {\n\t                    addClass(this.dropbar, 'uk-navbar-dropbar-slide');\n\t                }\n\t            }\n\t\n\t        },\n\t\n\t        disconnected: function disconnected() {\n\t            this.dropbar && remove(this.dropbar);\n\t        },\n\t\n\t        update: function update() {\n\t\n\t            UIkit.drop(\n\t                $$(((this.dropdown) + \" .\" + (this.clsDrop)), this.$el).filter(function (el) { return !UIkit.getComponent(el, 'drop') && !UIkit.getComponent(el, 'dropdown'); }),\n\t                assign({}, this.$props, {boundary: this.boundary, pos: this.pos, offset: this.dropbar || this.offset})\n\t            );\n\t\n\t        },\n\t\n\t        events: [\n\t\n\t            {\n\t                name: 'mouseover',\n\t\n\t                delegate: function delegate() {\n\t                    return this.dropdown;\n\t                },\n\t\n\t                handler: function handler(ref) {\n\t                    var current = ref.current;\n\t\n\t                    var active = this.getActive();\n\t                    if (active && active.toggle && !within(active.toggle.$el, current) && !active.tracker.movesTo(active.$el)) {\n\t                        active.hide(false);\n\t                    }\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t                name: 'mouseleave',\n\t\n\t                el: function el() {\n\t                    return this.dropbar;\n\t                },\n\t\n\t                handler: function handler() {\n\t                    var active = this.getActive();\n\t\n\t                    if (active && !matches(this.dropbar, ':hover')) {\n\t                        active.hide();\n\t                    }\n\t                }\n\t            },\n\t\n\t            {\n\t                name: 'beforeshow',\n\t\n\t                capture: true,\n\t\n\t                filter: function filter() {\n\t                    return this.dropbar;\n\t                },\n\t\n\t                handler: function handler() {\n\t\n\t                    if (!this.dropbar.parentNode) {\n\t                        after(this.dropbarAnchor || this.$el, this.dropbar);\n\t                    }\n\t\n\t                }\n\t            },\n\t\n\t            {\n\t                name: 'show',\n\t\n\t                capture: true,\n\t\n\t                filter: function filter() {\n\t                    return this.dropbar;\n\t                },\n\t\n\t                handler: function handler(_, drop) {\n\t\n\t                    var $el = drop.$el;\n\t\n\t                    this.clsDrop && addClass($el, ((this.clsDrop) + \"-dropbar\"));\n\t\n\t                    this.transitionTo($el.offsetHeight + toFloat(css($el, 'margin-top')) + toFloat(css($el, 'margin-bottom')), $el);\n\t                }\n\t            },\n\t\n\t            {\n\t                name: 'beforehide',\n\t\n\t                filter: function filter() {\n\t                    return this.dropbar;\n\t                },\n\t\n\t                handler: function handler(e, ref) {\n\t                    var $el = ref.$el;\n\t\n\t\n\t                    var active = this.getActive();\n\t\n\t                    if (matches(this.dropbar, ':hover') && active && active.$el === $el) {\n\t                        e.preventDefault();\n\t                    }\n\t                }\n\t            },\n\t\n\t            {\n\t                name: 'hide',\n\t\n\t                filter: function filter() {\n\t                    return this.dropbar;\n\t                },\n\t\n\t                handler: function handler(_, ref) {\n\t                    var $el = ref.$el;\n\t\n\t\n\t                    var active = this.getActive();\n\t\n\t                    if (!active || active && active.$el === $el) {\n\t                        this.transitionTo(0);\n\t                    }\n\t                }\n\t            }\n\t\n\t        ],\n\t\n\t        methods: {\n\t\n\t            getActive: function getActive() {\n\t                var active = UIkit.drop.getActive();\n\t                return active && includes(active.mode, 'hover') && within(active.toggle.$el, this.$el) && active;\n\t            },\n\t\n\t            transitionTo: function transitionTo(newHeight, el) {\n\t\n\t                var ref = this;\n\t                var dropbar = ref.dropbar;\n\t                var oldHeight = isVisible(dropbar) ? height(dropbar) : 0;\n\t\n\t                el = oldHeight < newHeight && el;\n\t\n\t                css(el, {height: oldHeight, overflow: 'hidden'});\n\t                height(dropbar, oldHeight);\n\t\n\t                Transition.cancel([el, dropbar]);\n\t                return Transition\n\t                    .start([el, dropbar], {height: newHeight}, this.duration)\n\t                    .catch(noop)\n\t                    .finally(function () { return css(el, {height: '', overflow: ''}); });\n\t            }\n\t\n\t        }\n\t\n\t    });\n\t\n\t}\n\t\n\tvar scroll;\n\t\n\tfunction Offcanvas (UIkit) {\n\t\n\t    UIkit.component('offcanvas', {\n\t\n\t        mixins: [Modal],\n\t\n\t        args: 'mode',\n\t\n\t        props: {\n\t            content: String,\n\t            mode: String,\n\t            flip: Boolean,\n\t            overlay: Boolean\n\t        },\n\t\n\t        defaults: {\n\t            content: '.uk-offcanvas-content',\n\t            mode: 'slide',\n\t            flip: false,\n\t            overlay: false,\n\t            clsPage: 'uk-offcanvas-page',\n\t            clsContainer: 'uk-offcanvas-container',\n\t            clsPanel: 'uk-offcanvas-bar',\n\t            clsFlip: 'uk-offcanvas-flip',\n\t            clsContent: 'uk-offcanvas-content',\n\t            clsContentAnimation: 'uk-offcanvas-content-animation',\n\t            clsSidebarAnimation: 'uk-offcanvas-bar-animation',\n\t            clsMode: 'uk-offcanvas',\n\t            clsOverlay: 'uk-offcanvas-overlay',\n\t            selClose: '.uk-offcanvas-close'\n\t        },\n\t\n\t        computed: {\n\t\n\t            content: function content(ref) {\n\t                var content = ref.content;\n\t\n\t                return $(content) || doc.body;\n\t            },\n\t\n\t            clsFlip: function clsFlip(ref) {\n\t                var flip = ref.flip;\n\t                var clsFlip = ref.clsFlip;\n\t\n\t                return flip ? clsFlip : '';\n\t            },\n\t\n\t            clsOverlay: function clsOverlay(ref) {\n\t                var overlay = ref.overlay;\n\t                var clsOverlay = ref.clsOverlay;\n\t\n\t                return overlay ? clsOverlay : '';\n\t            },\n\t\n\t            clsMode: function clsMode(ref) {\n\t                var mode = ref.mode;\n\t                var clsMode = ref.clsMode;\n\t\n\t                return (clsMode + \"-\" + mode);\n\t            },\n\t\n\t            clsSidebarAnimation: function clsSidebarAnimation(ref) {\n\t                var mode = ref.mode;\n\t                var clsSidebarAnimation = ref.clsSidebarAnimation;\n\t\n\t                return mode === 'none' || mode === 'reveal' ? '' : clsSidebarAnimation;\n\t            },\n\t\n\t            clsContentAnimation: function clsContentAnimation(ref) {\n\t                var mode = ref.mode;\n\t                var clsContentAnimation = ref.clsContentAnimation;\n\t\n\t                return mode !== 'push' && mode !== 'reveal' ? '' : clsContentAnimation;\n\t            },\n\t\n\t            transitionElement: function transitionElement(ref) {\n\t                var mode = ref.mode;\n\t\n\t                return mode === 'reveal' ? this.panel.parentNode : this.panel;\n\t            }\n\t\n\t        },\n\t\n\t        update: {\n\t\n\t            write: function write() {\n\t\n\t                if (this.getActive() === this) {\n\t\n\t                    if (this.overlay || this.clsContentAnimation) {\n\t                        width(this.content, width(win) - this.scrollbarWidth);\n\t                    }\n\t\n\t                    if (this.overlay) {\n\t                        height(this.content, height(win));\n\t                        if (scroll) {\n\t                            this.content.scrollTop = scroll.y;\n\t                        }\n\t                    }\n\t\n\t                }\n\t\n\t            },\n\t\n\t            events: ['resize']\n\t\n\t        },\n\t\n\t        events: [\n\t\n\t            {\n\t\n\t                name: 'click',\n\t\n\t                delegate: function delegate() {\n\t                    return 'a[href^=\"#\"]';\n\t                },\n\t\n\t                handler: function handler(ref) {\n\t                    var current = ref.current;\n\t\n\t                    if (current.hash && $(current.hash, this.content)) {\n\t                        scroll = null;\n\t                        this.hide();\n\t                    }\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t\n\t                name: 'beforescroll',\n\t\n\t                filter: function filter() {\n\t                    return this.overlay;\n\t                },\n\t\n\t                handler: function handler(e, scroll, target) {\n\t                    if (scroll && target && this.isToggled() && $(target, this.content)) {\n\t                        once(this.$el, 'hidden', function () { return scroll.scrollTo(target); });\n\t                        e.preventDefault();\n\t                    }\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t                name: 'show',\n\t\n\t                self: true,\n\t\n\t                handler: function handler() {\n\t\n\t                    scroll = scroll || {x: win.pageXOffset, y: win.pageYOffset};\n\t\n\t                    if (this.mode === 'reveal' && !hasClass(this.panel, this.clsMode)) {\n\t                        wrapAll(this.panel, '<div>');\n\t                        addClass(this.panel.parentNode, this.clsMode);\n\t                    }\n\t\n\t                    css(docEl, 'overflowY', (!this.clsContentAnimation || this.flip) && this.scrollbarWidth && this.overlay ? 'scroll' : '');\n\t                    addClass(doc.body, this.clsContainer, this.clsFlip, this.clsOverlay);\n\t                    height(doc.body); // force reflow\n\t                    addClass(this.content, this.clsContentAnimation);\n\t                    addClass(this.panel, ((this.clsSidebarAnimation) + \" \" + (this.mode !== 'reveal' ? this.clsMode : '')));\n\t                    addClass(this.$el, this.clsOverlay);\n\t                    css(this.$el, 'display', 'block');\n\t                    height(this.$el); // force reflow\n\t\n\t                }\n\t            },\n\t\n\t            {\n\t                name: 'hide',\n\t\n\t                self: true,\n\t\n\t                handler: function handler() {\n\t                    removeClass(this.content, this.clsContentAnimation);\n\t\n\t                    var active = this.getActive();\n\t                    if (this.mode === 'none' || active && active !== this && active !== this.prev) {\n\t                        trigger(this.panel, 'transitionend');\n\t                    }\n\t                }\n\t            },\n\t\n\t            {\n\t                name: 'hidden',\n\t\n\t                self: true,\n\t\n\t                handler: function handler() {\n\t\n\t                    if (this.mode === 'reveal') {\n\t                        unwrap(this.panel);\n\t                    }\n\t\n\t                    if (!this.overlay) {\n\t                        scroll = {x: win.pageXOffset, y: win.pageYOffset};\n\t                    } else if (!scroll) {\n\t                        var ref = this.content;\n\t                        var x = ref.scrollLeft;\n\t                        var y = ref.scrollTop;\n\t                        scroll = {x: x, y: y};\n\t                    }\n\t\n\t                    removeClass(this.panel, this.clsSidebarAnimation, this.clsMode);\n\t                    removeClass(this.$el, this.clsOverlay);\n\t                    css(this.$el, 'display', '');\n\t                    removeClass(doc.body, this.clsContainer, this.clsFlip, this.clsOverlay);\n\t                    doc.body.scrollTop = scroll.y;\n\t\n\t                    css(docEl, 'overflow-y', '');\n\t\n\t                    width(this.content, '');\n\t                    height(this.content, '');\n\t\n\t                    win.scrollTo(scroll.x, scroll.y);\n\t\n\t                    scroll = null;\n\t\n\t                }\n\t            },\n\t\n\t            {\n\t                name: 'swipeLeft swipeRight',\n\t\n\t                handler: function handler(e) {\n\t\n\t                    if (this.isToggled() && isTouch(e) && (e.type === 'swipeLeft' && !this.flip || e.type === 'swipeRight' && this.flip)) {\n\t                        this.hide();\n\t                    }\n\t\n\t                }\n\t            }\n\t\n\t        ]\n\t\n\t    });\n\t\n\t}\n\t\n\tfunction Responsive (UIkit) {\n\t\n\t    UIkit.component('responsive', {\n\t\n\t        props: ['width', 'height'],\n\t\n\t        init: function init() {\n\t            addClass(this.$el, 'uk-responsive-width');\n\t        },\n\t\n\t        update: {\n\t\n\t            read: function read() {\n\t                return isVisible(this.$el) && this.width && this.height\n\t                    ? {width: width(this.$el.parentNode), height: this.height}\n\t                    : false;\n\t            },\n\t\n\t            write: function write(dim) {\n\t                height(this.$el, Dimensions.contain({height: this.height, width: this.width}, dim).height);\n\t            },\n\t\n\t            events: ['load', 'resize']\n\t\n\t        }\n\t\n\t    });\n\t\n\t}\n\t\n\tfunction Scroll (UIkit) {\n\t\n\t    UIkit.component('scroll', {\n\t\n\t        props: {\n\t            duration: Number,\n\t            offset: Number\n\t        },\n\t\n\t        defaults: {\n\t            duration: 1000,\n\t            offset: 0\n\t        },\n\t\n\t        methods: {\n\t\n\t            scrollTo: function scrollTo(el) {\n\t                var this$1 = this;\n\t\n\t\n\t                el = el && $(el) || doc.body;\n\t\n\t                var docHeight = height(doc);\n\t                var winHeight = height(win);\n\t\n\t                var target = offset(el).top - this.offset;\n\t                if (target + winHeight > docHeight) {\n\t                    target = docHeight - winHeight;\n\t                }\n\t\n\t                if (!trigger(this.$el, 'beforescroll', [this, el])) {\n\t                    return;\n\t                }\n\t\n\t                var start = Date.now();\n\t                var startY = win.pageYOffset;\n\t                var step = function () {\n\t\n\t                    var currentY = startY + (target - startY) * ease(clamp((Date.now() - start) / this$1.duration));\n\t\n\t                    win.scrollTo(win.pageXOffset, currentY);\n\t\n\t                    // scroll more if we have not reached our destination\n\t                    if (currentY !== target) {\n\t                        requestAnimationFrame(step);\n\t                    } else {\n\t                        trigger(this$1.$el, 'scrolled', [this$1, el]);\n\t                    }\n\t\n\t                };\n\t\n\t                step();\n\t\n\t            }\n\t\n\t        },\n\t\n\t        events: {\n\t\n\t            click: function click(e) {\n\t\n\t                if (e.defaultPrevented) {\n\t                    return;\n\t                }\n\t\n\t                e.preventDefault();\n\t                this.scrollTo(escape(this.$el.hash).substr(1));\n\t            }\n\t\n\t        }\n\t\n\t    });\n\t\n\t    function ease(k) {\n\t        return 0.5 * (1 - Math.cos(Math.PI * k));\n\t    }\n\t\n\t}\n\t\n\tfunction Scrollspy (UIkit) {\n\t\n\t    UIkit.component('scrollspy', {\n\t\n\t        args: 'cls',\n\t\n\t        props: {\n\t            cls: 'list',\n\t            target: String,\n\t            hidden: Boolean,\n\t            offsetTop: Number,\n\t            offsetLeft: Number,\n\t            repeat: Boolean,\n\t            delay: Number\n\t        },\n\t\n\t        defaults: {\n\t            cls: [],\n\t            target: false,\n\t            hidden: true,\n\t            offsetTop: 0,\n\t            offsetLeft: 0,\n\t            repeat: false,\n\t            delay: 0,\n\t            inViewClass: 'uk-scrollspy-inview'\n\t        },\n\t\n\t        computed: {\n\t\n\t            elements: function elements(ref, $el) {\n\t                var target = ref.target;\n\t\n\t                return target ? $$(target, $el) : [$el];\n\t            }\n\t\n\t        },\n\t\n\t        update: [\n\t\n\t            {\n\t\n\t                write: function write() {\n\t                    if (this.hidden) {\n\t                        css(filter(this.elements, (\":not(.\" + (this.inViewClass) + \")\")), 'visibility', 'hidden');\n\t                    }\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t\n\t                read: function read(els) {\n\t                    var this$1 = this;\n\t\n\t\n\t                    // Let child components be applied at least once first\n\t                    if (!UIkit._initialized) {\n\t\n\t                        if (doc.readyState === 'complete') {\n\t                            requestAnimationFrame(function () { return this$1.$emit(); });\n\t                        }\n\t\n\t                        return false;\n\t                    }\n\t\n\t                    this.elements.forEach(function (el, i) {\n\t\n\t                        var elData = els[i];\n\t\n\t                        if (!elData || elData.el !== el) {\n\t                            var cls = data(el, 'uk-scrollspy-class');\n\t                            elData = {el: el, toggles: cls && cls.split(',') || this$1.cls};\n\t                        }\n\t\n\t                        elData.show = isInView(el, this$1.offsetTop, this$1.offsetLeft);\n\t                        els[i] = elData;\n\t\n\t                    });\n\t                },\n\t\n\t                write: function write(els) {\n\t                    var this$1 = this;\n\t\n\t\n\t                    var index = this.elements.length === 1 ? 1 : 0;\n\t\n\t                    this.elements.forEach(function (el, i) {\n\t\n\t                        var elData = els[i];\n\t                        var cls = elData.toggles[i] || elData.toggles[0];\n\t\n\t                        if (elData.show && !elData.inview && !elData.timer) {\n\t\n\t                            var show = function () {\n\t                                css(el, 'visibility', '');\n\t                                addClass(el, this$1.inViewClass);\n\t                                toggleClass(el, cls);\n\t\n\t                                trigger(el, 'inview');\n\t\n\t                                UIkit.update(null, el);\n\t\n\t                                elData.inview = true;\n\t                                delete elData.timer;\n\t                            };\n\t\n\t                            if (this$1.delay && index) {\n\t                                elData.timer = setTimeout(show, this$1.delay * index);\n\t                            } else {\n\t                                show();\n\t                            }\n\t\n\t                            index++;\n\t\n\t                        } else if (!elData.show && elData.inview && this$1.repeat) {\n\t\n\t                            if (elData.timer) {\n\t                                clearTimeout(elData.timer);\n\t                                delete elData.timer;\n\t                            }\n\t\n\t                            css(el, 'visibility', this$1.hidden ? 'hidden' : '');\n\t                            removeClass(el, this$1.inViewClass);\n\t                            toggleClass(el, cls);\n\t\n\t                            trigger(el, 'outview');\n\t\n\t                            UIkit.update(null, el);\n\t\n\t                            elData.inview = false;\n\t\n\t                        }\n\t\n\t\n\t                    });\n\t\n\t                },\n\t\n\t                events: ['scroll', 'load', 'resize']\n\t\n\t            }\n\t\n\t        ]\n\t\n\t    });\n\t\n\t}\n\t\n\tfunction ScrollspyNav (UIkit) {\n\t\n\t    UIkit.component('scrollspy-nav', {\n\t\n\t        props: {\n\t            cls: String,\n\t            closest: String,\n\t            scroll: Boolean,\n\t            overflow: Boolean,\n\t            offset: Number\n\t        },\n\t\n\t        defaults: {\n\t            cls: 'uk-active',\n\t            closest: false,\n\t            scroll: false,\n\t            overflow: true,\n\t            offset: 0\n\t        },\n\t\n\t        computed: {\n\t\n\t            links: function links(_, $el) {\n\t                return $$('a[href^=\"#\"]', $el).filter(function (el) { return el.hash; });\n\t            },\n\t\n\t            elements: function elements() {\n\t                return this.closest ? closest(this.links, this.closest) : this.links;\n\t            },\n\t\n\t            targets: function targets() {\n\t                return $$(this.links.map(function (el) { return el.hash; }).join(','));\n\t            }\n\t\n\t        },\n\t\n\t        update: [\n\t\n\t            {\n\t\n\t                read: function read() {\n\t                    if (this.scroll) {\n\t                        UIkit.scroll(this.links, {offset: this.offset || 0});\n\t                    }\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t\n\t                read: function read(data) {\n\t                    var this$1 = this;\n\t\n\t\n\t                    var scroll = win.pageYOffset + this.offset + 1;\n\t                    var max = height(doc) - height(win) + this.offset;\n\t\n\t                    data.active = false;\n\t\n\t                    this.targets.every(function (el, i) {\n\t\n\t                        var ref = offset(el);\n\t                        var top = ref.top;\n\t                        var last = i + 1 === this$1.targets.length;\n\t\n\t                        if (!this$1.overflow && (i === 0 && top > scroll || last && top + el.offsetTop < scroll)) {\n\t                            return false;\n\t                        }\n\t\n\t                        if (!last && offset(this$1.targets[i + 1]).top <= scroll) {\n\t                            return true;\n\t                        }\n\t\n\t                        if (scroll >= max) {\n\t                            for (var j = this$1.targets.length - 1; j > i; j--) {\n\t                                if (isInView(this$1.targets[j])) {\n\t                                    el = this$1.targets[j];\n\t                                    break;\n\t                                }\n\t                            }\n\t                        }\n\t\n\t                        return !(data.active = $(filter(this$1.links, (\"[href=\\\"#\" + (el.id) + \"\\\"]\"))));\n\t\n\t                    });\n\t\n\t                },\n\t\n\t                write: function write(ref) {\n\t                    var active = ref.active;\n\t\n\t\n\t                    this.links.forEach(function (el) { return el.blur(); });\n\t                    removeClass(this.elements, this.cls);\n\t\n\t                    if (active) {\n\t                        trigger(this.$el, 'active', [active, addClass(this.closest ? closest(active, this.closest) : active, this.cls)]);\n\t                    }\n\t\n\t                },\n\t\n\t                events: ['scroll', 'load', 'resize']\n\t\n\t            }\n\t\n\t        ]\n\t\n\t    });\n\t\n\t}\n\t\n\tfunction Sticky (UIkit) {\n\t\n\t    UIkit.component('sticky', {\n\t\n\t        mixins: [Class],\n\t\n\t        attrs: true,\n\t\n\t        props: {\n\t            top: null,\n\t            bottom: Boolean,\n\t            offset: Number,\n\t            animation: String,\n\t            clsActive: String,\n\t            clsInactive: String,\n\t            clsFixed: String,\n\t            clsBelow: String,\n\t            selTarget: String,\n\t            widthElement: 'query',\n\t            showOnUp: Boolean,\n\t            media: 'media',\n\t            target: Number\n\t        },\n\t\n\t        defaults: {\n\t            top: 0,\n\t            bottom: false,\n\t            offset: 0,\n\t            animation: '',\n\t            clsActive: 'uk-active',\n\t            clsInactive: '',\n\t            clsFixed: 'uk-sticky-fixed',\n\t            clsBelow: 'uk-sticky-below',\n\t            selTarget: '',\n\t            widthElement: false,\n\t            showOnUp: false,\n\t            media: false,\n\t            target: false\n\t        },\n\t\n\t        computed: {\n\t\n\t            selTarget: function selTarget(ref, $el) {\n\t                var selTarget = ref.selTarget;\n\t\n\t                return selTarget && $(selTarget, $el) || $el;\n\t            }\n\t\n\t        },\n\t\n\t        connected: function connected() {\n\t\n\t            this.placeholder = $('<div class=\"uk-sticky-placeholder\"></div>');\n\t            this.widthElement = this.$props.widthElement || this.placeholder;\n\t\n\t            if (!this.isActive) {\n\t                this.hide();\n\t            }\n\t        },\n\t\n\t        disconnected: function disconnected() {\n\t\n\t            if (this.isActive) {\n\t                this.isActive = false;\n\t                this.hide();\n\t                removeClass(this.selTarget, this.clsInactive);\n\t            }\n\t\n\t            remove(this.placeholder);\n\t            this.placeholder = null;\n\t            this.widthElement = null;\n\t        },\n\t\n\t        ready: function ready() {\n\t            var this$1 = this;\n\t\n\t\n\t            if (!(this.target && location.hash && win.pageYOffset > 0)) {\n\t                return;\n\t            }\n\t\n\t            var target = $(location.hash);\n\t\n\t            if (target) {\n\t                fastdom.read(function () {\n\t\n\t                    var ref = offset(target);\n\t                    var top = ref.top;\n\t                    var elTop = offset(this$1.$el).top;\n\t                    var elHeight = this$1.$el.offsetHeight;\n\t\n\t                    if (elTop + elHeight >= top && elTop <= top + target.offsetHeight) {\n\t                        win.scrollTo(0, top - elHeight - this$1.target - this$1.offset);\n\t                    }\n\t\n\t                });\n\t            }\n\t\n\t        },\n\t\n\t        events: [\n\t\n\t            {\n\t                name: 'active',\n\t\n\t                self: true,\n\t\n\t                handler: function handler() {\n\t                    replaceClass(this.selTarget, this.clsInactive, this.clsActive);\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t                name: 'inactive',\n\t\n\t                self: true,\n\t\n\t                handler: function handler() {\n\t                    replaceClass(this.selTarget, this.clsActive, this.clsInactive);\n\t                }\n\t\n\t            }\n\t\n\t        ],\n\t\n\t        update: [\n\t\n\t            {\n\t\n\t                write: function write() {\n\t\n\t                    var ref = this;\n\t                    var placeholder = ref.placeholder;\n\t                    var outerHeight = (this.isActive ? placeholder : this.$el).offsetHeight;\n\t\n\t                    css(placeholder, assign(\n\t                        {height: css(this.$el, 'position') !== 'absolute' ? outerHeight : ''},\n\t                        css(this.$el, ['marginTop', 'marginBottom', 'marginLeft', 'marginRight'])\n\t                    ));\n\t\n\t                    if (!within(placeholder, docEl)) {\n\t                        after(this.$el, placeholder);\n\t                        attr(placeholder, 'hidden', '');\n\t                    }\n\t\n\t                    attr(this.widthElement, 'hidden', null);\n\t                    this.width = this.widthElement.offsetWidth;\n\t                    attr(this.widthElement, 'hidden', this.isActive ? null : '');\n\t\n\t                    this.topOffset = offset(this.isActive ? placeholder : this.$el).top;\n\t                    this.bottomOffset = this.topOffset + outerHeight;\n\t\n\t                    var bottom = parseProp('bottom', this);\n\t\n\t                    this.top = Math.max(toFloat(parseProp('top', this)), this.topOffset) - this.offset;\n\t                    this.bottom = bottom && bottom - outerHeight;\n\t                    this.inactive = this.media && !win.matchMedia(this.media).matches;\n\t\n\t                    if (this.isActive) {\n\t                        this.update();\n\t                    }\n\t                },\n\t\n\t                events: ['load', 'resize']\n\t\n\t            },\n\t\n\t            {\n\t\n\t                read: function read(_, ref) {\n\t                    var scrollY = ref.scrollY; if ( scrollY === void 0 ) scrollY = win.pageYOffset;\n\t\n\t                    return {\n\t                        scroll: this.scroll = scrollY,\n\t                        visible: isVisible(this.$el)\n\t                    };\n\t                },\n\t\n\t                write: function write(ref, ref$1) {\n\t                    var this$1 = this;\n\t                    var visible = ref.visible;\n\t                    var scroll = ref.scroll;\n\t                    if ( ref$1 === void 0 ) ref$1 = {};\n\t                    var dir = ref$1.dir;\n\t\n\t\n\t                    if (scroll < 0 || !visible || this.disabled || this.showOnUp && !dir) {\n\t                        return;\n\t                    }\n\t\n\t                    if (this.inactive\n\t                        || scroll < this.top\n\t                        || this.showOnUp && (scroll <= this.top || dir === 'down' || dir === 'up' && !this.isActive && scroll <= this.bottomOffset)\n\t                    ) {\n\t\n\t                        if (!this.isActive) {\n\t                            return;\n\t                        }\n\t\n\t                        this.isActive = false;\n\t\n\t                        if (this.animation && scroll > this.topOffset) {\n\t                            Animation.cancel(this.$el);\n\t                            Animation.out(this.$el, this.animation).then(function () { return this$1.hide(); }, noop);\n\t                        } else {\n\t                            this.hide();\n\t                        }\n\t\n\t                    } else if (this.isActive) {\n\t\n\t                        this.update();\n\t\n\t                    } else if (this.animation) {\n\t\n\t                        Animation.cancel(this.$el);\n\t                        this.show();\n\t                        Animation.in(this.$el, this.animation).catch(noop);\n\t\n\t                    } else {\n\t                        this.show();\n\t                    }\n\t\n\t                },\n\t\n\t                events: ['scroll']\n\t\n\t            } ],\n\t\n\t        methods: {\n\t\n\t            show: function show() {\n\t\n\t                this.isActive = true;\n\t                this.update();\n\t                attr(this.placeholder, 'hidden', null);\n\t\n\t            },\n\t\n\t            hide: function hide() {\n\t\n\t                if (!this.isActive || hasClass(this.selTarget, this.clsActive)) {\n\t                    trigger(this.$el, 'inactive');\n\t                }\n\t\n\t                removeClass(this.$el, this.clsFixed, this.clsBelow);\n\t                css(this.$el, {position: '', top: '', width: ''});\n\t                attr(this.placeholder, 'hidden', '');\n\t\n\t            },\n\t\n\t            update: function update() {\n\t\n\t                var active = this.top !== 0 || this.scroll > this.top;\n\t                var top = Math.max(0, this.offset);\n\t\n\t                if (this.bottom && this.scroll > this.bottom - this.offset) {\n\t                    top = this.bottom - this.scroll;\n\t                }\n\t\n\t                css(this.$el, {\n\t                    position: 'fixed',\n\t                    top: (top + \"px\"),\n\t                    width: this.width\n\t                });\n\t\n\t                if (hasClass(this.selTarget, this.clsActive)) {\n\t\n\t                    if (!active) {\n\t                        trigger(this.$el, 'inactive');\n\t                    }\n\t\n\t                } else if (active) {\n\t                    trigger(this.$el, 'active');\n\t                }\n\t\n\t                toggleClass(this.$el, this.clsBelow, this.scroll > this.bottomOffset);\n\t                addClass(this.$el, this.clsFixed);\n\t\n\t            }\n\t\n\t        }\n\t\n\t    });\n\t\n\t    function parseProp(prop, ref) {\n\t        var $props = ref.$props;\n\t        var $el = ref.$el;\n\t        var propOffset = ref[(prop + \"Offset\")];\n\t\n\t\n\t        var value = $props[prop];\n\t\n\t        if (!value) {\n\t            return;\n\t        }\n\t\n\t        if (isNumeric(value)) {\n\t\n\t            return propOffset + toFloat(value);\n\t\n\t        } else if (isString(value) && value.match(/^-?\\d+vh$/)) {\n\t\n\t            return height(win) * toFloat(value) / 100;\n\t\n\t        } else {\n\t\n\t            var el = value === true ? $el.parentNode : query(value, $el);\n\t\n\t            if (el) {\n\t                return offset(el).top + el.offsetHeight;\n\t            }\n\t\n\t        }\n\t    }\n\t\n\t}\n\t\n\tvar svgs = {};\n\t\n\tfunction Svg (UIkit) {\n\t\n\t    UIkit.component('svg', {\n\t\n\t        attrs: true,\n\t\n\t        props: {\n\t            id: String,\n\t            icon: String,\n\t            src: String,\n\t            style: String,\n\t            width: Number,\n\t            height: Number,\n\t            ratio: Number,\n\t            'class': String\n\t        },\n\t\n\t        defaults: {\n\t            ratio: 1,\n\t            id: false,\n\t            exclude: ['src'],\n\t            'class': ''\n\t        },\n\t\n\t        init: function init() {\n\t            this.class += ' uk-svg';\n\t        },\n\t\n\t        connected: function connected() {\n\t            var this$1 = this;\n\t\n\t\n\t            if (!this.icon && includes(this.src, '#')) {\n\t\n\t                var parts = this.src.split('#');\n\t\n\t                if (parts.length > 1) {\n\t                    var assign;\n\t                    (assign = parts, this.src = assign[0], this.icon = assign[1]);\n\t                }\n\t            }\n\t\n\t            this.svg = this.getSvg().then(function (svg) {\n\t\n\t                var el;\n\t\n\t                if (isString(svg)) {\n\t\n\t                    if (this$1.icon && includes(svg, '<symbol')) {\n\t                        svg = parseSymbols(svg, this$1.icon) || svg;\n\t                    }\n\t\n\t                    el = $(svg.substr(svg.indexOf('<svg')));\n\t\n\t                } else {\n\t                    el = svg.cloneNode(true);\n\t                }\n\t\n\t                if (!el) {\n\t                    return Promise.reject('SVG not found.');\n\t                }\n\t\n\t                var dimensions = attr(el, 'viewBox');\n\t\n\t                if (dimensions) {\n\t                    dimensions = dimensions.split(' ');\n\t                    this$1.width = this$1.$props.width || dimensions[2];\n\t                    this$1.height = this$1.$props.height || dimensions[3];\n\t                }\n\t\n\t                this$1.width *= this$1.ratio;\n\t                this$1.height *= this$1.ratio;\n\t\n\t                for (var prop in this$1.$options.props) {\n\t                    if (this$1[prop] && !includes(this$1.exclude, prop)) {\n\t                        attr(el, prop, this$1[prop]);\n\t                    }\n\t                }\n\t\n\t                if (!this$1.id) {\n\t                    removeAttr(el, 'id');\n\t                }\n\t\n\t                if (this$1.width && !this$1.height) {\n\t                    removeAttr(el, 'height');\n\t                }\n\t\n\t                if (this$1.height && !this$1.width) {\n\t                    removeAttr(el, 'width');\n\t                }\n\t\n\t                var root = this$1.$el;\n\t                if (isVoidElement(root) || root.tagName === 'CANVAS') {\n\t\n\t                    attr(root, {hidden: true, id: null});\n\t\n\t                    var next = root.nextElementSibling;\n\t                    if (next && el.isEqualNode(next)) {\n\t                        el = next;\n\t                    } else {\n\t                        after(root, el);\n\t                    }\n\t\n\t                } else {\n\t\n\t                    var last = root.lastElementChild;\n\t                    if (last && el.isEqualNode(last)) {\n\t                        el = last;\n\t                    } else {\n\t                        append(root, el);\n\t                    }\n\t\n\t                }\n\t\n\t                this$1.svgEl = el;\n\t\n\t                return el;\n\t\n\t            }, noop);\n\t\n\t        },\n\t\n\t        disconnected: function disconnected() {\n\t            var this$1 = this;\n\t\n\t\n\t            if (isVoidElement(this.$el)) {\n\t                attr(this.$el, {hidden: null, id: this.id || null});\n\t            }\n\t\n\t            if (this.svg) {\n\t                this.svg.then(function (svg) { return (!this$1._connected || svg !== this$1.svgEl) && remove(svg); }, noop);\n\t            }\n\t\n\t            this.svg = this.svgEl = null;\n\t\n\t        },\n\t\n\t        methods: {\n\t\n\t            getSvg: function getSvg() {\n\t                var this$1 = this;\n\t\n\t\n\t                if (!this.src) {\n\t                    return Promise.reject();\n\t                }\n\t\n\t                if (svgs[this.src]) {\n\t                    return svgs[this.src];\n\t                }\n\t\n\t                svgs[this.src] = new Promise(function (resolve, reject) {\n\t\n\t                    if (startsWith(this$1.src, 'data:')) {\n\t                        resolve(decodeURIComponent(this$1.src.split(',')[1]));\n\t                    } else {\n\t\n\t                        ajax(this$1.src).then(\n\t                            function (xhr) { return resolve(xhr.response); },\n\t                            function () { return reject('SVG not found.'); }\n\t                        );\n\t\n\t                    }\n\t\n\t                });\n\t\n\t                return svgs[this.src];\n\t\n\t            }\n\t\n\t        }\n\t\n\t    });\n\t\n\t    var symbolRe = /<symbol(.*?id=(['\"])(.*?)\\2[^]*?<\\/)symbol>/g;\n\t    var symbols = {};\n\t\n\t    function parseSymbols(svg, icon) {\n\t\n\t        if (!symbols[svg]) {\n\t\n\t            symbols[svg] = {};\n\t\n\t            var match;\n\t            while ((match = symbolRe.exec(svg))) {\n\t                symbols[svg][match[3]] = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"\" + (match[1]) + \"svg>\";\n\t            }\n\t\n\t        }\n\t\n\t        return symbols[svg][icon];\n\t    }\n\t\n\t}\n\t\n\tfunction Switcher (UIkit) {\n\t\n\t    UIkit.component('switcher', {\n\t\n\t        mixins: [Togglable],\n\t\n\t        args: 'connect',\n\t\n\t        props: {\n\t            connect: String,\n\t            toggle: String,\n\t            active: Number,\n\t            swiping: Boolean\n\t        },\n\t\n\t        defaults: {\n\t            connect: '~.uk-switcher',\n\t            toggle: '> *',\n\t            active: 0,\n\t            swiping: true,\n\t            cls: 'uk-active',\n\t            clsContainer: 'uk-switcher',\n\t            attrItem: 'uk-switcher-item',\n\t            queued: true\n\t        },\n\t\n\t        computed: {\n\t\n\t            connects: function connects(ref, $el) {\n\t                var connect = ref.connect;\n\t\n\t                return queryAll(connect, $el);\n\t            },\n\t\n\t            toggles: function toggles(ref, $el) {\n\t                var toggle = ref.toggle;\n\t\n\t                return $$(toggle, $el);\n\t            }\n\t\n\t        },\n\t\n\t        events: [\n\t\n\t            {\n\t\n\t                name: 'click',\n\t\n\t                delegate: function delegate() {\n\t                    return ((this.toggle) + \":not(.uk-disabled)\");\n\t                },\n\t\n\t                handler: function handler(e) {\n\t                    e.preventDefault();\n\t                    this.show(e.current);\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t                name: 'click',\n\t\n\t                el: function el() {\n\t                    return this.connects;\n\t                },\n\t\n\t                delegate: function delegate() {\n\t                    return (\"[\" + (this.attrItem) + \"],[data-\" + (this.attrItem) + \"]\");\n\t                },\n\t\n\t                handler: function handler(e) {\n\t                    e.preventDefault();\n\t                    this.show(data(e.current, this.attrItem));\n\t                }\n\t            },\n\t\n\t            {\n\t                name: 'swipeRight swipeLeft',\n\t\n\t                filter: function filter() {\n\t                    return this.swiping;\n\t                },\n\t\n\t                el: function el() {\n\t                    return this.connects;\n\t                },\n\t\n\t                handler: function handler(e) {\n\t                    if (!isTouch(e)) {\n\t                        return;\n\t                    }\n\t\n\t                    e.preventDefault();\n\t                    if (!win.getSelection().toString()) {\n\t                        this.show(e.type === 'swipeLeft' ? 'next' : 'previous');\n\t                    }\n\t                }\n\t            }\n\t\n\t        ],\n\t\n\t        update: function update() {\n\t            var this$1 = this;\n\t\n\t\n\t            this.connects.forEach(function (list) { return this$1.updateAria(list.children); });\n\t            this.show(filter(this.toggles, (\".\" + (this.cls)))[0] || this.toggles[this.active] || this.toggles[0]);\n\t\n\t        },\n\t\n\t        methods: {\n\t\n\t            show: function show(item) {\n\t                var this$1 = this;\n\t\n\t\n\t                var ref = this.toggles;\n\t                var length = ref.length;\n\t                var prev = !!this.connects.length && index(filter(this.connects[0].children, (\".\" + (this.cls)))[0]);\n\t                var hasPrev = prev >= 0;\n\t                var dir = item === 'previous' ? -1 : 1;\n\t\n\t                var toggle, next = getIndex(item, this.toggles, prev);\n\t\n\t                for (var i = 0; i < length; i++, next = (next + dir + length) % length) {\n\t                    if (!matches(this$1.toggles[next], '.uk-disabled, [disabled]')) {\n\t                        toggle = this$1.toggles[next];\n\t                        break;\n\t                    }\n\t                }\n\t\n\t                if (!toggle || prev >= 0 && hasClass(toggle, this.cls) || prev === next) {\n\t                    return;\n\t                }\n\t\n\t                removeClass(this.toggles, this.cls);\n\t                attr(this.toggles, 'aria-expanded', false);\n\t                addClass(toggle, this.cls);\n\t                attr(toggle, 'aria-expanded', true);\n\t\n\t                this.connects.forEach(function (list) {\n\t                    if (!hasPrev) {\n\t                        this$1.toggleNow(list.children[next]);\n\t                    } else {\n\t                        this$1.toggleElement([list.children[prev], list.children[next]]);\n\t                    }\n\t                });\n\t\n\t            }\n\t\n\t        }\n\t\n\t    });\n\t\n\t}\n\t\n\tfunction Tab (UIkit) {\n\t\n\t    UIkit.component('tab', UIkit.components.switcher.extend({\n\t\n\t        mixins: [Class],\n\t\n\t        name: 'tab',\n\t\n\t        props: {\n\t            media: 'media'\n\t        },\n\t\n\t        defaults: {\n\t            media: 960,\n\t            attrItem: 'uk-tab-item'\n\t        },\n\t\n\t        init: function init() {\n\t\n\t            var cls = hasClass(this.$el, 'uk-tab-left')\n\t                ? 'uk-tab-left'\n\t                : hasClass(this.$el, 'uk-tab-right')\n\t                    ? 'uk-tab-right'\n\t                    : false;\n\t\n\t            if (cls) {\n\t                UIkit.toggle(this.$el, {cls: cls, mode: 'media', media: this.media});\n\t            }\n\t        }\n\t\n\t    }));\n\t\n\t}\n\t\n\tfunction Toggle (UIkit) {\n\t\n\t    UIkit.component('toggle', {\n\t\n\t        mixins: [UIkit.mixin.togglable],\n\t\n\t        args: 'target',\n\t\n\t        props: {\n\t            href: String,\n\t            target: null,\n\t            mode: 'list',\n\t            media: 'media'\n\t        },\n\t\n\t        defaults: {\n\t            href: false,\n\t            target: false,\n\t            mode: 'click',\n\t            queued: true,\n\t            media: false\n\t        },\n\t\n\t        computed: {\n\t\n\t            target: function target(ref, $el) {\n\t                var href = ref.href;\n\t                var target = ref.target;\n\t\n\t                target = queryAll(target || href, $el);\n\t                return target.length && target || [$el];\n\t            }\n\t\n\t        },\n\t\n\t        events: [\n\t\n\t            {\n\t\n\t                name: (pointerEnter + \" \" + pointerLeave),\n\t\n\t                filter: function filter() {\n\t                    return includes(this.mode, 'hover');\n\t                },\n\t\n\t                handler: function handler(e) {\n\t                    if (!isTouch(e)) {\n\t                        this.toggle((\"toggle\" + (e.type === pointerEnter ? 'show' : 'hide')));\n\t                    }\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t\n\t                name: 'click',\n\t\n\t                filter: function filter() {\n\t                    return includes(this.mode, 'click') || hasTouch;\n\t                },\n\t\n\t                handler: function handler(e) {\n\t\n\t                    if (!isTouch(e) && !includes(this.mode, 'click')) {\n\t                        return;\n\t                    }\n\t\n\t                    // TODO better isToggled handling\n\t                    var link;\n\t                    if (closest(e.target, 'a[href=\"#\"], button')\n\t                        || (link = closest(e.target, 'a[href]')) && (\n\t                            this.cls\n\t                            || !isVisible(this.target)\n\t                            || link.hash && matches(this.target, link.hash)\n\t                        )\n\t                    ) {\n\t                        once(doc, 'click', function (e) { return e.preventDefault(); });\n\t                    }\n\t\n\t                    this.toggle();\n\t                }\n\t\n\t            }\n\t        ],\n\t\n\t        update: {\n\t\n\t            write: function write() {\n\t\n\t                if (!includes(this.mode, 'media') || !this.media) {\n\t                    return;\n\t                }\n\t\n\t                var toggled = this.isToggled(this.target);\n\t                if (win.matchMedia(this.media).matches ? !toggled : toggled) {\n\t                    this.toggle();\n\t                }\n\t\n\t            },\n\t\n\t            events: ['load', 'resize']\n\t\n\t        },\n\t\n\t        methods: {\n\t\n\t            toggle: function toggle(type) {\n\t                if (trigger(this.target, type || 'toggle', [this])) {\n\t                    this.toggleElement(this.target);\n\t                }\n\t            }\n\t\n\t        }\n\t\n\t    });\n\t\n\t}\n\t\n\tfunction Video (UIkit) {\n\t\n\t    UIkit.component('video', {\n\t\n\t        props: {\n\t            automute: Boolean,\n\t            autoplay: Boolean,\n\t        },\n\t\n\t        defaults: {\n\t            automute: false,\n\t            autoplay: true\n\t        },\n\t\n\t        computed: {\n\t\n\t            inView: function inView(ref) {\n\t                var autoplay = ref.autoplay;\n\t\n\t                return autoplay === 'inview';\n\t            }\n\t\n\t        },\n\t\n\t        ready: function ready() {\n\t\n\t            this.player = new Player(this.$el);\n\t\n\t            if (this.automute) {\n\t                this.player.mute();\n\t            }\n\t\n\t        },\n\t\n\t        update: [\n\t\n\t            {\n\t\n\t                read: function read(_, ref) {\n\t                    var type = ref.type;\n\t\n\t\n\t                    return !this.player || (type === 'scroll' || type === 'resize') && !this.inView\n\t                        ? false\n\t                        : {\n\t                            visible: isVisible(this.$el) && css(this.$el, 'visibility') !== 'hidden',\n\t                            inView: this.inView && isInView(this.$el)\n\t                        };\n\t                },\n\t\n\t                write: function write(ref) {\n\t                    var visible = ref.visible;\n\t                    var inView = ref.inView;\n\t\n\t\n\t                    if (!visible || this.inView && !inView) {\n\t                        this.player.pause();\n\t                    } else if (this.autoplay === true || this.inView && inView) {\n\t                        this.player.play();\n\t                    }\n\t\n\t                },\n\t\n\t                events: ['load', 'resize', 'scroll']\n\t\n\t            }\n\t\n\t        ],\n\t\n\t    });\n\t\n\t}\n\t\n\tfunction core (UIkit) {\n\t\n\t    // core components\n\t    UIkit.use(Toggle);\n\t    UIkit.use(Accordion);\n\t    UIkit.use(Alert);\n\t    UIkit.use(Video);\n\t    UIkit.use(Cover);\n\t    UIkit.use(Drop);\n\t    UIkit.use(Dropdown);\n\t    UIkit.use(FormCustom);\n\t    UIkit.use(HeightMatch);\n\t    UIkit.use(HeightViewport);\n\t    UIkit.use(Margin);\n\t    UIkit.use(Gif);\n\t    UIkit.use(Grid);\n\t    UIkit.use(Leader);\n\t    UIkit.use(Modal$1);\n\t    UIkit.use(Nav);\n\t    UIkit.use(Navbar);\n\t    UIkit.use(Offcanvas);\n\t    UIkit.use(Responsive);\n\t    UIkit.use(Scroll);\n\t    UIkit.use(Scrollspy);\n\t    UIkit.use(ScrollspyNav);\n\t    UIkit.use(Sticky);\n\t    UIkit.use(Svg);\n\t    UIkit.use(Icon);\n\t    UIkit.use(Switcher);\n\t    UIkit.use(Tab);\n\t\n\t    // core functionality\n\t    UIkit.use(Core);\n\t\n\t}\n\t\n\tUIkit$2.version = '3.0.0-beta.40';\n\t\n\tmixin(UIkit$2);\n\tcore(UIkit$2);\n\t\n\tfunction plugin(UIkit) {\n\t\n\t    if (plugin.installed) {\n\t        return;\n\t    }\n\t\n\t    var ref = UIkit.util;\n\t    var $ = ref.$;\n\t    var doc = ref.doc;\n\t    var empty = ref.empty;\n\t    var html = ref.html;\n\t\n\t    UIkit.component('countdown', {\n\t\n\t        mixins: [UIkit.mixin.class],\n\t\n\t        attrs: true,\n\t\n\t        props: {\n\t            date: String,\n\t            clsWrapper: String\n\t        },\n\t\n\t        defaults: {\n\t            date: '',\n\t            clsWrapper: '.uk-countdown-%unit%'\n\t        },\n\t\n\t        computed: {\n\t\n\t            date: function date(ref) {\n\t                var date = ref.date;\n\t\n\t                return Date.parse(date);\n\t            },\n\t\n\t            days: function days(ref, $el) {\n\t                var clsWrapper = ref.clsWrapper;\n\t\n\t                return $(clsWrapper.replace('%unit%', 'days'), $el);\n\t            },\n\t\n\t            hours: function hours(ref, $el) {\n\t                var clsWrapper = ref.clsWrapper;\n\t\n\t                return $(clsWrapper.replace('%unit%', 'hours'), $el);\n\t            },\n\t\n\t            minutes: function minutes(ref, $el) {\n\t                var clsWrapper = ref.clsWrapper;\n\t\n\t                return $(clsWrapper.replace('%unit%', 'minutes'), $el);\n\t            },\n\t\n\t            seconds: function seconds(ref, $el) {\n\t                var clsWrapper = ref.clsWrapper;\n\t\n\t                return $(clsWrapper.replace('%unit%', 'seconds'), $el);\n\t            },\n\t\n\t            units: function units() {\n\t                var this$1 = this;\n\t\n\t                return ['days', 'hours', 'minutes', 'seconds'].filter(function (unit) { return this$1[unit]; });\n\t            }\n\t\n\t        },\n\t\n\t        connected: function connected() {\n\t            this.start();\n\t        },\n\t\n\t        disconnected: function disconnected() {\n\t            var this$1 = this;\n\t\n\t            this.stop();\n\t            this.units.forEach(function (unit) { return empty(this$1[unit]); });\n\t        },\n\t\n\t        events: [\n\t\n\t            {\n\t\n\t                name: 'visibilitychange',\n\t\n\t                el: doc,\n\t\n\t                handler: function handler() {\n\t                    if (doc.hidden) {\n\t                        this.stop();\n\t                    } else {\n\t                        this.start();\n\t                    }\n\t                }\n\t\n\t            }\n\t\n\t        ],\n\t\n\t        update: {\n\t\n\t            write: function write() {\n\t                var this$1 = this;\n\t\n\t\n\t                var timespan = getTimeSpan(this.date);\n\t\n\t                if (timespan.total <= 0) {\n\t\n\t                    this.stop();\n\t\n\t                    timespan.days\n\t                        = timespan.hours\n\t                        = timespan.minutes\n\t                        = timespan.seconds\n\t                        = 0;\n\t                }\n\t\n\t                this.units.forEach(function (unit) {\n\t\n\t                    var digits = String(Math.floor(timespan[unit]));\n\t\n\t                    digits = digits.length < 2 ? (\"0\" + digits) : digits;\n\t\n\t                    var el = this$1[unit];\n\t                    if (el.textContent !== digits) {\n\t                        digits = digits.split('');\n\t\n\t                        if (digits.length !== el.children.length) {\n\t                            html(el, digits.map(function () { return '<span></span>'; }).join(''));\n\t                        }\n\t\n\t                        digits.forEach(function (digit, i) { return el.children[i].textContent = digit; });\n\t                    }\n\t\n\t                });\n\t\n\t            }\n\t\n\t        },\n\t\n\t        methods: {\n\t\n\t            start: function start() {\n\t                var this$1 = this;\n\t\n\t\n\t                this.stop();\n\t\n\t                if (this.date && this.units.length) {\n\t                    this.$emit();\n\t                    this.timer = setInterval(function () { return this$1.$emit(); }, 1000);\n\t                }\n\t\n\t            },\n\t\n\t            stop: function stop() {\n\t\n\t                if (this.timer) {\n\t                    clearInterval(this.timer);\n\t                    this.timer = null;\n\t                }\n\t\n\t            }\n\t\n\t        }\n\t\n\t    });\n\t\n\t    function getTimeSpan(date) {\n\t\n\t        var total = date - Date.now();\n\t\n\t        return {\n\t            total: total,\n\t            seconds: total / 1000 % 60,\n\t            minutes: total / 1000 / 60 % 60,\n\t            hours: total / 1000 / 60 / 60 % 24,\n\t            days: total / 1000 / 60 / 60 / 24\n\t        };\n\t    }\n\t\n\t}\n\t\n\tfunction plugin$1(UIkit) {\n\t\n\t    if (plugin$1.installed) {\n\t        return;\n\t    }\n\t\n\t    var ref = UIkit.util;\n\t    var addClass = ref.addClass;\n\t    var css = ref.css;\n\t    var scrolledOver = ref.scrolledOver;\n\t    var sortBy = ref.sortBy;\n\t    var toFloat = ref.toFloat;\n\t\n\t    UIkit.component('grid-parallax', UIkit.components.grid.extend({\n\t\n\t        props: {\n\t            target: String,\n\t            translate: Number\n\t        },\n\t\n\t        defaults: {\n\t            target: false,\n\t            translate: 150\n\t        },\n\t\n\t        computed: {\n\t\n\t            translate: function translate(ref) {\n\t                var translate = ref.translate;\n\t\n\t                return Math.abs(translate);\n\t            }\n\t\n\t        },\n\t\n\t        init: function init() {\n\t            addClass(this.$el, 'uk-grid');\n\t        },\n\t\n\t        disconnected: function disconnected() {\n\t            this.reset();\n\t            css(this.$el, 'marginBottom', '');\n\t        },\n\t\n\t        update: [\n\t\n\t            {\n\t\n\t                read: function read(ref) {\n\t                    var rows = ref.rows;\n\t\n\t                    return {\n\t                        columns: rows && rows[0] && rows[0].length || 0,\n\t                        rows: rows && rows.map(function (elements) { return sortBy(elements, 'offsetLeft'); })\n\t                    };\n\t                },\n\t\n\t                write: function write(ref) {\n\t                    var columns = ref.columns;\n\t\n\t                    css(this.$el, 'marginBottom', columns > 1\n\t                        ? this.translate + toFloat(css(css(this.$el, 'marginBottom', ''), 'marginBottom'))\n\t                        : '');\n\t                },\n\t\n\t                events: ['load', 'resize']\n\t            },\n\t\n\t            {\n\t\n\t                read: function read() {\n\t                    return {scrolled: scrolledOver(this.$el) * this.translate};\n\t                },\n\t\n\t                write: function write(ref) {\n\t                    var rows = ref.rows;\n\t                    var columns = ref.columns;\n\t                    var scrolled = ref.scrolled;\n\t\n\t\n\t                    if (!rows || columns === 1 || !scrolled) {\n\t                        return this.reset();\n\t                    }\n\t\n\t                    rows.forEach(function (row) { return row.forEach(function (el, i) { return css(el, 'transform', (\"translateY(\" + (i % 2 ? scrolled : scrolled / 8) + \"px)\")); }\n\t                        ); }\n\t                    );\n\t\n\t                },\n\t\n\t                events: ['scroll', 'load', 'resize']\n\t            }\n\t        ],\n\t\n\t        methods: {\n\t\n\t            reset: function reset() {\n\t                css(this.$el.children, 'transform', '');\n\t            }\n\t\n\t        }\n\t\n\t    }));\n\t\n\t    UIkit.components.gridParallax.options.update.unshift({\n\t\n\t        read: function read() {\n\t            this.reset();\n\t        },\n\t\n\t        events: ['load', 'resize']\n\t\n\t    });\n\t\n\t}\n\t\n\tfunction AnimationsPlugin (UIkit) {\n\t\n\t    var ref = UIkit.util;\n\t    var css = ref.css;\n\t\n\t    var Animations = {\n\t\n\t        slide: {\n\t\n\t            show: function show(dir) {\n\t                return [\n\t                    {transform: translate(dir * -100)},\n\t                    {transform: translate()}\n\t                ];\n\t            },\n\t\n\t            percent: function percent(current) {\n\t                return Animations.translated(current);\n\t            },\n\t\n\t            translate: function translate$1(percent, dir) {\n\t                return [\n\t                    {transform: translate(dir * -100 * percent)},\n\t                    {transform: translate(dir * 100 * (1 - percent))}\n\t                ];\n\t            }\n\t\n\t        },\n\t\n\t        translated: function translated(el) {\n\t            return Math.abs(css(el, 'transform').split(',')[4] / el.offsetWidth) || 0;\n\t        }\n\t\n\t    };\n\t\n\t    return Animations;\n\t\n\t}\n\t\n\tfunction translate(value, unit) {\n\t    if ( value === void 0 ) value = 0;\n\t    if ( unit === void 0 ) unit = '%';\n\t\n\t    return (\"translateX(\" + value + (value ? unit : '') + \")\"); // currently not translate3d to support IE, translate3d within translate3d does not work while transitioning\n\t}\n\t\n\tfunction scale3d(value) {\n\t    return (\"scale3d(\" + value + \", \" + value + \", 1)\");\n\t}\n\t\n\tfunction TransitionerPlugin (UIkit) {\n\t\n\t    var ref = UIkit.util;\n\t    var createEvent = ref.createEvent;\n\t    var clamp = ref.clamp;\n\t    var css = ref.css;\n\t    var Deferred = ref.Deferred;\n\t    var noop = ref.noop;\n\t    var Promise = ref.Promise;\n\t    var Transition = ref.Transition;\n\t    var trigger = ref.trigger;\n\t\n\t    function Transitioner(prev, next, dir, ref) {\n\t        var animation = ref.animation;\n\t        var easing = ref.easing;\n\t\n\t\n\t        var percent = animation.percent;\n\t        var translate = animation.translate;\n\t        var show = animation.show; if ( show === void 0 ) show = noop;\n\t        var props = show(dir);\n\t        var deferred = new Deferred();\n\t\n\t        return {\n\t\n\t            dir: dir,\n\t\n\t            show: function show(duration, percent, linear) {\n\t                var this$1 = this;\n\t                if ( percent === void 0 ) percent = 0;\n\t\n\t\n\t                var timing = linear ? 'linear' : easing;\n\t                duration -= Math.round(duration * clamp(percent, -1, 1));\n\t\n\t                this.translate(percent);\n\t\n\t                triggerUpdate(next, 'itemin', {percent: percent, duration: duration, timing: timing, dir: dir});\n\t                triggerUpdate(prev, 'itemout', {percent: 1 - percent, duration: duration, timing: timing, dir: dir});\n\t\n\t                Promise.all([\n\t                    Transition.start(next, props[1], duration, timing),\n\t                    Transition.start(prev, props[0], duration, timing)\n\t                ]).then(function () {\n\t                    this$1.reset();\n\t                    deferred.resolve();\n\t                }, noop);\n\t\n\t                return deferred.promise;\n\t            },\n\t\n\t            stop: function stop() {\n\t                return Transition.stop([next, prev]);\n\t            },\n\t\n\t            cancel: function cancel() {\n\t                Transition.cancel([next, prev]);\n\t            },\n\t\n\t            reset: function reset() {\n\t                for (var prop in props[0]) {\n\t                    css([next, prev], prop, '');\n\t                }\n\t            },\n\t\n\t            forward: function forward(duration, percent) {\n\t                if ( percent === void 0 ) percent = this.percent();\n\t\n\t                Transition.cancel([next, prev]);\n\t                return this.show(duration, percent, true);\n\t\n\t            },\n\t\n\t            translate: function translate$1(percent) {\n\t\n\t                var props = translate(percent, dir);\n\t                css(next, props[1]);\n\t                css(prev, props[0]);\n\t                triggerUpdate(next, 'itemtranslatein', {percent: percent, dir: dir});\n\t                triggerUpdate(prev, 'itemtranslateout', {percent: 1 - percent, dir: dir});\n\t\n\t            },\n\t\n\t            percent: function percent$1() {\n\t                return percent(prev || next, next, dir);\n\t            },\n\t\n\t            getDistance: function getDistance() {\n\t                return prev.offsetWidth;\n\t            }\n\t\n\t        };\n\t\n\t    }\n\t\n\t    function triggerUpdate(el, type, data) {\n\t        trigger(el, createEvent(type, false, false, data));\n\t    }\n\t\n\t    return Transitioner;\n\t\n\t}\n\t\n\tfunction AutoplayMixin (UIkit) {\n\t\n\t    var ref = UIkit.util;\n\t    var doc = ref.doc;\n\t    var pointerDown = ref.pointerDown;\n\t\n\t    return {\n\t\n\t        props: {\n\t            autoplay: Boolean,\n\t            autoplayInterval: Number,\n\t            pauseOnHover: Boolean\n\t        },\n\t\n\t        defaults: {\n\t            autoplay: false,\n\t            autoplayInterval: 7000,\n\t            pauseOnHover: true\n\t        },\n\t\n\t        connected: function connected() {\n\t            this.startAutoplay();\n\t        },\n\t\n\t        disconnected: function disconnected() {\n\t            this.stopAutoplay();\n\t        },\n\t\n\t        events: [\n\t\n\t            {\n\t\n\t                name: 'visibilitychange',\n\t\n\t                el: doc,\n\t\n\t                handler: function handler() {\n\t                    if (doc.hidden) {\n\t                        this.stopAutoplay();\n\t                    } else {\n\t                        this.startAutoplay();\n\t                    }\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t\n\t                name: pointerDown,\n\t                handler: 'stopAutoplay'\n\t\n\t            },\n\t\n\t            {\n\t\n\t                name: 'mouseenter',\n\t\n\t                filter: function filter() {\n\t                    return this.autoplay;\n\t                },\n\t\n\t                handler: function handler() {\n\t                    this.isHovering = true;\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t\n\t                name: 'mouseleave',\n\t\n\t                filter: function filter() {\n\t                    return this.autoplay;\n\t                },\n\t\n\t                handler: function handler() {\n\t                    this.isHovering = false;\n\t                }\n\t\n\t            }\n\t\n\t        ],\n\t\n\t        methods: {\n\t\n\t            startAutoplay: function startAutoplay() {\n\t                var this$1 = this;\n\t\n\t\n\t                this.stopAutoplay();\n\t\n\t                if (this.autoplay) {\n\t                    this.interval = setInterval(\n\t                        function () { return !(this$1.isHovering && this$1.pauseOnHover) && !this$1.stack.length && this$1.show('next'); },\n\t                        this.autoplayInterval\n\t                    );\n\t                }\n\t\n\t            },\n\t\n\t            stopAutoplay: function stopAutoplay() {\n\t                if (this.interval) {\n\t                    clearInterval(this.interval);\n\t                }\n\t            }\n\t\n\t        }\n\t\n\t    };\n\t}\n\t\n\tfunction DragMixin (UIkit) {\n\t\n\t    var ref = UIkit.util;\n\t    var doc = ref.doc;\n\t    var getPos = ref.getPos;\n\t    var includes = ref.includes;\n\t    var isRtl = ref.isRtl;\n\t    var isTouch = ref.isTouch;\n\t    var off = ref.off;\n\t    var on = ref.on;\n\t    var pointerDown = ref.pointerDown;\n\t    var pointerMove = ref.pointerMove;\n\t    var pointerUp = ref.pointerUp;\n\t    var preventClick = ref.preventClick;\n\t    var trigger = ref.trigger;\n\t    var win = ref.win;\n\t\n\t    return {\n\t\n\t        defaults: {\n\t            threshold: 10,\n\t            preventCatch: false\n\t        },\n\t\n\t        init: function init() {\n\t            var this$1 = this;\n\t\n\t\n\t            ['start', 'move', 'end'].forEach(function (key) {\n\t\n\t                var fn = this$1[key];\n\t                this$1[key] = function (e) {\n\t\n\t                    var pos = getPos(e).x * (isRtl ? -1 : 1);\n\t\n\t                    this$1.prevPos = pos !== this$1.pos ? this$1.pos : this$1.prevPos;\n\t                    this$1.pos = pos;\n\t\n\t                    fn(e);\n\t                };\n\t\n\t            });\n\t\n\t        },\n\t\n\t        events: [\n\t\n\t            {\n\t\n\t                name: pointerDown,\n\t\n\t                delegate: function delegate() {\n\t                    return this.slidesSelector;\n\t                },\n\t\n\t                handler: function handler(e) {\n\t\n\t                    if (!isTouch(e) && hasTextNodesOnly(e.target)\n\t                        || e.button > 0\n\t                        || this.length < 2\n\t                        || this.preventCatch\n\t                    ) {\n\t                        return;\n\t                    }\n\t\n\t                    this.start(e);\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t                name: 'dragstart',\n\t\n\t                handler: function handler(e) {\n\t                    e.preventDefault();\n\t                }\n\t            }\n\t\n\t        ],\n\t\n\t        methods: {\n\t\n\t            start: function start() {\n\t\n\t                this.drag = this.pos;\n\t\n\t                if (this._transitioner) {\n\t\n\t                    this.percent = this._transitioner.percent();\n\t                    this.drag += this._transitioner.getDistance() * this.percent * this.dir;\n\t\n\t                    this._transitioner.translate(this.percent);\n\t                    this._transitioner.cancel();\n\t\n\t                    this.dragging = true;\n\t\n\t                    this.stack = [];\n\t\n\t                } else {\n\t                    this.prevIndex = this.index;\n\t                }\n\t\n\t                this.unbindMove = on(doc, pointerMove, this.move, {capture: true, passive: false});\n\t                on(win, 'scroll', this.unbindMove);\n\t                on(doc, pointerUp, this.end, true);\n\t\n\t            },\n\t\n\t            move: function move(e) {\n\t                var this$1 = this;\n\t\n\t\n\t                var distance = this.pos - this.drag;\n\t\n\t                if (distance === 0 || this.prevPos === this.pos || !this.dragging && Math.abs(distance) < this.threshold) {\n\t                    return;\n\t                }\n\t\n\t                e.cancelable && e.preventDefault();\n\t\n\t                this.dragging = true;\n\t                this.dir = (distance < 0 ? 1 : -1);\n\t\n\t                var ref = this;\n\t                var slides = ref.slides;\n\t                var ref$1 = this;\n\t                var prevIndex = ref$1.prevIndex;\n\t                var dis = Math.abs(distance);\n\t                var nextIndex = this.getIndex(prevIndex + this.dir, prevIndex);\n\t                var width = this._getDistance(prevIndex, nextIndex) || slides[prevIndex].offsetWidth;\n\t\n\t                while (nextIndex !== prevIndex && dis > width) {\n\t\n\t                    this$1.drag -= width * this$1.dir;\n\t\n\t                    prevIndex = nextIndex;\n\t                    dis -= width;\n\t                    nextIndex = this$1.getIndex(prevIndex + this$1.dir, prevIndex);\n\t                    width = this$1._getDistance(prevIndex, nextIndex) || slides[prevIndex].offsetWidth;\n\t\n\t                }\n\t\n\t                this.percent = dis / width;\n\t\n\t                var prev = slides[prevIndex];\n\t                var next = slides[nextIndex];\n\t                var changed = this.index !== nextIndex;\n\t                var edge = prevIndex === nextIndex;\n\t\n\t                var reset;\n\t\n\t                [this.index, this.prevIndex].filter(function (i) { return !includes([nextIndex, prevIndex], i); }).forEach(function (i) {\n\t                    trigger(slides[i], 'itemhidden', [this$1]);\n\t\n\t                    reset = true;\n\t\n\t                    if (edge) {\n\t                        this$1.prevIndex = prevIndex;\n\t                    }\n\t\n\t                });\n\t\n\t                if (this.index === prevIndex && this.prevIndex !== prevIndex || reset && edge) {\n\t                    trigger(slides[this.index], 'itemshown', [this]);\n\t                }\n\t\n\t                if (changed) {\n\t                    this.prevIndex = prevIndex;\n\t                    this.index = nextIndex;\n\t\n\t                    !edge && trigger(prev, 'beforeitemhide', [this]);\n\t                    trigger(next, 'beforeitemshow', [this]);\n\t                }\n\t\n\t                (reset || this.length < 3) && this._transitioner && this._transitioner.reset();\n\t                this._transitioner = this._translate(Math.abs(this.percent), prev, !edge && next);\n\t\n\t                if (changed) {\n\t                    !edge && trigger(prev, 'itemhide', [this]);\n\t                    trigger(next, 'itemshow', [this]);\n\t                }\n\t\n\t            },\n\t\n\t            end: function end() {\n\t\n\t                off(win, 'scroll', this.unbindMove);\n\t                this.unbindMove();\n\t                off(doc, pointerUp, this.end, true);\n\t\n\t                if (this.dragging) {\n\t\n\t                    this.dragging = null;\n\t\n\t                    if (this.index === this.prevIndex) {\n\t                        this.percent = 1 - this.percent;\n\t                        this.dir *= -1;\n\t                        this._show(false, this.index, true);\n\t                        this._transitioner = null;\n\t                    } else {\n\t\n\t                        var dirChange = (isRtl ? this.dir * (isRtl ? 1 : -1) : this.dir) < 0 === this.prevPos > this.pos;\n\t                        this.index = dirChange ? this.index : this.prevIndex;\n\t\n\t                        if (dirChange) {\n\t                            this.percent = 1 - this.percent;\n\t                        }\n\t\n\t                        this.show(this.dir > 0 && !dirChange || this.dir < 0 && dirChange ? 'next' : 'previous', true);\n\t                    }\n\t\n\t                    preventClick();\n\t\n\t                }\n\t\n\t                this.drag\n\t                    = this.percent\n\t                    = null;\n\t\n\t            }\n\t\n\t        }\n\t\n\t    };\n\t\n\t    function hasTextNodesOnly(el) {\n\t        return !el.children.length && el.childNodes.length;\n\t    }\n\t\n\t}\n\t\n\tfunction NavMixin (UIkit) {\n\t\n\t    var ref = UIkit.util;\n\t    var $ = ref.$;\n\t    var $$ = ref.$$;\n\t    var data = ref.data;\n\t    var html = ref.html;\n\t    var toggleClass = ref.toggleClass;\n\t    var toNumber = ref.toNumber;\n\t\n\t    return {\n\t\n\t        defaults: {\n\t            selNav: false\n\t        },\n\t\n\t        computed: {\n\t\n\t            nav: function nav(ref, $el) {\n\t                var selNav = ref.selNav;\n\t\n\t                return $(selNav, $el);\n\t            },\n\t\n\t            navItemSelector: function navItemSelector(ref) {\n\t                var attrItem = ref.attrItem;\n\t\n\t                return (\"[\" + attrItem + \"],[data-\" + attrItem + \"]\");\n\t            },\n\t\n\t            navItems: function navItems(_, $el) {\n\t                return $$(this.navItemSelector, $el);\n\t            }\n\t\n\t        },\n\t\n\t        update: [\n\t\n\t            {\n\t\n\t                write: function write() {\n\t                    var this$1 = this;\n\t\n\t\n\t                    if (this.nav && this.length !== this.nav.children.length) {\n\t                        html(this.nav, this.slides.map(function (_, i) { return (\"<li \" + (this$1.attrItem) + \"=\\\"\" + i + \"\\\"><a href=\\\"#\\\"></a></li>\"); }).join(''));\n\t                    }\n\t\n\t                    toggleClass($$(this.navItemSelector, this.$el).concat(this.nav), 'uk-hidden', !this.maxIndex);\n\t\n\t                    this.updateNav();\n\t\n\t                },\n\t\n\t                events: ['load', 'resize']\n\t\n\t            }\n\t\n\t        ],\n\t\n\t        events: [\n\t\n\t            {\n\t\n\t                name: 'click',\n\t\n\t                delegate: function delegate() {\n\t                    return this.navItemSelector;\n\t                },\n\t\n\t                handler: function handler(e) {\n\t                    e.preventDefault();\n\t                    e.current.blur();\n\t                    this.show(data(e.current, this.attrItem));\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t\n\t                name: 'itemshow',\n\t                handler: 'updateNav'\n\t\n\t            }\n\t\n\t        ],\n\t\n\t        methods: {\n\t\n\t            updateNav: function updateNav() {\n\t                var this$1 = this;\n\t\n\t\n\t                var i = this.getValidIndex();\n\t                this.navItems.forEach(function (el) {\n\t\n\t                    var cmd = data(el, this$1.attrItem);\n\t\n\t                    toggleClass(el, this$1.clsActive, toNumber(cmd) === i);\n\t                    toggleClass(el, 'uk-invisible', this$1.finite && (cmd === 'previous' && i === 0 || cmd === 'next' && i >= this$1.maxIndex));\n\t                });\n\t\n\t            }\n\t\n\t        }\n\t\n\t    };\n\t\n\t}\n\t\n\tfunction plugin$5(UIkit) {\n\t\n\t    if (plugin$5.installed) {\n\t        return;\n\t    }\n\t\n\t    var ref = UIkit.util;\n\t    var $ = ref.$;\n\t    var assign = ref.assign;\n\t    var clamp = ref.clamp;\n\t    var fastdom = ref.fastdom;\n\t    var getIndex = ref.getIndex;\n\t    var hasClass = ref.hasClass;\n\t    var isNumber = ref.isNumber;\n\t    var isRtl = ref.isRtl;\n\t    var Promise = ref.Promise;\n\t    var toNodes = ref.toNodes;\n\t    var trigger = ref.trigger;\n\t\n\t    UIkit.mixin.slider = {\n\t\n\t        attrs: true,\n\t\n\t        mixins: [AutoplayMixin(UIkit), DragMixin(UIkit), NavMixin(UIkit)],\n\t\n\t        props: {\n\t            clsActivated: Boolean,\n\t            easing: String,\n\t            index: Number,\n\t            finite: Boolean,\n\t            velocity: Number\n\t        },\n\t\n\t        defaults: {\n\t            easing: 'ease',\n\t            finite: false,\n\t            velocity: 1,\n\t            index: 0,\n\t            stack: [],\n\t            percent: 0,\n\t            clsActive: 'uk-active',\n\t            clsActivated: false,\n\t            Transitioner: false,\n\t            transitionOptions: {}\n\t        },\n\t\n\t        computed: {\n\t\n\t            duration: function duration(ref, $el) {\n\t                var velocity = ref.velocity;\n\t\n\t                return speedUp($el.offsetWidth / velocity);\n\t            },\n\t\n\t            length: function length() {\n\t                return this.slides.length;\n\t            },\n\t\n\t            list: function list(ref, $el) {\n\t                var selList = ref.selList;\n\t\n\t                return $(selList, $el);\n\t            },\n\t\n\t            maxIndex: function maxIndex() {\n\t                return this.length - 1;\n\t            },\n\t\n\t            slidesSelector: function slidesSelector(ref) {\n\t                var selList = ref.selList;\n\t\n\t                return (selList + \" > *\");\n\t            },\n\t\n\t            slides: function slides() {\n\t                return toNodes(this.list.children);\n\t            }\n\t\n\t        },\n\t\n\t        methods: {\n\t\n\t            show: function show(index, force) {\n\t                var this$1 = this;\n\t                if ( force === void 0 ) force = false;\n\t\n\t\n\t                if (this.dragging || !this.length) {\n\t                    return;\n\t                }\n\t\n\t                var ref = this;\n\t                var stack = ref.stack;\n\t                var queueIndex = force ? 0 : stack.length;\n\t                var reset = function () {\n\t                    stack.splice(queueIndex, 1);\n\t\n\t                    if (stack.length) {\n\t                        this$1.show(stack.shift(), true);\n\t                    }\n\t                };\n\t\n\t                stack[force ? 'unshift' : 'push'](index);\n\t\n\t                if (!force && stack.length > 1) {\n\t\n\t                    if (stack.length === 2) {\n\t                        this._transitioner.forward(Math.min(this.duration, 200));\n\t                    }\n\t\n\t                    return;\n\t                }\n\t\n\t                var prevIndex = this.index;\n\t                var prev = hasClass(this.slides, this.clsActive) && this.slides[prevIndex];\n\t                var nextIndex = this.getIndex(index, this.index);\n\t                var next = this.slides[nextIndex];\n\t\n\t                if (prev === next) {\n\t                    reset();\n\t                    return;\n\t                }\n\t\n\t                this.dir = getDirection(index, prevIndex);\n\t                this.prevIndex = prevIndex;\n\t                this.index = nextIndex;\n\t\n\t                prev && trigger(prev, 'beforeitemhide', [this]);\n\t                if (!trigger(next, 'beforeitemshow', [this, prev])) {\n\t                    this.index = this.prevIndex;\n\t                    reset();\n\t                    return;\n\t                }\n\t\n\t                var promise = this._show(prev, next, force).then(function () {\n\t\n\t                    prev && trigger(prev, 'itemhidden', [this$1]);\n\t                    trigger(next, 'itemshown', [this$1]);\n\t\n\t                    return new Promise(function (resolve) {\n\t                        fastdom.write(function () {\n\t                            stack.shift();\n\t                            if (stack.length) {\n\t                                this$1.show(stack.shift(), true);\n\t                            } else {\n\t                                this$1._transitioner = null;\n\t                            }\n\t                            resolve();\n\t                        });\n\t                    });\n\t\n\t                });\n\t\n\t                prev && trigger(prev, 'itemhide', [this]);\n\t                trigger(next, 'itemshow', [this]);\n\t\n\t                return promise;\n\t\n\t            },\n\t\n\t            getIndex: function getIndex$1(index, prev) {\n\t                if ( index === void 0 ) index = this.index;\n\t                if ( prev === void 0 ) prev = this.index;\n\t\n\t                return clamp(getIndex(index, this.slides, prev, this.finite), 0, this.maxIndex);\n\t            },\n\t\n\t            getValidIndex: function getValidIndex(index, prevIndex) {\n\t                if ( index === void 0 ) index = this.index;\n\t                if ( prevIndex === void 0 ) prevIndex = this.prevIndex;\n\t\n\t                return this.getIndex(index, prevIndex);\n\t            },\n\t\n\t            _show: function _show(prev, next, force) {\n\t\n\t                this._transitioner = this._getTransitioner(\n\t                    prev,\n\t                    next,\n\t                    this.dir,\n\t                    assign({\n\t                        easing: force\n\t                            ? next.offsetWidth < 600\n\t                                ? 'cubic-bezier(0.25, 0.46, 0.45, 0.94)' /* easeOutQuad */\n\t                                : 'cubic-bezier(0.165, 0.84, 0.44, 1)' /* easeOutQuart */\n\t                            : this.easing\n\t                    }, this.transitionOptions)\n\t                );\n\t\n\t                if (!force && !prev) {\n\t                    this._transitioner.translate(1);\n\t                    return Promise.resolve();\n\t                }\n\t\n\t                var ref = this.stack;\n\t                var length = ref.length;\n\t                return this._transitioner[length > 1 ? 'forward' : 'show'](length > 1 ? Math.min(this.duration, 75 + 75 / (length - 1)) : this.duration, this.percent);\n\t\n\t            },\n\t\n\t            _getDistance: function _getDistance(prev, next) {\n\t                return new this._getTransitioner(prev, prev !== next && next).getDistance();\n\t            },\n\t\n\t            _translate: function _translate(percent, prev, next) {\n\t                if ( prev === void 0 ) prev = this.prevIndex;\n\t                if ( next === void 0 ) next = this.index;\n\t\n\t                var transitioner = this._getTransitioner(prev !== next ? prev : false, next);\n\t                transitioner.translate(percent);\n\t                return transitioner;\n\t            },\n\t\n\t            _getTransitioner: function _getTransitioner(prev, next, dir, options) {\n\t                if ( prev === void 0 ) prev = this.prevIndex;\n\t                if ( next === void 0 ) next = this.index;\n\t                if ( dir === void 0 ) dir = this.dir || 1;\n\t                if ( options === void 0 ) options = this.transitionOptions;\n\t\n\t                return new this.Transitioner(\n\t                    isNumber(prev) ? this.slides[prev] : prev,\n\t                    isNumber(next) ? this.slides[next] : next,\n\t                    dir * (isRtl ? -1 : 1),\n\t                    options\n\t                );\n\t            }\n\t\n\t        }\n\t\n\t    };\n\t\n\t    function getDirection(index, prevIndex) {\n\t        return index === 'next'\n\t            ? 1\n\t            : index === 'previous'\n\t                ? -1\n\t                : index < prevIndex\n\t                    ? -1\n\t                    : 1;\n\t    }\n\t\n\t}\n\t\n\tfunction speedUp(x) {\n\t    return .5 * x + 300; // parabola through (400,500; 600,600; 1800,1200)\n\t}\n\t\n\tfunction plugin$4(UIkit) {\n\t\n\t    if (plugin$4.installed) {\n\t        return;\n\t    }\n\t\n\t    UIkit.use(plugin$5);\n\t\n\t    var mixin = UIkit.mixin;\n\t    var UIkit_util = UIkit.util;\n\t    var addClass = UIkit_util.addClass;\n\t    var assign = UIkit_util.assign;\n\t    var fastdom = UIkit_util.fastdom;\n\t    var isNumber = UIkit_util.isNumber;\n\t    var removeClass = UIkit_util.removeClass;\n\t\n\t    var Animations = AnimationsPlugin(UIkit);\n\t    var Transitioner = TransitionerPlugin(UIkit);\n\t\n\t    UIkit.mixin.slideshow = {\n\t\n\t        mixins: [mixin.slider],\n\t\n\t        props: {\n\t            animation: String\n\t        },\n\t\n\t        defaults: {\n\t            animation: 'slide',\n\t            clsActivated: 'uk-transition-active',\n\t            Animations: Animations,\n\t            Transitioner: Transitioner\n\t        },\n\t\n\t        computed: {\n\t\n\t            animation: function animation(ref) {\n\t                var animation = ref.animation;\n\t                var Animations = ref.Animations;\n\t\n\t                return assign(animation in Animations ? Animations[animation] : Animations.slide, {name: animation});\n\t            },\n\t\n\t            transitionOptions: function transitionOptions() {\n\t                return {animation: this.animation};\n\t            }\n\t\n\t        },\n\t\n\t        events: {\n\t\n\t            'itemshow itemhide itemshown itemhidden': function itemshowitemhideitemshownitemhidden(ref) {\n\t                var target = ref.target;\n\t\n\t                UIkit.update(null, target);\n\t            },\n\t\n\t            itemshow: function itemshow() {\n\t                isNumber(this.prevIndex) && fastdom.flush(); // iOS 10+ will honor the video.play only if called from a gesture handler\n\t            },\n\t\n\t            beforeitemshow: function beforeitemshow(ref) {\n\t                var target = ref.target;\n\t\n\t                addClass(target, this.clsActive);\n\t            },\n\t\n\t            itemshown: function itemshown(ref) {\n\t                var target = ref.target;\n\t\n\t                addClass(target, this.clsActivated);\n\t            },\n\t\n\t            itemhidden: function itemhidden(ref) {\n\t                var target = ref.target;\n\t\n\t                removeClass(target, this.clsActive, this.clsActivated);\n\t            }\n\t\n\t        }\n\t\n\t    };\n\t\n\t}\n\t\n\tfunction AnimationsPlugin$1 (UIkit) {\n\t\n\t    var mixin = UIkit.mixin;\n\t    var UIkit_util = UIkit.util;\n\t    var assign = UIkit_util.assign;\n\t    var css = UIkit_util.css;\n\t\n\t    return assign({}, mixin.slideshow.defaults.Animations, {\n\t\n\t        fade: {\n\t\n\t            show: function show() {\n\t                return [\n\t                    {opacity: 0},\n\t                    {opacity: 1}\n\t                ];\n\t            },\n\t\n\t            percent: function percent(current) {\n\t                return 1 - css(current, 'opacity');\n\t            },\n\t\n\t            translate: function translate$$1(percent) {\n\t                return [\n\t                    {opacity: 1 - percent},\n\t                    {opacity: percent}\n\t                ];\n\t            }\n\t\n\t        },\n\t\n\t        scale: {\n\t\n\t            show: function show() {\n\t                return [\n\t                    {opacity: 0, transform: scale3d(1 - .2)},\n\t                    {opacity: 1, transform: scale3d(1)}\n\t                ];\n\t            },\n\t\n\t            percent: function percent(current) {\n\t                return 1 - css(current, 'opacity');\n\t            },\n\t\n\t            translate: function translate$$1(percent) {\n\t                return [\n\t                    {opacity: 1 - percent, transform: scale3d(1 - .2 * percent)},\n\t                    {opacity: percent, transform: scale3d(1 - .2 + .2 * percent)}\n\t                ];\n\t            }\n\t\n\t        }\n\t\n\t    });\n\t\n\t}\n\t\n\tfunction plugin$3(UIkit) {\n\t\n\t    if (plugin$3.installed) {\n\t        return;\n\t    }\n\t\n\t    UIkit.use(plugin$4);\n\t\n\t    var mixin = UIkit.mixin;\n\t    var util = UIkit.util;\n\t    var $ = util.$;\n\t    var addClass = util.addClass;\n\t    var ajax = util.ajax;\n\t    var append = util.append;\n\t    var assign = util.assign;\n\t    var attr = util.attr;\n\t    var css = util.css;\n\t    var doc = util.doc;\n\t    var getImage = util.getImage;\n\t    var html = util.html;\n\t    var index = util.index;\n\t    var on = util.on;\n\t    var pointerDown = util.pointerDown;\n\t    var pointerMove = util.pointerMove;\n\t    var removeClass = util.removeClass;\n\t    var Transition = util.Transition;\n\t    var trigger = util.trigger;\n\t\n\t    var Animations = AnimationsPlugin$1(UIkit);\n\t\n\t    UIkit.component('lightbox-panel', {\n\t\n\t        mixins: [mixin.container, mixin.modal, mixin.togglable, mixin.slideshow],\n\t\n\t        functional: true,\n\t\n\t        defaults: {\n\t            preload: 1,\n\t            videoAutoplay: false,\n\t            delayControls: 3000,\n\t            items: [],\n\t            cls: 'uk-open',\n\t            clsPage: 'uk-lightbox-page',\n\t            selList: '.uk-lightbox-items',\n\t            attrItem: 'uk-lightbox-item',\n\t            selClose: '.uk-close-large',\n\t            pauseOnHover: false,\n\t            velocity: 2,\n\t            Animations: Animations,\n\t            template: \"<div class=\\\"uk-lightbox uk-overflow-hidden\\\"> <ul class=\\\"uk-lightbox-items\\\"></ul> <div class=\\\"uk-lightbox-toolbar uk-position-top uk-text-right uk-transition-slide-top uk-transition-opaque\\\"> <button class=\\\"uk-lightbox-toolbar-icon uk-close-large\\\" type=\\\"button\\\" uk-close></button> </div> <a class=\\\"uk-lightbox-button uk-position-center-left uk-position-medium uk-transition-fade\\\" href=\\\"#\\\" uk-slidenav-previous uk-lightbox-item=\\\"previous\\\"></a> <a class=\\\"uk-lightbox-button uk-position-center-right uk-position-medium uk-transition-fade\\\" href=\\\"#\\\" uk-slidenav-next uk-lightbox-item=\\\"next\\\"></a> <div class=\\\"uk-lightbox-toolbar uk-lightbox-caption uk-position-bottom uk-text-center uk-transition-slide-bottom uk-transition-opaque\\\"></div> </div>\"\n\t        },\n\t\n\t        created: function created() {\n\t            var this$1 = this;\n\t\n\t\n\t            this.$mount(append(this.container, this.template));\n\t\n\t            this.caption = $('.uk-lightbox-caption', this.$el);\n\t\n\t            this.items.forEach(function () { return append(this$1.list, '<li></li>'); });\n\t\n\t        },\n\t\n\t        events: [\n\t\n\t            {\n\t\n\t                name: (pointerMove + \" \" + pointerDown + \" keydown\"),\n\t\n\t                handler: 'showControls'\n\t\n\t            },\n\t\n\t            {\n\t\n\t                name: 'click',\n\t\n\t                self: true,\n\t\n\t                delegate: function delegate() {\n\t                    return this.slidesSelector;\n\t                },\n\t\n\t                handler: function handler(e) {\n\t                    e.preventDefault();\n\t                    this.hide();\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t\n\t                name: 'shown',\n\t\n\t                self: true,\n\t\n\t                handler: 'showControls'\n\t            },\n\t\n\t            {\n\t\n\t                name: 'hide',\n\t\n\t                self: true,\n\t\n\t                handler: function handler() {\n\t\n\t                    this.hideControls();\n\t\n\t                    removeClass(this.slides, this.clsActive);\n\t                    Transition.stop(this.slides);\n\t\n\t                }\n\t            },\n\t\n\t            {\n\t\n\t                name: 'keyup',\n\t\n\t                el: function el() {\n\t                    return doc;\n\t                },\n\t\n\t                handler: function handler(e) {\n\t\n\t                    if (!this.isToggled(this.$el)) {\n\t                        return;\n\t                    }\n\t\n\t                    switch (e.keyCode) {\n\t                        case 37:\n\t                            this.show('previous');\n\t                            break;\n\t                        case 39:\n\t                            this.show('next');\n\t                            break;\n\t                    }\n\t                }\n\t            },\n\t\n\t            {\n\t\n\t                name: 'beforeitemshow',\n\t\n\t                handler: function handler(e) {\n\t\n\t                    if (this.isToggled()) {\n\t                        return;\n\t                    }\n\t\n\t                    this.preventCatch = true;\n\t\n\t                    e.preventDefault();\n\t\n\t                    this.toggleNow(this.$el, true);\n\t\n\t                    this.animation = Animations['scale'];\n\t                    removeClass(e.target, this.clsActive);\n\t                    this.stack.splice(1, 0, this.index);\n\t\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t\n\t                name: 'itemshow',\n\t\n\t                handler: function handler(ref) {\n\t                    var this$1 = this;\n\t                    var target = ref.target;\n\t\n\t\n\t                    var i = index(target);\n\t                    var ref$1 = this.getItem(i);\n\t                    var caption = ref$1.caption;\n\t\n\t                    css(this.caption, 'display', caption ? '' : 'none');\n\t                    html(this.caption, caption);\n\t\n\t                    for (var j = 0; j <= this.preload; j++) {\n\t                        this$1.loadItem(this$1.getIndex(i + j));\n\t                        this$1.loadItem(this$1.getIndex(i - j));\n\t                    }\n\t\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t\n\t                name: 'itemshown',\n\t\n\t                handler: function handler() {\n\t                    this.preventCatch = false;\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t\n\t                name: 'itemload',\n\t\n\t                handler: function handler(_, item) {\n\t                    var this$1 = this;\n\t\n\t\n\t                    var source = item.source;\n\t                    var type = item.type;\n\t                    var alt = item.alt;\n\t\n\t                    this.setItem(item, '<span uk-spinner></span>');\n\t\n\t                    if (!source) {\n\t                        return;\n\t                    }\n\t\n\t                    var matches;\n\t\n\t                    // Image\n\t                    if (type === 'image' || source.match(/\\.(jp(e)?g|png|gif|svg)$/i)) {\n\t\n\t                        getImage(source).then(\n\t                            function (img) { return this$1.setItem(item, (\"<img width=\\\"\" + (img.width) + \"\\\" height=\\\"\" + (img.height) + \"\\\" src=\\\"\" + source + \"\\\" alt=\\\"\" + (alt ? alt : '') + \"\\\">\")); },\n\t                            function () { return this$1.setError(item); }\n\t                        );\n\t\n\t                    // Video\n\t                    } else if (type === 'video' || source.match(/\\.(mp4|webm|ogv)$/i)) {\n\t\n\t                        var video = $((\"<video controls playsinline\" + (item.poster ? (\" poster=\\\"\" + (item.poster) + \"\\\"\") : '') + \" uk-video=\\\"autoplay: \" + (this.videoAutoplay) + \"\\\"></video>\"));\n\t                        attr(video, 'src', source);\n\t\n\t                        on(video, 'error', function () { return this$1.setError(item); });\n\t                        on(video, 'loadedmetadata', function () {\n\t                            attr(video, {width: video.videoWidth, height: video.videoHeight});\n\t                            this$1.setItem(item, video);\n\t                        });\n\t\n\t                    // Iframe\n\t                    } else if (type === 'iframe') {\n\t\n\t                        this.setItem(item, (\"<iframe class=\\\"uk-lightbox-iframe\\\" src=\\\"\" + source + \"\\\" frameborder=\\\"0\\\" allowfullscreen></iframe>\"));\n\t\n\t                    // YouTube\n\t                    } else if ((matches = source.match(/\\/\\/.*?youtube(-nocookie)?\\.[a-z]+\\/watch\\?v=([^&\\s]+)/) || source.match(/()youtu\\.be\\/(.*)/))) {\n\t\n\t                        var id = matches[2];\n\t                        var setIframe = function (width, height) {\n\t                            if ( width === void 0 ) width = 640;\n\t                            if ( height === void 0 ) height = 450;\n\t\n\t                            return this$1.setItem(item, getIframe((\"//www.youtube\" + (matches[1] || '') + \".com/embed/\" + id), width, height, this$1.videoAutoplay));\n\t                        };\n\t\n\t                        getImage((\"//img.youtube.com/vi/\" + id + \"/maxresdefault.jpg\")).then(\n\t                            function (ref) {\n\t                                var width = ref.width;\n\t                                var height = ref.height;\n\t\n\t                                // YouTube default 404 thumb, fall back to low resolution\n\t                                if (width === 120 && height === 90) {\n\t                                    getImage((\"//img.youtube.com/vi/\" + id + \"/0.jpg\")).then(\n\t                                        function (ref) {\n\t                                            var width = ref.width;\n\t                                            var height = ref.height;\n\t\n\t                                            return setIframe(width, height);\n\t                                    },\n\t                                        setIframe\n\t                                    );\n\t                                } else {\n\t                                    setIframe(width, height);\n\t                                }\n\t                            },\n\t                            setIframe\n\t                        );\n\t\n\t                    // Vimeo\n\t                    } else if ((matches = source.match(/(\\/\\/.*?)vimeo\\.[a-z]+\\/([0-9]+).*?/))) {\n\t\n\t                        ajax((\"//vimeo.com/api/oembed.json?maxwidth=1920&url=\" + (encodeURI(source))), {responseType: 'json'})\n\t                            .then(function (ref) {\n\t                                    var ref_response = ref.response;\n\t                                    var height = ref_response.height;\n\t                                    var width = ref_response.width;\n\t\n\t                                    return this$1.setItem(item, getIframe((\"//player.vimeo.com/video/\" + (matches[2])), width, height, this$1.videoAutoplay));\n\t                        }\n\t                            );\n\t\n\t                    }\n\t\n\t                }\n\t\n\t            }\n\t\n\t        ],\n\t\n\t        methods: {\n\t\n\t            loadItem: function loadItem(index) {\n\t                if ( index === void 0 ) index = this.index;\n\t\n\t\n\t                var item = this.getItem(index);\n\t\n\t                if (item.content) {\n\t                    return;\n\t                }\n\t\n\t                trigger(this.$el, 'itemload', [item]);\n\t            },\n\t\n\t            getItem: function getItem(index) {\n\t                if ( index === void 0 ) index = this.index;\n\t\n\t                return this.items[index] || {};\n\t            },\n\t\n\t            setItem: function setItem(item, content) {\n\t                assign(item, {content: content});\n\t                var el = html(this.slides[this.items.indexOf(item)], content);\n\t                trigger(this.$el, 'itemloaded', [this, el]);\n\t                UIkit.update(null, el);\n\t            },\n\t\n\t            setError: function setError(item) {\n\t                this.setItem(item, '<span uk-icon=\"icon: bolt; ratio: 2\"></span>');\n\t            },\n\t\n\t            showControls: function showControls() {\n\t\n\t                clearTimeout(this.controlsTimer);\n\t                this.controlsTimer = setTimeout(this.hideControls, this.delayControls);\n\t\n\t                addClass(this.$el, 'uk-active', 'uk-transition-active');\n\t\n\t            },\n\t\n\t            hideControls: function hideControls() {\n\t                removeClass(this.$el, 'uk-active', 'uk-transition-active');\n\t            }\n\t\n\t        }\n\t\n\t    });\n\t\n\t    function getIframe(src, width, height, autoplay) {\n\t        return (\"<iframe src=\\\"\" + src + \"\\\" width=\\\"\" + width + \"\\\" height=\\\"\" + height + \"\\\" style=\\\"max-width: 100%; box-sizing: border-box;\\\" frameborder=\\\"0\\\" allowfullscreen uk-video=\\\"autoplay: \" + autoplay + \"\\\" uk-responsive></iframe>\");\n\t    }\n\t\n\t}\n\t\n\tfunction plugin$2(UIkit) {\n\t\n\t    if (plugin$2.installed) {\n\t        return;\n\t    }\n\t\n\t    UIkit.use(plugin$3);\n\t\n\t    var util = UIkit.util;\n\t    var $$ = util.$$;\n\t    var assign = util.assign;\n\t    var data = util.data;\n\t    var index = util.index;\n\t    var ref = UIkit.components.lightboxPanel;\n\t    var options = ref.options;\n\t\n\t    UIkit.component('lightbox', {\n\t\n\t        attrs: true,\n\t\n\t        props: assign({toggle: String}, options.props),\n\t\n\t        defaults: assign({toggle: 'a'}, Object.keys(options.props).reduce(function (defaults, key) {\n\t            defaults[key] = options.defaults[key];\n\t            return defaults;\n\t        }, {})),\n\t\n\t        computed: {\n\t\n\t            toggles: function toggles(ref, $el) {\n\t                var toggle = ref.toggle;\n\t\n\t                return $$(toggle, $el);\n\t            }\n\t\n\t        },\n\t\n\t        disconnected: function disconnected() {\n\t            this._destroy();\n\t        },\n\t\n\t        events: [\n\t\n\t            {\n\t\n\t                name: 'click',\n\t\n\t                delegate: function delegate() {\n\t                    return ((this.toggle) + \":not(.uk-disabled)\");\n\t                },\n\t\n\t                handler: function handler(e) {\n\t                    e.preventDefault();\n\t                    e.current.blur();\n\t                    this.show(index(this.toggles, e.current));\n\t                }\n\t\n\t            }\n\t\n\t        ],\n\t\n\t        update: function update(data) {\n\t\n\t            if (this.panel && this.animation) {\n\t                this.panel.$props.animation = this.animation;\n\t                this.panel.$emit();\n\t            }\n\t\n\t            if (!this.panel || data.toggles && isEqualList(data.toggles, this.toggles)) {\n\t                return;\n\t            }\n\t\n\t            data.toggles = this.toggles;\n\t            this._destroy();\n\t            this._init();\n\t\n\t        },\n\t\n\t        methods: {\n\t\n\t            _init: function _init() {\n\t                return this.panel = this.panel || UIkit.lightboxPanel(assign({}, this.$props, {\n\t                    items: this.toggles.reduce(function (items, el) {\n\t                        items.push(['href', 'caption', 'type', 'poster', 'alt'].reduce(function (obj, attr) {\n\t                            obj[attr === 'href' ? 'source' : attr] = data(el, attr);\n\t                            return obj;\n\t                        }, {}));\n\t                        return items;\n\t                    }, [])\n\t                }));\n\t            },\n\t\n\t            _destroy: function _destroy() {\n\t                if (this.panel) {\n\t                    this.panel.$destroy(true);\n\t                    this.panel = null;\n\t                }\n\t            },\n\t\n\t            show: function show(index) {\n\t\n\t                if (!this.panel) {\n\t                    this._init();\n\t                }\n\t\n\t                return this.panel.show(index);\n\t\n\t            },\n\t\n\t            hide: function hide() {\n\t\n\t                return this.panel && this.panel.hide();\n\t\n\t            }\n\t\n\t        }\n\t\n\t    });\n\t\n\t    function isEqualList(listA, listB) {\n\t        return listA.length === listB.length\n\t            && listA.every(function (el, i) { return el !== listB[i]; });\n\t    }\n\t\n\t}\n\t\n\tfunction plugin$6(UIkit) {\n\t    var obj;\n\t\n\t\n\t    if (plugin$6.installed) {\n\t        return;\n\t    }\n\t\n\t    var ref = UIkit.util;\n\t    var append = ref.append;\n\t    var closest = ref.closest;\n\t    var css = ref.css;\n\t    var each = ref.each;\n\t    var pointerEnter = ref.pointerEnter;\n\t    var pointerLeave = ref.pointerLeave;\n\t    var remove = ref.remove;\n\t    var toFloat = ref.toFloat;\n\t    var Transition = ref.Transition;\n\t    var trigger = ref.trigger;\n\t    var containers = {};\n\t\n\t    UIkit.component('notification', {\n\t\n\t        functional: true,\n\t\n\t        args: ['message', 'status'],\n\t\n\t        defaults: {\n\t            message: '',\n\t            status: '',\n\t            timeout: 5000,\n\t            group: null,\n\t            pos: 'top-center',\n\t            clsClose: 'uk-notification-close',\n\t            clsMsg: 'uk-notification-message'\n\t        },\n\t\n\t        created: function created() {\n\t\n\t            if (!containers[this.pos]) {\n\t                containers[this.pos] = append(UIkit.container, (\"<div class=\\\"uk-notification uk-notification-\" + (this.pos) + \"\\\"></div>\"));\n\t            }\n\t\n\t            var container = css(containers[this.pos], 'display', 'block');\n\t\n\t            this.$mount(append(container,\n\t                (\"<div class=\\\"\" + (this.clsMsg) + (this.status ? (\" \" + (this.clsMsg) + \"-\" + (this.status)) : '') + \"\\\"> <a href=\\\"#\\\" class=\\\"\" + (this.clsClose) + \"\\\" data-uk-close></a> <div>\" + (this.message) + \"</div> </div>\")\n\t            ));\n\t\n\t        },\n\t\n\t        ready: function ready() {\n\t            var this$1 = this;\n\t\n\t\n\t            var marginBottom = toFloat(css(this.$el, 'marginBottom'));\n\t            Transition.start(\n\t                css(this.$el, {opacity: 0, marginTop: -this.$el.offsetHeight, marginBottom: 0}),\n\t                {opacity: 1, marginTop: 0, marginBottom: marginBottom}\n\t            ).then(function () {\n\t                if (this$1.timeout) {\n\t                    this$1.timer = setTimeout(this$1.close, this$1.timeout);\n\t                }\n\t            });\n\t\n\t        },\n\t\n\t        events: ( obj = {\n\t\n\t            click: function click(e) {\n\t                if (closest(e.target, 'a[href=\"#\"]')) {\n\t                    e.preventDefault();\n\t                }\n\t                this.close();\n\t            }\n\t\n\t        }, obj[pointerEnter] = function () {\n\t                if (this.timer) {\n\t                    clearTimeout(this.timer);\n\t                }\n\t            }, obj[pointerLeave] = function () {\n\t                if (this.timeout) {\n\t                    this.timer = setTimeout(this.close, this.timeout);\n\t                }\n\t            }, obj),\n\t\n\t        methods: {\n\t\n\t            close: function close(immediate) {\n\t                var this$1 = this;\n\t\n\t\n\t                var removeFn = function () {\n\t\n\t                    trigger(this$1.$el, 'close', [this$1]);\n\t                    remove(this$1.$el);\n\t\n\t                    if (!containers[this$1.pos].children.length) {\n\t                        css(containers[this$1.pos], 'display', 'none');\n\t                    }\n\t\n\t                };\n\t\n\t                if (this.timer) {\n\t                    clearTimeout(this.timer);\n\t                }\n\t\n\t                if (immediate) {\n\t                    removeFn();\n\t                } else {\n\t                    Transition.start(this.$el, {\n\t                        opacity: 0,\n\t                        marginTop: -this.$el.offsetHeight,\n\t                        marginBottom: 0\n\t                    }).then(removeFn);\n\t                }\n\t            }\n\t\n\t        }\n\t\n\t    });\n\t\n\t    UIkit.notification.closeAll = function (group, immediate) {\n\t        each(UIkit.instances, function (component) {\n\t            if (component.$options.name === 'notification' && (!group || group === component.group)) {\n\t                component.close(immediate);\n\t            }\n\t        });\n\t    };\n\t\n\t}\n\t\n\tfunction plugin$8(UIkit) {\n\t\n\t    if (plugin$8.installed) {\n\t        return;\n\t    }\n\t\n\t    var mixin = UIkit.mixin;\n\t    var util = UIkit.util;\n\t    var css = util.css;\n\t    var Dimensions = util.Dimensions;\n\t    var each = util.each;\n\t    var getImage = util.getImage;\n\t    var includes = util.includes;\n\t    var isNumber = util.isNumber;\n\t    var isUndefined = util.isUndefined;\n\t    var toFloat = util.toFloat;\n\t    var win = util.win;\n\t\n\t    var props = ['x', 'y', 'bgx', 'bgy', 'rotate', 'scale', 'color', 'backgroundColor', 'borderColor', 'opacity', 'blur', 'hue', 'grayscale', 'invert', 'saturate', 'sepia', 'fopacity'];\n\t\n\t    mixin.parallax = {\n\t\n\t        props: props.reduce(function (props, prop) {\n\t            props[prop] = 'list';\n\t            return props;\n\t        }, {\n\t            media: 'media'\n\t        }),\n\t\n\t        defaults: props.reduce(function (defaults, prop) {\n\t            defaults[prop] = undefined;\n\t            return defaults;\n\t        }, {\n\t            media: false\n\t        }),\n\t\n\t        computed: {\n\t\n\t            props: function props$1(properties, $el) {\n\t                var this$1 = this;\n\t\n\t\n\t                return props.reduce(function (props, prop) {\n\t\n\t                    if (isUndefined(properties[prop])) {\n\t                        return props;\n\t                    }\n\t\n\t                    var isColor = prop.match(/color/i);\n\t                    var isCssProp = isColor || prop === 'opacity';\n\t\n\t                    var pos, bgPos, diff;\n\t                    var steps = properties[prop].slice(0);\n\t\n\t                    if (isCssProp) {\n\t                        css($el, prop, '');\n\t                    }\n\t\n\t                    if (steps.length < 2) {\n\t                        steps.unshift((prop === 'scale'\n\t                            ? 1\n\t                            : isCssProp\n\t                                ? css($el, prop)\n\t                                : 0) || 0);\n\t                    }\n\t\n\t                    var unit = includes(steps.join(''), '%') ? '%' : 'px';\n\t\n\t                    if (isColor) {\n\t\n\t                        var ref = $el.style;\n\t                        var color = ref.color;\n\t                        steps = steps.map(function (step) { return parseColor($el, step); });\n\t                        $el.style.color = color;\n\t\n\t                    } else {\n\t\n\t                        steps = steps.map(toFloat);\n\t\n\t                    }\n\t\n\t                    if (prop.match(/^bg/)) {\n\t\n\t                        css($el, (\"background-position-\" + (prop[2])), '');\n\t                        bgPos = css($el, 'backgroundPosition').split(' ')[prop[2] === 'x' ? 0 : 1]; // IE 11 can't read background-position-[x|y]\n\t\n\t                        if (this$1.covers) {\n\t\n\t                            var min = Math.min.apply(Math, steps);\n\t                            var max = Math.max.apply(Math, steps);\n\t                            var down = steps.indexOf(min) < steps.indexOf(max);\n\t\n\t                            diff = max - min;\n\t\n\t                            steps = steps.map(function (step) { return step - (down ? min : max); });\n\t                            pos = (down ? -diff : 0) + \"px\";\n\t\n\t                        } else {\n\t\n\t                            pos = bgPos;\n\t\n\t                        }\n\t                    }\n\t\n\t                    props[prop] = {steps: steps, unit: unit, pos: pos, bgPos: bgPos, diff: diff};\n\t\n\t                    return props;\n\t\n\t                }, {});\n\t\n\t            },\n\t\n\t            bgProps: function bgProps() {\n\t                var this$1 = this;\n\t\n\t                return ['bgx', 'bgy'].filter(function (bg) { return bg in this$1.props; });\n\t            },\n\t\n\t            covers: function covers(_, $el) {\n\t                return css($el.style.backgroundSize !== '' ? css($el, 'backgroundSize', '') : $el, 'backgroundSize') === 'cover';\n\t            }\n\t\n\t        },\n\t\n\t        disconnected: function disconnected() {\n\t            delete this._image;\n\t        },\n\t\n\t        update: [\n\t\n\t            {\n\t\n\t                read: function read(data) {\n\t                    var this$1 = this;\n\t\n\t\n\t                    data.active = !this.media || win.matchMedia(this.media).matches;\n\t\n\t                    if (data.image) {\n\t                        data.image.dimEl = {\n\t                            width: this.$el.offsetWidth,\n\t                            height: this.$el.offsetHeight\n\t                        };\n\t                    }\n\t\n\t                    if ('image' in data || !this.covers || !this.bgProps.length) {\n\t                        return;\n\t                    }\n\t\n\t                    var src = css(this.$el, 'backgroundImage').replace(/^none|url\\([\"']?(.+?)[\"']?\\)$/, '$1');\n\t\n\t                    if (!src) {\n\t                        return;\n\t                    }\n\t\n\t                    data.image = false;\n\t\n\t                    getImage(src).then(function (img) {\n\t                        data.image = {\n\t                            width: img.naturalWidth,\n\t                            height: img.naturalHeight\n\t                        };\n\t\n\t                        this$1.$emit();\n\t                    });\n\t\n\t                },\n\t\n\t                write: function write(ref) {\n\t                    var this$1 = this;\n\t                    var image = ref.image;\n\t                    var active = ref.active;\n\t\n\t\n\t                    if (!image) {\n\t                        return;\n\t                    }\n\t\n\t                    if (!active) {\n\t                        css(this.$el, {backgroundSize: '', backgroundRepeat: ''});\n\t                        return;\n\t                    }\n\t\n\t                    var dimEl = image.dimEl;\n\t\n\t                    var dim = Dimensions.cover(image, dimEl);\n\t\n\t                    this.bgProps.forEach(function (prop) {\n\t\n\t                        var ref = this$1.props[prop];\n\t                        var diff = ref.diff;\n\t                        var bgPos = ref.bgPos;\n\t                        var steps = ref.steps;\n\t                        var attr = prop === 'bgy' ? 'height' : 'width';\n\t                        var span = dim[attr] - dimEl[attr];\n\t\n\t                        if (!bgPos.match(/%$|0px/)) {\n\t                            return;\n\t                        }\n\t\n\t                        if (span < diff) {\n\t                            dimEl[attr] = dim[attr] + diff - span;\n\t                        } else if (span > diff) {\n\t\n\t                            var bgPosFloat = parseFloat(bgPos);\n\t\n\t                            if (bgPosFloat) {\n\t                                this$1.props[prop].steps = steps.map(function (step) { return step - (span - diff) / (100 / bgPosFloat); });\n\t                            }\n\t                        }\n\t\n\t                        dim = Dimensions.cover(image, dimEl);\n\t                    });\n\t\n\t                    css(this.$el, {\n\t                        backgroundSize: ((dim.width) + \"px \" + (dim.height) + \"px\"),\n\t                        backgroundRepeat: 'no-repeat'\n\t                    });\n\t\n\t                },\n\t\n\t                events: ['load', 'resize']\n\t\n\t            }\n\t\n\t        ],\n\t\n\t        methods: {\n\t\n\t            reset: function reset() {\n\t                var this$1 = this;\n\t\n\t                each(this.getCss(0), function (_, prop) { return css(this$1.$el, prop, ''); });\n\t            },\n\t\n\t            getCss: function getCss(percent) {\n\t\n\t                var ref = this;\n\t                var props = ref.props;\n\t                var translated = false;\n\t\n\t                return Object.keys(props).reduce(function (css, prop) {\n\t\n\t                    var ref = props[prop];\n\t                    var steps = ref.steps;\n\t                    var unit = ref.unit;\n\t                    var pos = ref.pos;\n\t                    var value = getValue(steps, percent);\n\t\n\t                    switch (prop) {\n\t\n\t                        // transforms\n\t                        case 'x':\n\t                        case 'y':\n\t\n\t                            if (translated) {\n\t                                break;\n\t                            }\n\t\n\t                            var ref$1 = ['x', 'y'].map(function (dir) { return prop === dir\n\t                                ? value + unit\n\t                                : props[dir]\n\t                                    ? getValue(props[dir].steps, percent) + props[dir].unit\n\t                                    : 0; }\n\t                            );\n\t                    var x = ref$1[0];\n\t                    var y = ref$1[1];\n\t\n\t                            translated = css.transform += \" translate3d(\" + x + \", \" + y + \", 0)\";\n\t                            break;\n\t                        case 'rotate':\n\t                            css.transform += \" rotate(\" + value + \"deg)\";\n\t                            break;\n\t                        case 'scale':\n\t                            css.transform += \" scale(\" + value + \")\";\n\t                            break;\n\t\n\t                        // bg image\n\t                        case 'bgy':\n\t                        case 'bgx':\n\t                            css[(\"background-position-\" + (prop[2]))] = \"calc(\" + pos + \" + \" + (value + unit) + \")\";\n\t                            break;\n\t\n\t                        // color\n\t                        case 'color':\n\t                        case 'backgroundColor':\n\t                        case 'borderColor':\n\t\n\t                            var ref$2 = getStep(steps, percent);\n\t                    var start = ref$2[0];\n\t                    var end = ref$2[1];\n\t                    var p = ref$2[2];\n\t\n\t                            css[prop] = \"rgba(\" + (start.map(function (value, i) {\n\t                                    value = value + p * (end[i] - value);\n\t                                    return i === 3 ? toFloat(value) : parseInt(value, 10);\n\t                                }).join(',')) + \")\";\n\t                            break;\n\t\n\t                        // CSS Filter\n\t                        case 'blur':\n\t                            css.filter += \" blur(\" + value + \"px)\";\n\t                            break;\n\t                        case 'hue':\n\t                            css.filter += \" hue-rotate(\" + value + \"deg)\";\n\t                            break;\n\t                        case 'fopacity':\n\t                            css.filter += \" opacity(\" + value + \"%)\";\n\t                            break;\n\t                        case 'grayscale':\n\t                        case 'invert':\n\t                        case 'saturate':\n\t                        case 'sepia':\n\t                            css.filter += \" \" + prop + \"(\" + value + \"%)\";\n\t                            break;\n\t\n\t                        default:\n\t                            css[prop] = value;\n\t                    }\n\t\n\t                    return css;\n\t\n\t                }, {transform: '', filter: ''});\n\t\n\t            }\n\t\n\t        }\n\t\n\t    };\n\t\n\t    function parseColor(el, color) {\n\t        return css(css(el, 'color', color), 'color').split(/[(),]/g).slice(1, -1).concat(1).slice(0, 4).map(function (n) { return toFloat(n); });\n\t    }\n\t\n\t    function getStep(steps, percent) {\n\t        var count = steps.length - 1;\n\t        var index = Math.min(Math.floor(count * percent), count - 1);\n\t        var step = steps.slice(index, index + 2);\n\t\n\t        step.push(percent === 1 ? 1 : percent % (1 / count) * count);\n\t\n\t        return step;\n\t    }\n\t\n\t    function getValue(steps, percent) {\n\t        var ref = getStep(steps, percent);\n\t        var start = ref[0];\n\t        var end = ref[1];\n\t        var p = ref[2];\n\t        return (isNumber(start)\n\t            ? start + Math.abs(start - end) * p * (start < end ? 1 : -1)\n\t            : +end\n\t        ).toFixed(2);\n\t    }\n\t\n\t}\n\t\n\tfunction plugin$7(UIkit) {\n\t\n\t    if (plugin$7.installed) {\n\t        return;\n\t    }\n\t\n\t    UIkit.use(plugin$8);\n\t\n\t    var mixin = UIkit.mixin;\n\t    var util = UIkit.util;\n\t    var clamp = util.clamp;\n\t    var css = util.css;\n\t    var scrolledOver = util.scrolledOver;\n\t    var query = util.query;\n\t\n\t    UIkit.component('parallax', {\n\t\n\t        mixins: [mixin.parallax],\n\t\n\t        props: {\n\t            target: String,\n\t            viewport: Number,\n\t            easing: Number,\n\t        },\n\t\n\t        defaults: {\n\t            target: false,\n\t            viewport: 1,\n\t            easing: 1,\n\t        },\n\t\n\t        computed: {\n\t\n\t            target: function target(ref, $el) {\n\t                var target = ref.target;\n\t\n\t                return target && query(target, $el) || $el;\n\t            }\n\t\n\t        },\n\t\n\t        update: [\n\t\n\t            {\n\t\n\t                read: function read(ref) {\n\t                    var percent = ref.percent;\n\t\n\t                    return {\n\t                        prev: percent,\n\t                        percent: ease(scrolledOver(this.target) / (this.viewport || 1), this.easing)\n\t                    };\n\t                },\n\t\n\t                write: function write(ref, ref$1) {\n\t                    var prev = ref.prev;\n\t                    var percent = ref.percent;\n\t                    var active = ref.active;\n\t                    var type = ref$1.type;\n\t\n\t\n\t                    if (type !== 'scroll') {\n\t                        prev = false;\n\t                    }\n\t\n\t                    if (!active) {\n\t                        this.reset();\n\t                        return;\n\t                    }\n\t\n\t                    if (prev !== percent) {\n\t                        css(this.$el, this.getCss(percent));\n\t                    }\n\t\n\t                },\n\t\n\t                events: ['scroll', 'load', 'resize']\n\t            }\n\t\n\t        ]\n\t\n\t    });\n\t\n\t    function ease(percent, easing) {\n\t        return clamp(percent * (1 - (easing - easing * percent)));\n\t    }\n\t\n\t}\n\t\n\tfunction SliderReactive (UIkit) {\n\t\n\t    var ref = UIkit.util;\n\t    var removeClass = ref.removeClass;\n\t\n\t    return {\n\t\n\t        update: [\n\t\n\t            {\n\t\n\t                write: function write() {\n\t\n\t                    if (this.stack.length || this.dragging) {\n\t                        return;\n\t                    }\n\t\n\t                    var index = this.getValidIndex();\n\t                    delete this.index;\n\t                    removeClass(this.slides, this.clsActive, this.clsActivated);\n\t                    this.show(index);\n\t\n\t                },\n\t\n\t                events: ['load', 'resize']\n\t\n\t            }\n\t\n\t        ]\n\t\n\t    };\n\t\n\t}\n\t\n\tfunction TransitionerPlugin$1 (UIkit) {\n\t\n\t    var ref = UIkit.util;\n\t    var assign = ref.assign;\n\t    var clamp = ref.clamp;\n\t    var createEvent = ref.createEvent;\n\t    var css = ref.css;\n\t    var Deferred = ref.Deferred;\n\t    var includes = ref.includes;\n\t    var index = ref.index;\n\t    var isRtl = ref.isRtl;\n\t    var noop = ref.noop;\n\t    var sortBy = ref.sortBy;\n\t    var toNodes = ref.toNodes;\n\t    var Transition = ref.Transition;\n\t    var trigger = ref.trigger;\n\t\n\t    var Transitioner = assign(function (prev, next, dir, ref) {\n\t        var center = ref.center;\n\t        var easing = ref.easing;\n\t        var list = ref.list;\n\t\n\t\n\t        var deferred = new Deferred();\n\t\n\t        var from = prev\n\t                ? Transitioner.getLeft(prev, list, center)\n\t                : Transitioner.getLeft(next, list, center) + next.offsetWidth * dir,\n\t            to = next\n\t                ? Transitioner.getLeft(next, list, center)\n\t                : from + prev.offsetWidth * dir * (isRtl ? -1 : 1);\n\t\n\t        return {\n\t\n\t            dir: dir,\n\t\n\t            show: function show(duration, percent, linear) {\n\t                if ( percent === void 0 ) percent = 0;\n\t\n\t\n\t                var timing = linear ? 'linear' : easing;\n\t                duration -= Math.round(duration * clamp(percent, -1, 1));\n\t\n\t                this.translate(percent);\n\t\n\t                prev && this.updateTranslates();\n\t                percent = prev ? percent : clamp(percent, 0, 1);\n\t                triggerUpdate(this.getItemIn(), 'itemin', {percent: percent, duration: duration, timing: timing, dir: dir});\n\t                prev && triggerUpdate(this.getItemIn(true), 'itemout', {percent: 1 - percent, duration: duration, timing: timing, dir: dir});\n\t\n\t                Transition\n\t                    .start(list, {transform: translate(-to * (isRtl ? -1 : 1), 'px')}, duration, timing)\n\t                    .then(deferred.resolve, noop);\n\t\n\t                return deferred.promise;\n\t\n\t            },\n\t\n\t            stop: function stop() {\n\t                return Transition.stop(list);\n\t            },\n\t\n\t            cancel: function cancel() {\n\t                Transition.cancel(list);\n\t            },\n\t\n\t            reset: function reset() {\n\t                css(list, 'transform', '');\n\t            },\n\t\n\t            forward: function forward(duration, percent) {\n\t                if ( percent === void 0 ) percent = this.percent();\n\t\n\t                Transition.cancel(list);\n\t                return this.show(duration, percent, true);\n\t            },\n\t\n\t            translate: function translate$1(percent) {\n\t\n\t                var distance = this.getDistance() * dir * (isRtl ? -1 : 1);\n\t\n\t                css(list, 'transform', translate(clamp(\n\t                    -to + (distance - distance * percent),\n\t                    -Transitioner.getWidth(list),\n\t                    list.offsetWidth\n\t                ) * (isRtl ? -1 : 1), 'px'));\n\t\n\t                this.updateTranslates();\n\t\n\t                if (prev) {\n\t                    percent = clamp(percent, -1, 1);\n\t                    triggerUpdate(this.getItemIn(), 'itemtranslatein', {percent: percent, dir: dir});\n\t                    triggerUpdate(this.getItemIn(true), 'itemtranslateout', {percent: 1 - percent, dir: dir});\n\t                }\n\t\n\t            },\n\t\n\t            percent: function percent() {\n\t                return Math.abs((css(list, 'transform').split(',')[4] * (isRtl ? -1 : 1) + from) / (to - from));\n\t            },\n\t\n\t            getDistance: function getDistance() {\n\t                return Math.abs(to - from);\n\t            },\n\t\n\t            getItemIn: function getItemIn(out) {\n\t                if ( out === void 0 ) out = false;\n\t\n\t\n\t                var actives = this.getActives();\n\t                var all = sortBy(slides(list), 'offsetLeft');\n\t                var i = index(all, actives[dir * (out ? -1 : 1) > 0 ? actives.length - 1 : 0]);\n\t\n\t                return ~i && all[i + (prev && !out ? dir : 0)];\n\t\n\t            },\n\t\n\t            getActives: function getActives() {\n\t\n\t                var left = Transitioner.getLeft(prev || next, list, center);\n\t\n\t                return sortBy(slides(list).filter(function (slide) {\n\t                    var slideLeft = Transitioner.getElLeft(slide, list);\n\t                    return slideLeft >= left && slideLeft + slide.offsetWidth <= list.offsetWidth + left;\n\t                }), 'offsetLeft');\n\t\n\t            },\n\t\n\t            updateTranslates: function updateTranslates() {\n\t\n\t                var actives = this.getActives();\n\t\n\t                slides(list).forEach(function (slide) {\n\t                    var isActive = includes(actives, slide);\n\t\n\t                    triggerUpdate(slide, (\"itemtranslate\" + (isActive ? 'in' : 'out')), {\n\t                        percent: isActive ? 1 : 0,\n\t                        dir: slide.offsetLeft <= next.offsetLeft ? 1 : -1\n\t                    });\n\t                });\n\t            }\n\t\n\t        };\n\t\n\t    }, {\n\t\n\t        getLeft: function getLeft(el, list, center) {\n\t\n\t            var left = this.getElLeft(el, list);\n\t\n\t            return center\n\t                ? left - this.center(el, list)\n\t                : Math.min(left, this.getMax(list));\n\t\n\t        },\n\t\n\t        getMax: function getMax(list) {\n\t            return Math.max(0, this.getWidth(list) - list.offsetWidth);\n\t        },\n\t\n\t        getWidth: function getWidth(list) {\n\t            return slides(list).reduce(function (right, el) { return el.offsetWidth + right; }, 0);\n\t        },\n\t\n\t        getMaxWidth: function getMaxWidth(list) {\n\t            return slides(list).reduce(function (right, el) { return Math.max(right, el.offsetWidth); }, 0);\n\t        },\n\t\n\t        center: function center(el, list) {\n\t            return list.offsetWidth / 2 - el.offsetWidth / 2;\n\t        },\n\t\n\t        getElLeft: function getElLeft(el, list) {\n\t            return (el.offsetLeft + (isRtl ? el.offsetWidth - list.offsetWidth : 0)) * (isRtl ? -1 : 1);\n\t        }\n\t\n\t    });\n\t\n\t    function triggerUpdate(el, type, data) {\n\t        trigger(el, createEvent(type, false, false, data));\n\t    }\n\t\n\t    function slides(list) {\n\t        return toNodes(list.children);\n\t    }\n\t\n\t    return Transitioner;\n\t\n\t}\n\t\n\tfunction ParallaxPlugin (UIkit, parent) {\n\t\n\t    UIkit.use(plugin$8);\n\t\n\t    var mixin = UIkit.mixin;\n\t    var UIkit_util = UIkit.util;\n\t    var closest = UIkit_util.closest;\n\t    var css = UIkit_util.css;\n\t    var endsWith = UIkit_util.endsWith;\n\t    var noop = UIkit_util.noop;\n\t    var Transition = UIkit_util.Transition;\n\t\n\t    return {\n\t\n\t        mixins: [mixin.parallax],\n\t\n\t        computed: {\n\t\n\t            item: function item() {\n\t                var slider = UIkit.getComponent(closest(this.$el, (\".uk-\" + parent)), parent);\n\t                return slider && closest(this.$el, slider.slidesSelector);\n\t            }\n\t\n\t        },\n\t\n\t        events: [\n\t\n\t            {\n\t\n\t                name: 'itemshown',\n\t\n\t                self: true,\n\t\n\t                el: function el() {\n\t                    return this.item;\n\t                },\n\t\n\t                handler: function handler() {\n\t                    css(this.$el, this.getCss(.5));\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t                name: 'itemin itemout',\n\t\n\t                self: true,\n\t\n\t                el: function el() {\n\t                    return this.item;\n\t                },\n\t\n\t                handler: function handler(ref) {\n\t                    var type = ref.type;\n\t                    var ref_detail = ref.detail;\n\t                    var percent = ref_detail.percent;\n\t                    var duration = ref_detail.duration;\n\t                    var timing = ref_detail.timing;\n\t                    var dir = ref_detail.dir;\n\t\n\t\n\t                    Transition.cancel(this.$el);\n\t                    css(this.$el, this.getCss(getCurrent(type, dir, percent)));\n\t\n\t                    Transition.start(this.$el, this.getCss(isIn(type)\n\t                        ? .5\n\t                        : dir > 0\n\t                            ? 1\n\t                            : 0\n\t                    ), duration, timing).catch(noop);\n\t\n\t                }\n\t            },\n\t\n\t            {\n\t                name: 'transitioncanceled transitionend',\n\t\n\t                self: true,\n\t\n\t                el: function el() {\n\t                    return this.item;\n\t                },\n\t\n\t                handler: function handler() {\n\t                    Transition.cancel(this.$el);\n\t                }\n\t\n\t            },\n\t\n\t            {\n\t                name: 'itemtranslatein itemtranslateout',\n\t\n\t                self: true,\n\t\n\t                el: function el() {\n\t                    return this.item;\n\t                },\n\t\n\t                handler: function handler(ref) {\n\t                    var type = ref.type;\n\t                    var ref_detail = ref.detail;\n\t                    var percent = ref_detail.percent;\n\t                    var dir = ref_detail.dir;\n\t\n\t                    Transition.cancel(this.$el);\n\t                    css(this.$el, this.getCss(getCurrent(type, dir, percent)));\n\t                }\n\t            }\n\t\n\t        ]\n\t\n\t    };\n\t\n\t    function isIn(type) {\n\t        return endsWith(type, 'in');\n\t    }\n\t\n\t    function getCurrent(type, dir, percent) {\n\t\n\t        percent /= 2;\n\t\n\t        return !isIn(type)\n\t            ? dir < 0\n\t                ? percent\n\t                : 1 - percent\n\t            : dir < 0\n\t                ? 1 - percent\n\t                : percent;\n\t    }\n\t\n\t}\n\t\n\tfunction plugin$9(UIkit) {\n\t\n\t    if (plugin$9.installed) {\n\t        return;\n\t    }\n\t\n\t    UIkit.use(plugin$5);\n\t\n\t    var mixin = UIkit.mixin;\n\t    var UIkit_util = UIkit.util;\n\t    var $ = UIkit_util.$;\n\t    var $$ = UIkit_util.$$;\n\t    var addClass = UIkit_util.addClass;\n\t    var css = UIkit_util.css;\n\t    var data = UIkit_util.data;\n\t    var includes = UIkit_util.includes;\n\t    var isNumeric = UIkit_util.isNumeric;\n\t    var isUndefined = UIkit_util.isUndefined;\n\t    var toggleClass = UIkit_util.toggleClass;\n\t    var toFloat = UIkit_util.toFloat;\n\t    var Transitioner = TransitionerPlugin$1(UIkit);\n\t\n\t    UIkit.component('slider-parallax', ParallaxPlugin(UIkit, 'slider'));\n\t\n\t    UIkit.component('slider', {\n\t\n\t        mixins: [mixin.class, mixin.slider, SliderReactive(UIkit)],\n\t\n\t        props: {\n\t            center: Boolean,\n\t            sets: Boolean,\n\t        },\n\t\n\t        defaults: {\n\t            center: false,\n\t            sets: false,\n\t            attrItem: 'uk-slider-item',\n\t            selList: '.uk-slider-items',\n\t            selNav: '.uk-slider-nav',\n\t            clsContainer: 'uk-slider-container',\n\t            Transitioner: Transitioner\n\t        },\n\t\n\t        computed: {\n\t\n\t            avgWidth: function avgWidth() {\n\t                return Transitioner.getWidth(this.list) / this.length;\n\t            },\n\t\n\t            finite: function finite(ref) {\n\t                var finite = ref.finite;\n\t\n\t                return finite || Transitioner.getWidth(this.list) < this.list.offsetWidth + Transitioner.getMaxWidth(this.list) + this.center;\n\t            },\n\t\n\t            maxIndex: function maxIndex() {\n\t                var this$1 = this;\n\t\n\t\n\t                if (!this.finite || this.center && !this.sets) {\n\t                    return this.length - 1;\n\t                }\n\t\n\t                if (this.center) {\n\t                    return this.sets[this.sets.length - 1];\n\t                }\n\t\n\t                css(this.slides, 'order', '');\n\t\n\t                var max = Transitioner.getMax(this.list);\n\t                var i = this.length;\n\t\n\t                while (i--) {\n\t                    if (Transitioner.getElLeft(this$1.list.children[i], this$1.list) < max) {\n\t                        return Math.min(i + 1, this$1.length - 1);\n\t                    }\n\t                }\n\t\n\t                return 0;\n\t            },\n\t\n\t            sets: function sets(ref) {\n\t                var this$1 = this;\n\t                var sets = ref.sets;\n\t\n\t\n\t                var width = this.list.offsetWidth / (this.center ? 2 : 1);\n\t\n\t                var left = 0;\n\t                var leftCenter = width;\n\t                var slideLeft = 0;\n\t\n\t                sets = sets && this.slides.reduce(function (sets, slide, i) {\n\t\n\t                    var slideWidth = slide.offsetWidth;\n\t                    var slideRight = slideLeft + slideWidth;\n\t\n\t                    if (slideRight > left) {\n\t\n\t                        if (!this$1.center && i > this$1.maxIndex) {\n\t                            i = this$1.maxIndex;\n\t                        }\n\t\n\t                        if (!includes(sets, i)) {\n\t\n\t                            var cmp = this$1.slides[i + 1];\n\t                            if (this$1.center && cmp && slideWidth < leftCenter - cmp.offsetWidth / 2) {\n\t                                leftCenter -= slideWidth;\n\t                            } else {\n\t                                leftCenter = width;\n\t                                sets.push(i);\n\t                                left = slideLeft + width + (this$1.center ? slideWidth / 2 : 0);\n\t                            }\n\t\n\t                        }\n\t                    }\n\t\n\t                    slideLeft += slideWidth;\n\t\n\t                    return sets;\n\t\n\t                }, []);\n\t\n\t                return sets && sets.length && sets;\n\t\n\t            },\n\t\n\t            transitionOptions: function transitionOptions() {\n\t                return {\n\t                    center: this.center,\n\t                    list: this.list\n\t                };\n\t            }\n\t\n\t        },\n\t\n\t        connected: function connected() {\n\t            toggleClass(this.$el, this.clsContainer, !$((\".\" + (this.clsContainer)), this.$el));\n\t        },\n\t\n\t        update: {\n\t\n\t            write: function write() {\n\t                var this$1 = this;\n\t\n\t\n\t                $$((\"[\" + (this.attrItem) + \"],[data-\" + (this.attrItem) + \"]\"), this.$el).forEach(function (el) {\n\t                    var index = data(el, this$1.attrItem);\n\t                    this$1.maxIndex && toggleClass(el, 'uk-hidden', isNumeric(index) && (this$1.sets && !includes(this$1.sets, toFloat(index)) || index > this$1.maxIndex));\n\t                });\n\t\n\t            },\n\t\n\t            events: ['load', 'resize']\n\t\n\t        },\n\t\n\t        events: {\n\t\n\t            beforeitemshow: function beforeitemshow(e) {\n\t                var this$1 = this;\n\t\n\t\n\t                if (!this.dragging && this.sets && this.stack.length < 2 && !includes(this.sets, this.index)) {\n\t                    this.index = this.getValidIndex();\n\t                }\n\t\n\t                var diff = Math.abs(\n\t                    this.index\n\t                    - this.prevIndex\n\t                    + (this.dir > 0 && this.index < this.prevIndex || this.dir < 0 && this.index > this.prevIndex ? (this.maxIndex + 1) * this.dir : 0)\n\t                );\n\t\n\t                if (!this.dragging && diff > 1) {\n\t\n\t                    for (var i = 0; i < diff; i++) {\n\t                        this$1.stack.splice(1, 0, this$1.dir > 0 ? 'next' : 'previous');\n\t                    }\n\t\n\t                    e.preventDefault();\n\t                    return;\n\t                }\n\t\n\t                this.duration = speedUp(this.avgWidth / this.velocity)\n\t                    * ((\n\t                        this.dir < 0 || !this.slides[this.prevIndex]\n\t                            ? this.slides[this.index]\n\t                            : this.slides[this.prevIndex]\n\t                    ).offsetWidth / this.avgWidth);\n\t\n\t                this.reorder();\n\t\n\t            },\n\t\n\t            itemshow: function itemshow() {\n\t                !isUndefined(this.prevIndex) && addClass(this._getTransitioner().getItemIn(), this.clsActive);\n\t            },\n\t\n\t            itemshown: function itemshown() {\n\t                var this$1 = this;\n\t\n\t                var actives = this._getTransitioner(this.index).getActives();\n\t                this.slides.forEach(function (slide) { return toggleClass(slide, this$1.clsActive, includes(actives, slide)); });\n\t                (!this.sets || includes(this.sets, toFloat(this.index))) && this.slides.forEach(function (slide) { return toggleClass(slide, this$1.clsActivated, includes(actives, slide)); });\n\t            }\n\t\n\t        },\n\t\n\t        methods: {\n\t\n\t            reorder: function reorder() {\n\t                var this$1 = this;\n\t\n\t\n\t                css(this.slides, 'order', '');\n\t\n\t                if (this.finite) {\n\t                    return;\n\t                }\n\t\n\t                var index = this.dir > 0 && this.slides[this.prevIndex] ? this.prevIndex : this.index;\n\t\n\t                this.slides.forEach(function (slide, i) { return css(slide, 'order', this$1.dir > 0 && i < index\n\t                        ? 1\n\t                        : this$1.dir < 0 && i >= this$1.index\n\t                            ? -1\n\t                            : ''\n\t                    ); }\n\t                );\n\t\n\t                if (!this.center) {\n\t                    return;\n\t                }\n\t\n\t                var next = this.slides[index];\n\t                var width = this.list.offsetWidth / 2 - next.offsetWidth / 2;\n\t                var j = 0;\n\t\n\t                while (width > 0) {\n\t                    var slideIndex = this$1.getIndex(--j + index, index);\n\t                    var slide = this$1.slides[slideIndex];\n\t\n\t                    css(slide, 'order', slideIndex > index ? -2 : -1);\n\t                    width -= slide.offsetWidth;\n\t                }\n\t\n\t            },\n\t\n\t            getValidIndex: function getValidIndex(index, prevIndex) {\n\t                var this$1 = this;\n\t                if ( index === void 0 ) index = this.index;\n\t                if ( prevIndex === void 0 ) prevIndex = this.prevIndex;\n\t\n\t\n\t                index = this.getIndex(index, prevIndex);\n\t\n\t                if (!this.sets) {\n\t                    return index;\n\t                }\n\t\n\t                var prev;\n\t\n\t                do {\n\t\n\t                    if (includes(this$1.sets, index)) {\n\t                        return index;\n\t                    }\n\t\n\t                    prev = index;\n\t                    index = this$1.getIndex(index + this$1.dir, prevIndex);\n\t\n\t                } while (index !== prev);\n\t\n\t                return index;\n\t            }\n\t\n\t        }\n\t\n\t    });\n\t\n\t}\n\t\n\tfunction AnimationsPlugin$2 (UIkit) {\n\t\n\t    var mixin = UIkit.mixin;\n\t    var UIkit_util = UIkit.util;\n\t    var assign = UIkit_util.assign;\n\t    var css = UIkit_util.css;\n\t\n\t    var Animations = assign({}, mixin.slideshow.defaults.Animations, {\n\t\n\t        fade: {\n\t\n\t            show: function show() {\n\t                return [\n\t                    {opacity: 0, zIndex: 0},\n\t                    {zIndex: -1}\n\t                ];\n\t            },\n\t\n\t            percent: function percent(current) {\n\t                return 1 - css(current, 'opacity');\n\t            },\n\t\n\t            translate: function translate$$1(percent) {\n\t                return [\n\t                    {opacity: 1 - percent, zIndex: 0},\n\t                    {zIndex: -1}\n\t                ];\n\t            }\n\t\n\t        },\n\t\n\t        scale: {\n\t\n\t            show: function show() {\n\t                return [\n\t                    {opacity: 0, transform: scale3d(1 + .5), zIndex: 0},\n\t                    {zIndex: -1}\n\t                ];\n\t            },\n\t\n\t            percent: function percent(current) {\n\t                return 1 - css(current, 'opacity');\n\t            },\n\t\n\t            translate: function translate$$1(percent) {\n\t                return [\n\t                    {opacity: 1 - percent, transform: scale3d(1 + .5 * percent), zIndex: 0},\n\t                    {zIndex: -1}\n\t                ];\n\t            }\n\t\n\t        },\n\t\n\t        pull: {\n\t\n\t            show: function show(dir) {\n\t                return dir < 0\n\t                    ? [\n\t                        {transform: translate(30), zIndex: -1},\n\t                        {transform: translate(), zIndex: 0} ]\n\t                    : [\n\t                        {transform: translate(-100), zIndex: 0},\n\t                        {transform: translate(), zIndex: -1}\n\t                    ];\n\t            },\n\t\n\t            percent: function percent(current, next, dir) {\n\t                return dir < 0\n\t                    ? 1 - Animations.translated(next)\n\t                    : Animations.translated(current);\n\t            },\n\t\n\t            translate: function translate$1(percent, dir) {\n\t                return dir < 0\n\t                    ? [\n\t                        {transform: translate(30 * percent), zIndex: -1},\n\t                        {transform: translate(-100 * (1 - percent)), zIndex: 0} ]\n\t                    : [\n\t                        {transform: translate(-percent * 100), zIndex: 0},\n\t                        {transform: translate(30 * (1 - percent)), zIndex: -1}\n\t                    ];\n\t            }\n\t\n\t        },\n\t\n\t        push: {\n\t\n\t            show: function show(dir) {\n\t                return dir < 0\n\t                    ? [\n\t                        {transform: translate(100), zIndex: 0},\n\t                        {transform: translate(), zIndex: -1} ]\n\t                    : [\n\t                        {transform: translate(-30), zIndex: -1},\n\t                        {transform: translate(), zIndex: 0}\n\t                    ];\n\t            },\n\t\n\t            percent: function percent(current, next, dir) {\n\t                return dir > 0\n\t                    ? 1 - Animations.translated(next)\n\t                    : Animations.translated(current);\n\t            },\n\t\n\t            translate: function translate$2(percent, dir) {\n\t                return dir < 0\n\t                    ? [\n\t                        {transform: translate(percent * 100), zIndex: 0},\n\t                        {transform: translate(-30 * (1 - percent)), zIndex: -1} ]\n\t                    : [\n\t                        {transform: translate(-30 * percent), zIndex: -1},\n\t                        {transform: translate(100 * (1 - percent)), zIndex: 0}\n\t                    ];\n\t            }\n\t\n\t        }\n\t\n\t    });\n\t\n\t    return Animations;\n\t\n\t}\n\t\n\tfunction plugin$10(UIkit) {\n\t\n\t    if (plugin$10.installed) {\n\t        return;\n\t    }\n\t\n\t    UIkit.use(plugin$4);\n\t\n\t    var mixin = UIkit.mixin;\n\t    var height = UIkit.util.height;\n\t\n\t    var Animations = AnimationsPlugin$2(UIkit);\n\t\n\t    UIkit.component('slideshow-parallax', ParallaxPlugin(UIkit, 'slideshow'));\n\t\n\t    UIkit.component('slideshow', {\n\t\n\t        mixins: [mixin.class, mixin.slideshow, SliderReactive(UIkit)],\n\t\n\t        props: {\n\t            ratio: String,\n\t            minHeight: Boolean,\n\t            maxHeight: Boolean,\n\t        },\n\t\n\t        defaults: {\n\t            ratio: '16:9',\n\t            minHeight: false,\n\t            maxHeight: false,\n\t            selList: '.uk-slideshow-items',\n\t            attrItem: 'uk-slideshow-item',\n\t            selNav: '.uk-slideshow-nav',\n\t            Animations: Animations\n\t        },\n\t\n\t        update: {\n\t\n\t            read: function read() {\n\t\n\t                var ref = this.ratio.split(':').map(Number);\n\t                var width = ref[0];\n\t                var height = ref[1];\n\t\n\t                height = height * this.$el.offsetWidth / width;\n\t\n\t                if (this.minHeight) {\n\t                    height = Math.max(this.minHeight, height);\n\t                }\n\t\n\t                if (this.maxHeight) {\n\t                    height = Math.min(this.maxHeight, height);\n\t                }\n\t\n\t                return {height: height};\n\t            },\n\t\n\t            write: function write(ref) {\n\t                var hgt = ref.height;\n\t\n\t                height(this.list, Math.floor(hgt));\n\t            },\n\t\n\t            events: ['load', 'resize']\n\t\n\t        }\n\t\n\t    });\n\t\n\t}\n\t\n\tfunction plugin$11(UIkit) {\n\t    var obj;\n\t\n\t\n\t    if (plugin$11.installed) {\n\t        return;\n\t    }\n\t\n\t    var mixin = UIkit.mixin;\n\t    var util = UIkit.util;\n\t    var addClass = util.addClass;\n\t    var after = util.after;\n\t    var assign = util.assign;\n\t    var append = util.append;\n\t    var attr = util.attr;\n\t    var before = util.before;\n\t    var closest = util.closest;\n\t    var css = util.css;\n\t    var doc = util.doc;\n\t    var docEl = util.docEl;\n\t    var height = util.height;\n\t    var fastdom = util.fastdom;\n\t    var getPos = util.getPos;\n\t    var includes = util.includes;\n\t    var index = util.index;\n\t    var isInput = util.isInput;\n\t    var noop = util.noop;\n\t    var offset = util.offset;\n\t    var off = util.off;\n\t    var on = util.on;\n\t    var pointerDown = util.pointerDown;\n\t    var pointerMove = util.pointerMove;\n\t    var pointerUp = util.pointerUp;\n\t    var position = util.position;\n\t    var preventClick = util.preventClick;\n\t    var Promise = util.Promise;\n\t    var remove = util.remove;\n\t    var removeClass = util.removeClass;\n\t    var toggleClass = util.toggleClass;\n\t    var toNodes = util.toNodes;\n\t    var Transition = util.Transition;\n\t    var trigger = util.trigger;\n\t    var win = util.win;\n\t    var within = util.within;\n\t\n\t    UIkit.component('sortable', {\n\t\n\t        mixins: [mixin.class],\n\t\n\t        props: {\n\t            group: String,\n\t            animation: Number,\n\t            threshold: Number,\n\t            clsItem: String,\n\t            clsPlaceholder: String,\n\t            clsDrag: String,\n\t            clsDragState: String,\n\t            clsBase: String,\n\t            clsNoDrag: String,\n\t            clsEmpty: String,\n\t            clsCustom: String,\n\t            handle: String\n\t        },\n\t\n\t        defaults: {\n\t            group: false,\n\t            animation: 150,\n\t            threshold: 5,\n\t            clsItem: 'uk-sortable-item',\n\t            clsPlaceholder: 'uk-sortable-placeholder',\n\t            clsDrag: 'uk-sortable-drag',\n\t            clsDragState: 'uk-drag',\n\t            clsBase: 'uk-sortable',\n\t            clsNoDrag: 'uk-sortable-nodrag',\n\t            clsEmpty: 'uk-sortable-empty',\n\t            clsCustom: '',\n\t            handle: false\n\t        },\n\t\n\t        init: function init() {\n\t            var this$1 = this;\n\t\n\t            ['init', 'start', 'move', 'end'].forEach(function (key) {\n\t                var fn = this$1[key];\n\t                this$1[key] = function (e) {\n\t                    this$1.scrollY = win.pageYOffset;\n\t                    var ref = getPos(e);\n\t                    var x = ref.x;\n\t                    var y = ref.y;\n\t                    this$1.pos = {x: x, y: y};\n\t\n\t                    fn(e);\n\t                };\n\t            });\n\t        },\n\t\n\t        events: ( obj = {}, obj[pointerDown] = 'init', obj),\n\t\n\t        update: {\n\t\n\t            write: function write() {\n\t\n\t                if (this.clsEmpty) {\n\t                    toggleClass(this.$el, this.clsEmpty, !this.$el.children.length);\n\t                }\n\t\n\t                if (!this.drag) {\n\t                    return;\n\t                }\n\t\n\t                offset(this.drag, {top: this.pos.y + this.origin.top, left: this.pos.x + this.origin.left});\n\t\n\t                var ref = offset(this.drag);\n\t                var top = ref.top;\n\t                var bottom = top + this.drag.offsetHeight;\n\t                var scroll;\n\t\n\t                if (top > 0 && top < this.scrollY) {\n\t                    scroll = this.scrollY - 5;\n\t                } else if (bottom < height(doc) && bottom > height(win) + this.scrollY) {\n\t                    scroll = this.scrollY + 5;\n\t                }\n\t\n\t                scroll && setTimeout(function () { return win.scrollTo(win.scrollX, scroll); }, 5);\n\t            }\n\t\n\t        },\n\t\n\t        methods: {\n\t\n\t            init: function init(e) {\n\t\n\t                var target = e.target;\n\t                var button = e.button;\n\t                var defaultPrevented = e.defaultPrevented;\n\t                var ref = toNodes(this.$el.children).filter(function (el) { return within(target, el); });\n\t                var placeholder = ref[0];\n\t\n\t                if (!placeholder\n\t                    || isInput(e.target)\n\t                    || this.handle && !within(target, this.handle)\n\t                    || button > 0\n\t                    || within(target, (\".\" + (this.clsNoDrag)))\n\t                    || defaultPrevented\n\t                ) {\n\t                    return;\n\t                }\n\t\n\t                e.preventDefault();\n\t\n\t                this.touched = [this];\n\t                this.placeholder = placeholder;\n\t                this.origin = assign({target: target, index: index(placeholder)}, this.pos);\n\t\n\t                on(docEl, pointerMove, this.move);\n\t                on(docEl, pointerUp, this.end);\n\t                on(win, 'scroll', this.scroll);\n\t\n\t                if (!this.threshold) {\n\t                    this.start(e);\n\t                }\n\t\n\t            },\n\t\n\t            start: function start(e) {\n\t\n\t                this.drag = append(UIkit.container, this.placeholder.outerHTML.replace(/^<li/i, '<div').replace(/li>$/i, 'div>'));\n\t\n\t                css(this.drag, assign({\n\t                    boxSizing: 'border-box',\n\t                    width: this.placeholder.offsetWidth,\n\t                    height: this.placeholder.offsetHeight\n\t                }, css(this.placeholder, ['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom'])));\n\t                attr(this.drag, 'uk-no-boot', '');\n\t                addClass(this.drag, this.clsDrag, this.clsCustom);\n\t\n\t                height(this.drag.firstElementChild, height(this.placeholder.firstElementChild));\n\t\n\t                var ref = offset(this.placeholder);\n\t                var left = ref.left;\n\t                var top = ref.top;\n\t                assign(this.origin, {left: left - this.pos.x, top: top - this.pos.y});\n\t\n\t                addClass(this.placeholder, this.clsPlaceholder);\n\t                addClass(this.$el.children, this.clsItem);\n\t                addClass(docEl, this.clsDragState);\n\t\n\t                trigger(this.$el, 'start', [this, this.placeholder, this.drag]);\n\t\n\t                this.move(e);\n\t            },\n\t\n\t            move: function move(e) {\n\t\n\t                if (!this.drag) {\n\t\n\t                    if (Math.abs(this.pos.x - this.origin.x) > this.threshold || Math.abs(this.pos.y - this.origin.y) > this.threshold) {\n\t                        this.start(e);\n\t                    }\n\t\n\t                    return;\n\t                }\n\t\n\t                this.$emit();\n\t\n\t                var target = e.type === 'mousemove' ? e.target : doc.elementFromPoint(this.pos.x - doc.body.scrollLeft, this.pos.y - doc.body.scrollTop);\n\t\n\t                var sortable = getSortable(target);\n\t                var previous = getSortable(this.placeholder);\n\t                var move = sortable !== previous;\n\t\n\t                if (!sortable || within(target, this.placeholder) || move && (!sortable.group || sortable.group !== previous.group)) {\n\t                    return;\n\t                }\n\t\n\t                target = sortable.$el === target.parentNode && target || toNodes(sortable.$el.children).filter(function (element) { return within(target, element); })[0];\n\t\n\t                if (move) {\n\t                    previous.remove(this.placeholder);\n\t                } else if (!target) {\n\t                    return;\n\t                }\n\t\n\t                sortable.insert(this.placeholder, target);\n\t\n\t                if (!includes(this.touched, sortable)) {\n\t                    this.touched.push(sortable);\n\t                }\n\t\n\t            },\n\t\n\t            scroll: function scroll() {\n\t                var scroll = win.pageYOffset;\n\t                if (scroll !== this.scrollY) {\n\t                    this.pos.y += scroll - this.scrollY;\n\t                    this.scrollY = scroll;\n\t                    this.$emit();\n\t                }\n\t            },\n\t\n\t            end: function end(e) {\n\t\n\t                off(docEl, pointerMove, this.move);\n\t                off(docEl, pointerUp, this.end);\n\t                off(win, 'scroll', this.scroll);\n\t\n\t                if (!this.drag) {\n\t\n\t                    if (e.type !== 'mouseup' && within(e.target, 'a[href]')) {\n\t                        location.href = closest(e.target, 'a[href]').href;\n\t                    }\n\t\n\t                    return;\n\t                }\n\t\n\t                preventClick();\n\t\n\t                var sortable = getSortable(this.placeholder);\n\t\n\t                if (this === sortable) {\n\t                    if (this.origin.index !== index(this.placeholder)) {\n\t                        trigger(this.$el, 'moved', [this, this.placeholder]);\n\t                    }\n\t                } else {\n\t                    trigger(sortable.$el, 'added', [sortable, this.placeholder]);\n\t                    trigger(this.$el, 'removed', [this, this.placeholder]);\n\t                }\n\t\n\t                trigger(this.$el, 'stop', [this]);\n\t\n\t                remove(this.drag);\n\t                this.drag = null;\n\t\n\t                var classes = this.touched.map(function (sortable) { return ((sortable.clsPlaceholder) + \" \" + (sortable.clsItem)); }).join(' ');\n\t                this.touched.forEach(function (sortable) { return removeClass(sortable.$el.children, classes); });\n\t\n\t                removeClass(docEl, this.clsDragState);\n\t\n\t            },\n\t\n\t            insert: function insert(element, target) {\n\t                var this$1 = this;\n\t\n\t\n\t                addClass(this.$el.children, this.clsItem);\n\t\n\t                var insert = function () {\n\t\n\t                    if (target) {\n\t\n\t                        if (!within(element, this$1.$el) || isPredecessor(element, target)) {\n\t                            before(target, element);\n\t                        } else {\n\t                            after(target, element);\n\t                        }\n\t\n\t                    } else {\n\t                        append(this$1.$el, element);\n\t                    }\n\t\n\t                };\n\t\n\t                if (this.animation) {\n\t                    this.animate(insert);\n\t                } else {\n\t                    insert();\n\t                }\n\t\n\t            },\n\t\n\t            remove: function remove$1(element) {\n\t\n\t                if (!within(element, this.$el)) {\n\t                    return;\n\t                }\n\t\n\t                if (this.animation) {\n\t                    this.animate(function () { return remove(element); });\n\t                } else {\n\t                    remove(element);\n\t                }\n\t\n\t            },\n\t\n\t            animate: function animate(action) {\n\t                var this$1 = this;\n\t\n\t\n\t                var props = [];\n\t                var children = toNodes(this.$el.children);\n\t                var reset = {position: '', width: '', height: '', pointerEvents: '', top: '', left: '', bottom: '', right: ''};\n\t\n\t                children.forEach(function (el) {\n\t                    props.push(assign({\n\t                        position: 'absolute',\n\t                        pointerEvents: 'none',\n\t                        width: el.offsetWidth,\n\t                        height: el.offsetHeight\n\t                    }, position(el)));\n\t                });\n\t\n\t                action();\n\t\n\t                children.forEach(Transition.cancel);\n\t                css(this.$el.children, reset);\n\t                this.$update('update', true);\n\t                fastdom.flush();\n\t\n\t                css(this.$el, 'minHeight', height(this.$el));\n\t\n\t                var positions = children.map(function (el) { return position(el); });\n\t                Promise.all(children.map(function (el, i) { return Transition.start(css(el, props[i]), positions[i], this$1.animation); }))\n\t                    .then(function () {\n\t                        css(this$1.$el, 'minHeight', '');\n\t                        css(children, reset);\n\t                        this$1.$update('update', true);\n\t                        fastdom.flush();\n\t                    }, noop);\n\t\n\t            }\n\t\n\t        }\n\t\n\t    });\n\t\n\t    function getSortable(element) {\n\t        return element && (UIkit.getComponent(element, 'sortable') || getSortable(element.parentNode));\n\t    }\n\t\n\t    function isPredecessor(element, target) {\n\t        return element.parentNode === target.parentNode && index(element) > index(target);\n\t    }\n\t\n\t}\n\t\n\tfunction plugin$12(UIkit) {\n\t    var obj;\n\t\n\t\n\t    if (plugin$12.installed) {\n\t        return;\n\t    }\n\t\n\t    var util = UIkit.util;\n\t    var mixin = UIkit.mixin;\n\t    var append = util.append;\n\t    var attr = util.attr;\n\t    var doc = util.doc;\n\t    var flipPosition = util.flipPosition;\n\t    var hasAttr = util.hasAttr;\n\t    var includes = util.includes;\n\t    var isTouch = util.isTouch;\n\t    var isVisible = util.isVisible;\n\t    var matches = util.matches;\n\t    var on = util.on;\n\t    var pointerDown = util.pointerDown;\n\t    var pointerEnter = util.pointerEnter;\n\t    var pointerLeave = util.pointerLeave;\n\t    var remove = util.remove;\n\t    var within = util.within;\n\t\n\t    var actives = [];\n\t\n\t    UIkit.component('tooltip', {\n\t\n\t        attrs: true,\n\t\n\t        args: 'title',\n\t\n\t        mixins: [mixin.container, mixin.togglable, mixin.position],\n\t\n\t        props: {\n\t            delay: Number,\n\t            title: String\n\t        },\n\t\n\t        defaults: {\n\t            pos: 'top',\n\t            title: '',\n\t            delay: 0,\n\t            animation: ['uk-animation-scale-up'],\n\t            duration: 100,\n\t            cls: 'uk-active',\n\t            clsPos: 'uk-tooltip'\n\t        },\n\t\n\t        beforeConnect: function beforeConnect() {\n\t            this._hasTitle = hasAttr(this.$el, 'title');\n\t            attr(this.$el, {title: '', 'aria-expanded': false});\n\t        },\n\t\n\t        disconnected: function disconnected() {\n\t            this.hide();\n\t            attr(this.$el, {title: this._hasTitle ? this.title : null, 'aria-expanded': null});\n\t        },\n\t\n\t        methods: {\n\t\n\t            show: function show() {\n\t                var this$1 = this;\n\t\n\t\n\t                if (includes(actives, this)) {\n\t                    return;\n\t                }\n\t\n\t                actives.forEach(function (active) { return active.hide(); });\n\t                actives.push(this);\n\t\n\t                this._unbind = on(doc, 'click', function (e) { return !within(e.target, this$1.$el) && this$1.hide(); });\n\t\n\t                clearTimeout(this.showTimer);\n\t\n\t                this.tooltip = append(this.container, (\"<div class=\\\"\" + (this.clsPos) + \"\\\" aria-hidden><div class=\\\"\" + (this.clsPos) + \"-inner\\\">\" + (this.title) + \"</div></div>\"));\n\t\n\t                attr(this.$el, 'aria-expanded', true);\n\t\n\t                this.positionAt(this.tooltip, this.$el);\n\t\n\t                this.origin = this.getAxis() === 'y' ? ((flipPosition(this.dir)) + \"-\" + (this.align)) : ((this.align) + \"-\" + (flipPosition(this.dir)));\n\t\n\t                this.showTimer = setTimeout(function () {\n\t\n\t                    this$1.toggleElement(this$1.tooltip, true);\n\t\n\t                    this$1.hideTimer = setInterval(function () {\n\t\n\t                        if (!isVisible(this$1.$el)) {\n\t                            this$1.hide();\n\t                        }\n\t\n\t                    }, 150);\n\t\n\t                }, this.delay);\n\t            },\n\t\n\t            hide: function hide() {\n\t\n\t                var index = actives.indexOf(this);\n\t\n\t                if (!~index || matches(this.$el, 'input') && this.$el === doc.activeElement) {\n\t                    return;\n\t                }\n\t\n\t                actives.splice(index, 1);\n\t\n\t                clearTimeout(this.showTimer);\n\t                clearInterval(this.hideTimer);\n\t                attr(this.$el, 'aria-expanded', false);\n\t                this.toggleElement(this.tooltip, false);\n\t                this.tooltip && remove(this.tooltip);\n\t                this.tooltip = false;\n\t                this._unbind();\n\t\n\t            }\n\t\n\t        },\n\t\n\t        events: ( obj = {}, obj[(\"focus \" + pointerEnter + \" \" + pointerDown)] = function (e) {\n\t                if (e.type !== pointerDown || !isTouch(e)) {\n\t                    this.show();\n\t                }\n\t            }, obj.blur = 'hide', obj[pointerLeave] = function (e) {\n\t                if (!isTouch(e)) {\n\t                    this.hide();\n\t                }\n\t            }, obj)\n\t\n\t    });\n\t\n\t}\n\t\n\tfunction plugin$13(UIkit) {\n\t\n\t    if (plugin$13.installed) {\n\t        return;\n\t    }\n\t\n\t    var ref = UIkit.util;\n\t    var addClass = ref.addClass;\n\t    var ajax = ref.ajax;\n\t    var matches = ref.matches;\n\t    var noop = ref.noop;\n\t    var on = ref.on;\n\t    var removeClass = ref.removeClass;\n\t    var trigger = ref.trigger;\n\t\n\t    UIkit.component('upload', {\n\t\n\t        props: {\n\t            allow: String,\n\t            clsDragover: String,\n\t            concurrent: Number,\n\t            maxSize: Number,\n\t            mime: String,\n\t            msgInvalidMime: String,\n\t            msgInvalidName: String,\n\t            msgInvalidSize: String,\n\t            multiple: Boolean,\n\t            name: String,\n\t            params: Object,\n\t            type: String,\n\t            url: String,\n\t        },\n\t\n\t        defaults: {\n\t            allow: false,\n\t            clsDragover: 'uk-dragover',\n\t            concurrent: 1,\n\t            maxSize: 0,\n\t            mime: false,\n\t            msgInvalidMime: 'Invalid File Type: %s',\n\t            msgInvalidName: 'Invalid File Name: %s',\n\t            msgInvalidSize: 'Invalid File Size: %s Bytes Max',\n\t            multiple: false,\n\t            name: 'files[]',\n\t            params: {},\n\t            type: 'POST',\n\t            url: '',\n\t            abort: noop,\n\t            beforeAll: noop,\n\t            beforeSend: noop,\n\t            complete: noop,\n\t            completeAll: noop,\n\t            error: noop,\n\t            fail: noop,\n\t            load: noop,\n\t            loadEnd: noop,\n\t            loadStart: noop,\n\t            progress: noop\n\t        },\n\t\n\t        events: {\n\t\n\t            change: function change(e) {\n\t\n\t                if (!matches(e.target, 'input[type=\"file\"]')) {\n\t                    return;\n\t                }\n\t\n\t                e.preventDefault();\n\t\n\t                if (e.target.files) {\n\t                    this.upload(e.target.files);\n\t                }\n\t\n\t                e.target.value = '';\n\t            },\n\t\n\t            drop: function drop(e) {\n\t                stop(e);\n\t\n\t                var transfer = e.dataTransfer;\n\t\n\t                if (!transfer || !transfer.files) {\n\t                    return;\n\t                }\n\t\n\t                removeClass(this.$el, this.clsDragover);\n\t\n\t                this.upload(transfer.files);\n\t            },\n\t\n\t            dragenter: function dragenter(e) {\n\t                stop(e);\n\t            },\n\t\n\t            dragover: function dragover(e) {\n\t                stop(e);\n\t                addClass(this.$el, this.clsDragover);\n\t            },\n\t\n\t            dragleave: function dragleave(e) {\n\t                stop(e);\n\t                removeClass(this.$el, this.clsDragover);\n\t            }\n\t\n\t        },\n\t\n\t        methods: {\n\t\n\t            upload: function upload(files) {\n\t                var this$1 = this;\n\t\n\t\n\t                if (!files.length) {\n\t                    return;\n\t                }\n\t\n\t                trigger(this.$el, 'upload', [files]);\n\t\n\t                for (var i = 0; i < files.length; i++) {\n\t\n\t                    if (this$1.maxSize && this$1.maxSize * 1000 < files[i].size) {\n\t                        this$1.fail(this$1.msgInvalidSize.replace('%s', this$1.allow));\n\t                        return;\n\t                    }\n\t\n\t                    if (this$1.allow && !match(this$1.allow, files[i].name)) {\n\t                        this$1.fail(this$1.msgInvalidName.replace('%s', this$1.allow));\n\t                        return;\n\t                    }\n\t\n\t                    if (this$1.mime && !match(this$1.mime, files[i].type)) {\n\t                        this$1.fail(this$1.msgInvalidMime.replace('%s', this$1.mime));\n\t                        return;\n\t                    }\n\t\n\t                }\n\t\n\t                if (!this.multiple) {\n\t                    files = [files[0]];\n\t                }\n\t\n\t                this.beforeAll(this, files);\n\t\n\t                var chunks = chunk(files, this.concurrent);\n\t                var upload = function (files) {\n\t\n\t                    var data = new FormData();\n\t\n\t                    files.forEach(function (file) { return data.append(this$1.name, file); });\n\t\n\t                    for (var key in this$1.params) {\n\t                        data.append(key, this$1.params[key]);\n\t                    }\n\t\n\t                    ajax(this$1.url, {\n\t                        data: data,\n\t                        method: this$1.type,\n\t                        beforeSend: function (env) {\n\t\n\t                            var xhr = env.xhr;\n\t                            xhr.upload && on(xhr.upload, 'progress', this$1.progress);\n\t                            ['loadStart', 'load', 'loadEnd', 'abort'].forEach(function (type) { return on(xhr, type.toLowerCase(), this$1[type]); }\n\t                            );\n\t\n\t                            this$1.beforeSend(env);\n\t\n\t                        }\n\t                    }).then(\n\t                        function (xhr) {\n\t\n\t                            this$1.complete(xhr);\n\t\n\t                            if (chunks.length) {\n\t                                upload(chunks.shift());\n\t                            } else {\n\t                                this$1.completeAll(xhr);\n\t                            }\n\t\n\t                        },\n\t                        function (e) { return this$1.error(e.message); }\n\t                    );\n\t\n\t                };\n\t\n\t                upload(chunks.shift());\n\t\n\t            }\n\t\n\t        }\n\t\n\t    });\n\t\n\t    function match(pattern, path) {\n\t        return path.match(new RegExp((\"^\" + (pattern.replace(/\\//g, '\\\\/').replace(/\\*\\*/g, '(\\\\/[^\\\\/]+)*').replace(/\\*/g, '[^\\\\/]+').replace(/((?!\\\\))\\?/g, '$1.')) + \"$\"), 'i'));\n\t    }\n\t\n\t    function chunk(files, size) {\n\t        var chunks = [];\n\t        for (var i = 0; i < files.length; i += size) {\n\t            var chunk = [];\n\t            for (var j = 0; j < size; j++) {\n\t                chunk.push(files[i + j]);\n\t            }\n\t            chunks.push(chunk);\n\t        }\n\t        return chunks;\n\t    }\n\t\n\t    function stop(e) {\n\t        e.preventDefault();\n\t        e.stopPropagation();\n\t    }\n\t\n\t}\n\t\n\tUIkit$2.use(plugin);\n\tUIkit$2.use(plugin$1);\n\tUIkit$2.use(plugin$2);\n\tUIkit$2.use(plugin$6);\n\tUIkit$2.use(plugin$7);\n\tUIkit$2.use(plugin$9);\n\tUIkit$2.use(plugin$10);\n\tUIkit$2.use(plugin$11);\n\tUIkit$2.use(plugin$12);\n\tUIkit$2.use(plugin$13);\n\t\n\t{\n\t    boot(UIkit$2);\n\t}\n\t\n\treturn UIkit$2;\n\t\n\t})));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2).setImmediate))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {var apply = Function.prototype.apply;\n\t\n\t// DOM APIs, for completeness\n\t\n\texports.setTimeout = function() {\n\t  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n\t};\n\texports.setInterval = function() {\n\t  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n\t};\n\texports.clearTimeout =\n\texports.clearInterval = function(timeout) {\n\t  if (timeout) {\n\t    timeout.close();\n\t  }\n\t};\n\t\n\tfunction Timeout(id, clearFn) {\n\t  this._id = id;\n\t  this._clearFn = clearFn;\n\t}\n\tTimeout.prototype.unref = Timeout.prototype.ref = function() {};\n\tTimeout.prototype.close = function() {\n\t  this._clearFn.call(window, this._id);\n\t};\n\t\n\t// Does not start the time, just sets up the members needed.\n\texports.enroll = function(item, msecs) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = msecs;\n\t};\n\t\n\texports.unenroll = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = -1;\n\t};\n\t\n\texports._unrefActive = exports.active = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t\n\t  var msecs = item._idleTimeout;\n\t  if (msecs >= 0) {\n\t    item._idleTimeoutId = setTimeout(function onTimeout() {\n\t      if (item._onTimeout)\n\t        item._onTimeout();\n\t    }, msecs);\n\t  }\n\t};\n\t\n\t// setimmediate attaches itself to the global object\n\t__webpack_require__(3);\n\t// On some exotic environments, it's not clear which object `setimmeidate` was\n\t// able to install onto.  Search each possibility in the same order as the\n\t// `setimmediate` library.\n\texports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n\t                       (typeof global !== \"undefined\" && global.setImmediate) ||\n\t                       (this && this.setImmediate);\n\texports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n\t                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n\t                         (this && this.clearImmediate);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n\t    \"use strict\";\n\t\n\t    if (global.setImmediate) {\n\t        return;\n\t    }\n\t\n\t    var nextHandle = 1; // Spec says greater than zero\n\t    var tasksByHandle = {};\n\t    var currentlyRunningATask = false;\n\t    var doc = global.document;\n\t    var registerImmediate;\n\t\n\t    function setImmediate(callback) {\n\t      // Callback can either be a function or a string\n\t      if (typeof callback !== \"function\") {\n\t        callback = new Function(\"\" + callback);\n\t      }\n\t      // Copy function arguments\n\t      var args = new Array(arguments.length - 1);\n\t      for (var i = 0; i < args.length; i++) {\n\t          args[i] = arguments[i + 1];\n\t      }\n\t      // Store and register the task\n\t      var task = { callback: callback, args: args };\n\t      tasksByHandle[nextHandle] = task;\n\t      registerImmediate(nextHandle);\n\t      return nextHandle++;\n\t    }\n\t\n\t    function clearImmediate(handle) {\n\t        delete tasksByHandle[handle];\n\t    }\n\t\n\t    function run(task) {\n\t        var callback = task.callback;\n\t        var args = task.args;\n\t        switch (args.length) {\n\t        case 0:\n\t            callback();\n\t            break;\n\t        case 1:\n\t            callback(args[0]);\n\t            break;\n\t        case 2:\n\t            callback(args[0], args[1]);\n\t            break;\n\t        case 3:\n\t            callback(args[0], args[1], args[2]);\n\t            break;\n\t        default:\n\t            callback.apply(undefined, args);\n\t            break;\n\t        }\n\t    }\n\t\n\t    function runIfPresent(handle) {\n\t        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n\t        // So if we're currently running a task, we'll need to delay this invocation.\n\t        if (currentlyRunningATask) {\n\t            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n\t            // \"too much recursion\" error.\n\t            setTimeout(runIfPresent, 0, handle);\n\t        } else {\n\t            var task = tasksByHandle[handle];\n\t            if (task) {\n\t                currentlyRunningATask = true;\n\t                try {\n\t                    run(task);\n\t                } finally {\n\t                    clearImmediate(handle);\n\t                    currentlyRunningATask = false;\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    function installNextTickImplementation() {\n\t        registerImmediate = function(handle) {\n\t            process.nextTick(function () { runIfPresent(handle); });\n\t        };\n\t    }\n\t\n\t    function canUsePostMessage() {\n\t        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n\t        // where `global.postMessage` means something completely different and can't be used for this purpose.\n\t        if (global.postMessage && !global.importScripts) {\n\t            var postMessageIsAsynchronous = true;\n\t            var oldOnMessage = global.onmessage;\n\t            global.onmessage = function() {\n\t                postMessageIsAsynchronous = false;\n\t            };\n\t            global.postMessage(\"\", \"*\");\n\t            global.onmessage = oldOnMessage;\n\t            return postMessageIsAsynchronous;\n\t        }\n\t    }\n\t\n\t    function installPostMessageImplementation() {\n\t        // Installs an event handler on `global` for the `message` event: see\n\t        // * https://developer.mozilla.org/en/DOM/window.postMessage\n\t        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\t\n\t        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\t        var onGlobalMessage = function(event) {\n\t            if (event.source === global &&\n\t                typeof event.data === \"string\" &&\n\t                event.data.indexOf(messagePrefix) === 0) {\n\t                runIfPresent(+event.data.slice(messagePrefix.length));\n\t            }\n\t        };\n\t\n\t        if (global.addEventListener) {\n\t            global.addEventListener(\"message\", onGlobalMessage, false);\n\t        } else {\n\t            global.attachEvent(\"onmessage\", onGlobalMessage);\n\t        }\n\t\n\t        registerImmediate = function(handle) {\n\t            global.postMessage(messagePrefix + handle, \"*\");\n\t        };\n\t    }\n\t\n\t    function installMessageChannelImplementation() {\n\t        var channel = new MessageChannel();\n\t        channel.port1.onmessage = function(event) {\n\t            var handle = event.data;\n\t            runIfPresent(handle);\n\t        };\n\t\n\t        registerImmediate = function(handle) {\n\t            channel.port2.postMessage(handle);\n\t        };\n\t    }\n\t\n\t    function installReadyStateChangeImplementation() {\n\t        var html = doc.documentElement;\n\t        registerImmediate = function(handle) {\n\t            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n\t            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n\t            var script = doc.createElement(\"script\");\n\t            script.onreadystatechange = function () {\n\t                runIfPresent(handle);\n\t                script.onreadystatechange = null;\n\t                html.removeChild(script);\n\t                script = null;\n\t            };\n\t            html.appendChild(script);\n\t        };\n\t    }\n\t\n\t    function installSetTimeoutImplementation() {\n\t        registerImmediate = function(handle) {\n\t            setTimeout(runIfPresent, 0, handle);\n\t        };\n\t    }\n\t\n\t    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n\t    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n\t    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\t\n\t    // Don't get fooled by e.g. browserify environments.\n\t    if ({}.toString.call(global.process) === \"[object process]\") {\n\t        // For Node.js before 0.9\n\t        installNextTickImplementation();\n\t\n\t    } else if (canUsePostMessage()) {\n\t        // For non-IE10 modern browsers\n\t        installPostMessageImplementation();\n\t\n\t    } else if (global.MessageChannel) {\n\t        // For web workers, where supported\n\t        installMessageChannelImplementation();\n\t\n\t    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n\t        // For IE 6–8\n\t        installReadyStateChangeImplementation();\n\t\n\t    } else {\n\t        // For older browsers\n\t        installSetTimeoutImplementation();\n\t    }\n\t\n\t    attachTo.setImmediate = setImmediate;\n\t    attachTo.clearImmediate = clearImmediate;\n\t}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(4)))\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\tprocess.prependListener = noop;\n\tprocess.prependOnceListener = noop;\n\t\n\tprocess.listeners = function (name) { return [] }\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// build/idf.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5afcb201a5595e84becd","\r\n\"use strict\";\r\n// import styles from '../style.css'\r\nimport UIkit from 'uikit';\r\n\r\nclass idf {\r\n\tconstructor(selector) {\r\n\t\tthis.selector = document.querySelector(selector);\r\n\t\tthis.idf_form_object = {\r\n\t\t\ttitle: '',\r\n\t\t\tformElements: []\r\n\t\t};\r\n\t}\r\n\r\n\thtml(content = null) {\r\n\t\tif (content !== null) {\r\n\t\t\tthis.selector.innerHTML = content;\r\n\t\t}\r\n\t\treturn this.selector.innerHTML;\r\n\t}\r\n\r\n\tinit(content = null) {\r\n\t\tif (content == null) {\r\n\t\t\t// Add form title field with floating button\r\n\t\t\tthis.selector.innerHTML = `\r\n\t\t\t\t<div id=\"form-container\" class=\"uk-container\">\r\n\t\t\t\t\t<div uk-alert>\r\n\t\t\t\t\t\tALERT: Select Question Field To Edit \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"uk-child-width-expand@s\" uk-grid style=\"margin-bottom: 20px;padding-bottom: 100px;\">\r\n\t\t\t\t\t\t<div id=\"formElements\">\r\n\t\t\t\t\t\t\t<div id=\"form_title_parent\">\r\n\t\t\t\t\t\t\t\t<div id=\"form_title\" class=\"uk-card uk-card-default uk-card-body inactive\">\r\n\t\t\t\t\t\t\t\t\t<form id=\"title-form\" class=\"uk-form-horizontal uk-margin-large\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"uk-margin\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Form Name</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input class=\"uk-input\" id=\"form-input\" type=\"text\" placeholder=\"Please Enter Form Name...\">\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t\t<div class=\"uk-margin hidden\">\r\n\t\t\t\t\t\t\t\t\t\t<h1 id=\"form-title-preview\">Untitled form</h1>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<a id=\"idf_add_btn\" class=\"float\" uk-tooltip=\"title: Add Question; pos: bottom\">\r\n\t\t\t\t\t\t<i style=\"margin-top: 20px;font-size: 20px;\" class=\"material-icons\">&#xE145;</i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<a id=\"idf_submit_btn\" class=\"float-left\" uk-tooltip=\"title: Submit Form; pos: bottom\">\r\n\t\t\t\t\t\t<i style=\"margin-top: 20px;font-size: 20px;\" class=\"material-icons\">&#xE876;</i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<a id=\"idf_preview_btn\" class=\"float-top-right\" uk-tooltip=\"title: Preview; pos: bottom\">\r\n\t\t\t\t\t\t<i style=\"margin-top: 20px;font-size: 20px;\" class=\"material-icons\">&#xE8F4;</i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t`;\r\n\r\n\t\t\t// make each added question editable\r\n\t\t\tlet editQuestion = (event) => {\r\n\t\t\t\tthis.idf_form_object['formElements'].forEach((element) => {\r\n\t\t\t\t\tvar card = document.getElementById(`${ element['key'] }_parent`);\r\n\t\t\t\t\tif (card.children[0].id == getByKey(event.target.id)) {\r\n\t\t\t\t\t\tcard.children[0].classList.remove('inactive');\r\n\t\t\t\t\t\tcard.children[0].classList.add('active');\r\n\t\t\t\t\t\tformTitle.children[0].classList.remove('active');\r\n\t\t\t\t\t\tformTitle.children[0].classList.add('inactive');\r\n\t\t\t\t\t\tformTitle.addEventListener('click', makeTitleEditable);\r\n\t\t\t\t\t\t// remove event handler to avoid multiple triggering of the function \r\n\t\t\t\t\t\tcard.removeEventListener('click', editQuestion);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcard.children[0].classList.remove('active');\r\n\t\t\t\t\t\tcard.children[0].classList.add('inactive');\r\n\t\t\t\t\t\tformTitle.children[0].classList.remove('active');\r\n\t\t\t\t\t\tformTitle.children[0].classList.add('inactive');\r\n\t\t\t\t\t\t// make all other questions editable\r\n\t\t\t\t\t\tcard.addEventListener('click', editQuestion);\r\n\t\t\t\t\t\tformTitle.addEventListener('click', makeTitleEditable);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// make form title editable\r\n\t\t\tlet makeTitleEditable = (event) => {\r\n\t\t\t\tformTitle.children[0].classList.remove('inactive');\r\n\t\t\t\tformTitle.children[0].classList.add('active');\r\n\t\t\t\tformTitle.removeEventListener('click', makeTitleEditable);\r\n\r\n\t\t\t\tthis.idf_form_object['formElements'].forEach((element) => {\r\n\t\t\t\t\tvar questionCard = document.getElementById(`${ element['key'] }_parent`);\r\n\t\t\t\t\tquestionCard.children[0].classList.remove('active');\r\n\t\t\t\t\tquestionCard.children[0].classList.add('inactive');\r\n\t\t\t\t\tquestionCard.addEventListener('click', editQuestion);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// make form title editable\r\n\t\t\tvar formTitle = document.getElementById('form_title_parent');\r\n\t\t\tformTitle.addEventListener('click', makeTitleEditable);\r\n\r\n\t\t\t// splice id string\r\n\t\t\tfunction getByKey(key) {\r\n\t\t\t\tvar currentKey = key;\r\n\t\t\t\tvar selector = currentKey.indexOf('_');\r\n\t\t\t\tcurrentKey = currentKey.substring(0, selector != -1 ? selector : currentKey.length);\r\n\t\t\t\treturn currentKey; // return element key which corresponds to the actual formElement\r\n\t\t\t}\r\n\r\n\t\t\tvar formInput = document.getElementById('form-input');\r\n\t\t\tvar formTitlePreview = document.getElementById('form-title-preview');\r\n\t\t\tformInput.addEventListener('keyup', (event) => {\r\n\t\t\t\tthis.idf_form_object['title'] = event.target.value;\r\n\t\t\t\tformTitlePreview.innerHTML = event.target.value;\r\n\t\t\t});\r\n\r\n\t\t\t// Preview button event\r\n\t\t\tthis.idf_preview_btn = document.getElementById('idf_preview_btn');\r\n\t\t\tthis.idf_preview_btn.addEventListener('click', (event) => {\r\n\t\t\t\tvar container = document.getElementById('form-container');\r\n\t\t\t\tcontainer.classList.add('hidden');\r\n\t\t\t\t\r\n\t\t\t\tvar loader = document.createElement('div');\r\n\t\t\t\tloader.id = 'loader';\r\n\t\t\t\tloader.classList.add('wrapper', 'animated', 'fadeIn');\r\n\t\t\t\tloader.innerHTML = `\r\n\t\t\t\t\t<ul class=\"loader-list\">\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<div class=\"loader center\"><span></span></div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t`;\r\n\t\t\t\tcontainer.parentElement.appendChild(loader);\r\n\r\n\t\t\t\tvar preview_form = document.createElement('div');\r\n\t\t\t\tpreview_form.id = 'form-preview';\r\n\t\t\t\tpreview_form.classList.add('uk-container');\r\n\r\n\t\t\t\t// Intial preview DOM element\r\n\t\t\t\tpreview_form.innerHTML = `\r\n\t\t\t\t\t<div uk-alert>\r\n\t\t\t\t\t\tALERT: Form Preview \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"uk-child-width-expand@s\" uk-grid style=\"margin-bottom: 20px;padding-bottom: 100px;\">\r\n\t\t\t\t\t\t<div class=\"uk-first-column\">\r\n\t\t\t\t\t\t\t<div class=\"uk-card uk-card-default uk-card-body\">\r\n\t\t\t\t\t\t\t\t<form id=\"previewForm\" class=\"uk-form-stacked\">\r\n\t\t\t\t\t\t\t\t\t<fieldset class=\"uk-fieldset\">\r\n\t\t\t\t\t\t\t\t\t\t<legend class=\"uk-legend\">${ this.idf_form_object['title'] == '' ? 'Untitled Form' : this.idf_form_object['title'] }</legend>\r\n\t\t\t\t\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t`;\r\n\t\t\t\tcontainer.parentElement.appendChild(preview_form);\r\n\r\n\t\t\t\t// change prevew DOM according to formElement controlType\r\n\t\t\t\tvar previewForm = document.getElementById('previewForm');\r\n\t\t\t\tthis.idf_form_object['formElements'].forEach((element) => {\r\n\t\t\t\t\tvar formDiv = document.createElement('div');\r\n\t\t\t\t\tformDiv.classList.add('uk-margin');\r\n\t\t\t\t\tformDiv.id = element['key'];\r\n\t\t\t\t\tswitch (element['controlType']) {\r\n\t\t\t\t\t\t// Short text form \r\n\t\t\t\t\t\tcase 'short_text':\t\r\n\t\t\t\t\t\t\tformDiv.innerHTML = `\r\n\t\t\t\t\t\t\t\t<label class=\"uk-form-label\" for=\"form-stacked-text\">${ element['placeholder'] == '' ? 'Untitled Question' : element['placeholder'] }</label>\r\n\t\t\t\t\t\t\t\t<div class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t\t<input class=\"uk-input\" id=\"form-stacked-text\" type=\"text\" placeholder=\"Some text...\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t`;\t\r\n\t\t\t\t\t\t\tpreviewForm.appendChild(formDiv);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t// Paragraph form \r\n\t\t\t\t\t\tcase 'paragraph':\r\n\t\t\t\t\t\t\tformDiv.innerHTML = `\r\n\t\t\t\t\t\t\t\t<label class=\"uk-form-label\" for=\"form-stacked-text\">${ element['placeholder'] == '' ? 'Untitled Question' : element['placeholder'] }</label>\r\n\t\t\t\t\t\t\t\t<div class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t\t<textarea class=\"uk-textarea\" rows=\"5\" placeholder=\"Textarea\"></textarea>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\tpreviewForm.appendChild(formDiv);\r\n\t\t\t\t\t\tbreak;\t\r\n\t\t\t\t\t\t// Radio Button\r\n\t\t\t\t\t\tcase 'multiple_choice':\r\n\t\t\t\t\t\t\tformDiv.innerHTML = `\r\n\t\t\t\t\t\t\t\t<div class=\"uk-form-label\">${ element['placeholder'] == '' ? 'Untitled Question' : element['placeholder'] }</div>\r\n\t\t\t\t\t\t\t\t<div id=\"preview_radio_options\" class=\"uk-form-controls uk-form-controls-text\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\tpreviewForm.appendChild(formDiv);\r\n\t\t\t\t\t\t\tvar currentPreviewOptions = document.querySelector(`#preview_radio_options`);\r\n\t\t\t\t\t\t\telement['options'].forEach((option, index) => {\r\n\t\t\t\t\t\t\t\tvar optionLbl = document.createElement('label');\r\n\t\t\t\t\t\t\t\toptionLbl.style.cssText = 'display:block';\r\n\t\t\t\t\t\t\t\toptionLbl.innerHTML = `<input style=\"margin-right:5px;\" class=\"uk-radio\" type=\"radio\" name=\"${ option['key'] }\">${ option['value'] == '' ? 'Radio ' + (index + 1)  : option['value'] }</label>`;\r\n\t\t\t\t\t\t\t\tcurrentPreviewOptions.appendChild(optionLbl);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t// Checkbox\r\n\t\t\t\t\t\tcase 'checkbox':\r\n\t\t\t\t\t\t\tformDiv.innerHTML = `\r\n\t\t\t\t\t\t\t\t<div class=\"uk-form-label\">${ element['placeholder'] == '' ? 'Untitled Question' : element['placeholder'] }</div>\r\n\t\t\t\t\t\t\t\t<div id=\"preview_checkbox_options\" class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\tpreviewForm.appendChild(formDiv);\r\n\t\t\t\t\t\t\tvar currentPreviewOptions = document.querySelector(`#preview_checkbox_options`);\r\n\t\t\t\t\t\t\telement['options'].forEach((option, index) => {\r\n\t\t\t\t\t\t\t\tvar optionLbl = document.createElement('label');\r\n\t\t\t\t\t\t\t\toptionLbl.style.cssText = 'display:block';\r\n\t\t\t\t\t\t\t\toptionLbl.innerHTML = `<input style=\"margin-right:5px;\" class=\"uk-checkbox\" type=\"checkbox\" name=\"${ option['key'] }\">${ option['value'] == '' ? 'Radio ' + (index + 1)  : option['value'] }</label>`;\r\n\t\t\t\t\t\t\t\tcurrentPreviewOptions.appendChild(optionLbl);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t// Dropdown\r\n\t\t\t\t\t\tcase 'dropdown':\r\n\t\t\t\t\t\t\tformDiv.innerHTML = `\r\n\t\t\t\t\t\t\t\t<label class=\"uk-form-label\" for=\"form-horizontal-select\">${ element['placeholder'] == '' ? 'Untitled Question' : element['placeholder'] }</label>\r\n\t\t\t\t\t\t\t\t<div class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t\t<select id=\"preview_select_options\" class=\"uk-select\" id=\"form-horizontal-select\">\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\tpreviewForm.appendChild(formDiv);\r\n\t\t\t\t\t\t\tvar currentPreviewOptions = document.querySelector(`#preview_select_options`);\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\telement['options'].forEach((option, index) => {\r\n\t\t\t\t\t\t\t\tvar optionLbl = document.createElement('option');\r\n\t\t\t\t\t\t\t\toptionLbl.innerHTML = `${ option['value'] == '' ? 'Option ' + (index + 1)  : option['value'] }`;\r\n\t\t\t\t\t\t\t\tcurrentPreviewOptions.appendChild(optionLbl);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t// Date and time\r\n\t\t\t\t\t\tcase 'date':\r\n\t\t\t\t\t\tbreak;\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// remover loader content from DOM\r\n\t\t\t\tloader.classList.remove('fadeIn');\r\n\t\t\t\tloader.classList.add('fadeOut');\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tcontainer.parentElement.removeChild(loader);\r\n\t\t\t\t}, 1000);\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tvar bach_btn = document.createElement('div');\r\n\t\t\t\t\tbach_btn.innerHTML = `\r\n\t\t\t\t\t\t<a id=\"idf_back_btn\" class=\"float-top-left\" uk-tooltip=\"title: Back; pos: right\">\r\n\t\t\t\t\t\t\t<i style=\"margin-top: 20px;font-size: 20px;\" class=\"material-icons\">&#xE5C4;</i>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t`;\r\n\t\t\t\t\tpreview_form.appendChild(bach_btn);\r\n\t\t\t\t\t// change back to Edit view\r\n\t\t\t\t\tvar backBtn = document.getElementById('idf_back_btn');\r\n\t\t\t\t\tbackBtn.addEventListener('click', function (event) {\r\n\t\t\t\t\t\tvar container = document.getElementById('form-container');\r\n\t\t\t\t\t\tcontainer.parentElement.removeChild(preview_form);\r\n\t\t\t\t\t\tcontainer.classList.remove('hidden');\r\n\t\t\t\t\t});\r\n\t\t\t\t}, 1000);\r\n\t\t\t});\r\n\r\n\t\t\tthis.idf_add_btn = document.getElementById('idf_add_btn');\r\n\t\t\tthis.idf_add_btn.addEventListener('click', (event) => {\r\n\t\t\t\tthis.div_form = document.getElementById('formElements');\r\n\t\t\t\t\r\n\t\t\t\tlet formElement = {\r\n\t\t\t\t\tkey: Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5),\r\n\t\t\t\t\tlabel: '',\r\n\t\t\t\t\tvalue: '',\r\n\t\t\t\t\tcontrolType: 'short_text',\r\n\t\t\t\t\ttype: '',\r\n\t\t\t\t\trequired: false,\r\n\t\t\t\t\torder: this.idf_form_object['formElements'].length + 1,\r\n\t\t\t\t\tplaceholder: '',\r\n\t\t\t\t};\r\n\t\t\t\tthis.idf_form_object['formElements'].push(formElement);\r\n\r\n\t\t\t\tvar div_element = document.createElement('div');\r\n\t\t\t\tdiv_element.innerHTML = `\r\n\t\t\t\t\t<div id=\"${ formElement['key'] }\" class=\"uk-card uk-card-default uk-card-body active\">\t\t\t\t\t\r\n\t\t\t\t\t\t<form class=\"uk-form-horizontal uk-margin-large\">\r\n\t\t\t\t\t\t\t<div class=\"uk-margin\">\r\n\t\t\t\t\t\t\t\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Question Type</label>\r\n\t\t\t\t\t\t\t\t<div class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t\t<input id=\"selectedType\" class=\"uk-input\" disabled type=\"text\" placeholder=\"Short answer\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"dropdownContain\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"dropOut\">\r\n\t\t\t\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"short_text\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i id=\"short_text\" class=\"material-icons\">short_text</i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span id=\"short_text\" class=\"icon-text\">Short answer</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"paragraph\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i id=\"paragraph\" class=\"material-icons\">subject</i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span id=\"paragraph\" class=\"icon-text\">Paragraph</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"multiple_choice\" style=\"border-top: 1px solid rgba(0,0,0,0.12);\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i id=\"multiple_choice\" class=\"material-icons\">radio_button_checked</i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span id=\"multiple_choice\" class=\"icon-text\">Multiple Choice</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"checkbox\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i id=\"checkbox\" class=\"material-icons\">check_box</i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span id=\"checkbox\" class=\"icon-text\">Checkboxes</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"dropdown\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i id=\"dropdown\" class=\"material-icons\">arrow_drop_down_circle</i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span id=\"dropdown\" class=\"icon-text\">Dropdown</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<li id=\"date\" style=\"border-top: 1px solid rgba(0,0,0,0.12);\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i id=\"date\" class=\"material-icons\">event</i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span id=\"date\" class=\"icon-text\">Date</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div id=\"selected_question_dom\" class=\"uk-margin\">\r\n\t\t\t\t\t\t\t\t<!-- Selected Question Type Content -->\r\n\t\t\t\t\t\t\t\t<div class=\"uk-margin\">\r\n\t\t\t\t\t\t\t\t\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Question Name</label>\r\n\t\t\t\t\t\t\t\t\t<div class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\tid=\"short_text_input\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"uk-input\" \r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Question Name\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"uk-margin\">\r\n\t\t\t\t\t\t\t\t\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Content</label>\r\n\t\t\t\t\t\t\t\t\t<div class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"uk-input\" \r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Short answer text\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div id=\"bottom-controls\" class=\"uk-margin\">\r\n\t\t\t\t\t\t\t\t<div class=\"uk-form-controls uk-form-controls-text\" style=\"display:flex;\">\r\n\t\t\t\t\t\t\t\t\t<span id=\"selected-type\"></span>\r\n\t\t\t\t\t\t\t\t\t<span style=\"flex: 1 1 auto;\"></span>\r\n\t\t\t\t\t\t\t\t\t<ul class=\"tg-list\">\r\n\t\t\t\t\t\t\t\t\t\t<i id=\"${ formElement['key'] }_remove\" class=\"material-icons\" uk-tooltip=\"title: Remove Question; pos: bottom\">delete</i>\r\n\t\t\t\t\t\t\t\t\t\t<span style=\"padding-left:25px;border-left: 1px solid #e0e0e0;height: 32px;margin: 0 16px;width: 0;\"></span>\r\n\t\t\t\t\t\t\t\t\t\t<li class=\"tg-list-item\" style=\"display:flex;margin-left:-10px;\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span style=\"padding-top: 4px;\">Required :</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<input class=\"tgl tgl-flip\" id=\"${ formElement['key'] }_cb\" type=\"checkbox\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t<label id=\"${ formElement['key'] }_lbl\" class=\"tgl-btn\" data-tg-off=\"Nope\" data-tg-on=\"Yeah!\" for=\"${ formElement['key'] }_cb\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle=\"margin-left:15px;\"></label>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t<div id=\"hiddenElement\" class=\"uk-margin hidden\">\r\n\t\t\t\t\t\t\t<h1 id=\"${ formElement['key'] }_title_preview\" class=\"question-preview\">Untitled Question</h1>\r\n\t\t\t\t\t\t\t<span class=\"short-answer-text\">Short answer text</span>\r\n\t\t\t\t\t\t\t<div style=\"border-bottom: 1px dotted rgba(0,0,0,0.38);margin-top: -10px;\"></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t`;\r\n\t\t\t\tthis.div_form.appendChild(div_element);\r\n\r\n\t\t\t\t// assign keyup event for raw textInput\r\n\t\t\t\tvar shortTextInput = document.querySelector(`#${ formElement['key'] } #short_text_input`);\r\n\t\t\t\tvar titlePreview = document.getElementById(`${ formElement['key'] }_title_preview`);\r\n\t\t\t\tshortTextInput.addEventListener('keyup', (event) => {\r\n\t\t\t\t\t// assign text to preview text\r\n\t\t\t\t\ttitlePreview.innerHTML = event.target.value;\r\n\t\t\t\t\tformElement['label'] = event.target.value;\r\n\t\t\t\t\tformElement['placeholder'] = event.target.value;\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// give id to parent element of question DOM\r\n\t\t\t\tvar createdCard = document.querySelector(`#${ formElement['key'] }.uk-card-default`).parentElement;\r\n\t\t\t\tcreatedCard.id = `${ formElement['key'] }_parent`;\r\n\t\t\t\t\r\n\t\t\t\t// make all previous cards inactive\r\n\t\t\t\tthis.idf_form_object['formElements'].forEach(element => {\r\n\t\t\t\t\tvar formCard = document.getElementById(`${ element['key'] }_parent`);\r\n\t\t\t\t\tif (formCard.children[0].id != formElement['key']) {\r\n\t\t\t\t\t\tformCard.children[0].classList.remove('active');\r\n\t\t\t\t\t\tformCard.children[0].classList.add('inactive');\r\n\t\t\t\t\t\t// assign click event events to make each question editable\r\n\t\t\t\t\t\tformCard.addEventListener('click', editQuestion);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t// make form title inactive\r\n\t\t\t\tformTitle.children[0].classList.remove('active');\r\n\t\t\t\tformTitle.children[0].classList.add('inactive');\r\n\t\t\t\tformTitle.addEventListener('click', makeTitleEditable);\r\n\r\n\t\t\t\t// set required status of formElement\r\n\t\t\t\tthis.requiredButton = document.getElementById(`${ formElement['key'] }_lbl`);\r\n\t\t\t\tthis.requiredButton.addEventListener('click', (event) => {\r\n\t\t\t\t\t// get relevant formElement\r\n\t\t\t\t\tthis.idf_form_object['formElements'].forEach(element => {\r\n\t\t\t\t\t\tif (element['key'] == getByKey(event.target.id)) {\r\n\t\t\t\t\t\t\t// change formElement required status\r\n\t\t\t\t\t\t\telement['required'] = !element['required'];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// remove formElement\r\n\t\t\t\tthis.deleteFormElementBtn = document.getElementById(`${ formElement['key'] }_remove`);\r\n\t\t\t\tthis.deleteFormElementBtn.addEventListener('click', (event) => {\r\n\t\t\t\t\tvar x = this.idf_form_object['formElements'].forEach((element, index) => {\r\n\t\t\t\t\t\tif (element['key'] == getByKey(event.target.id)) {\r\n\t\t\t\t\t\t\tthis.idf_form_object['formElements'].splice(index, 1);\r\n\t\t\t\t\t\t\t// delete relative html content\r\n\t\t\t\t\t\t\tthis.currentDiv = document.getElementById(`${ formElement['key'] }`);\r\n\t\t\t\t\t\t\tdocument.getElementById('formElements').removeChild(this.currentDiv.parentNode);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tthis.selectedQuestionType = document.querySelector(`#${ formElement['key'] } .dropdownContain`);\r\n\t\t\t\tthis.selectedQuestionType.addEventListener('click', (event) => {\r\n\r\n\t\t\t\t\tvar selectedType = document.querySelector(`#${ formElement['key'] } #selectedType`);\r\n\t\t\t\t\tvar selectedQuestionDOM = document.querySelector(`#${ formElement['key'] } #selected_question_dom`);\r\n\t\t\t\t\tvar hiddenElement = document.querySelector(`#${ formElement['key'] } #hiddenElement`)\r\n\t\t\t\t\tvar elementID = event.target.id;\r\n\t\t\t\t\tswitch (elementID) {\r\n\t\t\t\t\t\t// Short text form selection\r\n\t\t\t\t\t\tcase 'short_text':\r\n\t\t\t\t\t\t\tformElement['controlType'] = 'short_text';\r\n\t\t\t\t\t\t\tselectedType.placeholder = 'Short answer';\r\n\t\t\t\t\t\t\tselectedQuestionDOM.innerHTML = `\r\n\t\t\t\t\t\t\t\t<div class=\"uk-margin\">\r\n\t\t\t\t\t\t\t\t\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Question Name</label>\r\n\t\t\t\t\t\t\t\t\t<div class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\tid=\"short_text_input\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"uk-input\" \r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Question Name\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"uk-margin\">\r\n\t\t\t\t\t\t\t\t\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Content</label>\r\n\t\t\t\t\t\t\t\t\t<div class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"uk-input\" \r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Short answer text\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\thiddenElement.innerHTML = `\r\n\t\t\t\t\t\t\t\t<h1 id=\"${ formElement['key'] }_title_preview\" class=\"question-preview\">Untitled Question</h1>\r\n\t\t\t\t\t\t\t\t<span class=\"short-answer-text\">Short answer text</span>\r\n\t\t\t\t\t\t\t\t<div style=\"border-bottom: 1px dotted rgba(0,0,0,0.38);margin-top: -10px;\"></div>\r\n\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\tif (formElement['placeholder'] != '') {\r\n\t\t\t\t\t\t\t\t// populate DOM of previous data\r\n\t\t\t\t\t\t\t\tvar shortTextInput = document.querySelector(`#${ formElement['key'] } #short_text_input`);\r\n\t\t\t\t\t\t\t\tvar titlePreview = document.getElementById(`${ formElement['key'] }_title_preview`);\r\n\t\t\t\t\t\t\t\tshortTextInput.value = formElement['placeholder'];\r\n\t\t\t\t\t\t\t\ttitlePreview.innerHTML = formElement['placeholder'];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// assign keyup event for new textInput\r\n\t\t\t\t\t\t\tvar shortTextInput = document.querySelector(`#${ formElement['key'] } #short_text_input`);\r\n\t\t\t\t\t\t\tvar titlePreview = document.getElementById(`${ formElement['key'] }_title_preview`);\r\n\t\t\t\t\t\t\tshortTextInput.addEventListener('keyup', (event) => {\r\n\t\t\t\t\t\t\t\t// assign text to preview text\r\n\t\t\t\t\t\t\t\ttitlePreview.innerHTML = event.target.value;\r\n\t\t\t\t\t\t\t\tformElement['label'] = event.target.value;\r\n\t\t\t\t\t\t\t\tformElement['placeholder'] = event.target.value;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t// Textarea selection\r\n\t\t\t\t\t\tcase 'paragraph':\r\n\t\t\t\t\t\t\tformElement['controlType'] = 'paragraph';\r\n\t\t\t\t\t\t\tselectedType.placeholder = 'Paragraph';\r\n\t\t\t\t\t\t\tselectedQuestionDOM.innerHTML = `\r\n\t\t\t\t\t\t\t\t<div class=\"uk-margin\">\r\n\t\t\t\t\t\t\t\t\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Question Name</label>\r\n\t\t\t\t\t\t\t\t\t<div class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\tid=\"short_text_input\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"uk-input\" \r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Question Name\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"uk-margin\">\r\n\t\t\t\t\t\t\t\t\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Content</label>\r\n\t\t\t\t\t\t\t\t\t<div class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"uk-input\" \r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Long answer text\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\thiddenElement.innerHTML = `\r\n\t\t\t\t\t\t\t\t<h1 id=\"${ formElement['key'] }_title_preview\" class=\"question-preview\">Untitled Question</h1>\r\n\t\t\t\t\t\t\t\t<span class=\"short-answer-text\">Long answer text</span>\r\n\t\t\t\t\t\t\t\t<div style=\"border-bottom: 1px dotted rgba(0,0,0,0.38);margin-top: -10px;\"></div>\r\n\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\tif (formElement['placeholder'] != '') {\r\n\t\t\t\t\t\t\t\t// populate DOM of previous data\r\n\t\t\t\t\t\t\t\tvar shortTextInput = document.querySelector(`#${ formElement['key'] } #short_text_input`);\r\n\t\t\t\t\t\t\t\tvar titlePreview = document.getElementById(`${ formElement['key'] }_title_preview`);\r\n\t\t\t\t\t\t\t\tshortTextInput.value = formElement['placeholder'];\r\n\t\t\t\t\t\t\t\ttitlePreview.innerHTML = formElement['placeholder'];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// assign keyup event for new textInput\r\n\t\t\t\t\t\t\tvar shortTextInput = document.querySelector(`#${ formElement['key'] } #short_text_input`);\r\n\t\t\t\t\t\t\tvar titlePreview = document.getElementById(`${ formElement['key'] }_title_preview`);\r\n\t\t\t\t\t\t\tshortTextInput.addEventListener('keyup', (event) => {\r\n\t\t\t\t\t\t\t\t// assign text to preview text\r\n\t\t\t\t\t\t\t\ttitlePreview.innerHTML = event.target.value;\r\n\t\t\t\t\t\t\t\tformElement['label'] = event.target.value;\r\n\t\t\t\t\t\t\t\tformElement['placeholder'] = event.target.value;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t// Radio button selection \r\n\t\t\t\t\t\tcase 'multiple_choice':\r\n\t\t\t\t\t\t\tfunction editPreviewOptions(innetText) {\r\n\t\t\t\t\t\t\t\tvar previewOptions = document.querySelector(`#${ formElement['key'] } #previewOptions`);\r\n\t\t\t\t\t\t\t\tpreviewOptions.innerHTML = ``;\r\n\t\t\t\t\t\t\t\tformElement['options'].forEach((element, index) => {\r\n\t\t\t\t\t\t\t\t\tvar div = document.createElement('div');\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t\tvar label = document.createElement('label');\r\n\t\t\t\t\t\t\t\t\tlabel.innerHTML = innetText;\r\n\t\t\t\t\t\t\t\t\tpreviewOptions.insertBefore(label, span);\r\n\t\t\t\t\t\t\t\t\tlabel.classList.add('input-preview-icon');\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t\tvar span = document.createElement('span');\r\n\t\t\t\t\t\t\t\t\tif (element['value'] != '') {\r\n\t\t\t\t\t\t\t\t\t\tspan.innerHTML = `${ element['value'] }`;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tspan.innerHTML = `Option ${ index + 1 }`;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tspan.style.display = 'block';\r\n\t\t\t\t\t\t\t\t\tspan.style.marginBottom = '-20px';\r\n\t\t\t\t\t\t\t\t\tspan.style.marginTop = '-25px';\r\n\t\t\t\t\t\t\t\t\tspan.style.paddingLeft = '25px';\r\n\t\t\t\t\t\t\t\t\tspan.classList.add('short-answer-text');\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t\tdiv.appendChild(label);\r\n\t\t\t\t\t\t\t\t\tdiv.appendChild(span);\r\n\t\t\t\t\t\t\t\t\tpreviewOptions.appendChild(div);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tformElement['controlType'] = 'multiple_choice';\r\n\t\t\t\t\t\t\tselectedType.placeholder = 'Multiple Choice';\r\n\t\t\t\t\t\t\tif (formElement['options']) {\r\n\t\t\t\t\t\t\t\tselectedQuestionDOM.innerHTML = `\r\n\t\t\t\t\t\t\t\t\t<div class=\"uk-margin\">\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Question Name</label>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"short_text_input\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"uk-input\" \r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Question Name\">\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"uk-margin\">\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Content</label>\r\n\t\t\t\t\t\t\t\t\t\t<div id=\"${ formElement['key'] }_options\" class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"uk-inline\" style=\"display:block;padding-top:10px;\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"input-icon\" style=\"padding-top:10px;\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input class=\"uk-radio\" type=\"radio\" disabled>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span id=\"add_content\" style=\"padding-left:40px;\">Add Option</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style=\"border-bottom: 1px dotted rgba(0,0,0,0.38);width: 80px;margin-left: 40px;\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\t\thiddenElement.innerHTML = `\r\n\t\t\t\t\t\t\t\t\t<h1 id=\"${ formElement['key'] }_title_preview\" class=\"question-preview\">Untitled Question</h1>\r\n\t\t\t\t\t\t\t\t\t<div id=\"previewOptions\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t`;\r\n\r\n\t\t\t\t\t\t\t\tvar options = document.getElementById(`${ formElement['key'] }_options`);\r\n\t\t\t\t\t\t\t\tformElement['options'].forEach((element, index) => {\r\n\t\t\t\t\t\t\t\t\tvar newOption = document.createElement('div');\r\n\t\t\t\t\t\t\t\t\tnewOption.innerHTML = `\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"input-icon\"><input class=\"uk-radio\" type=\"radio\" disabled></label>\r\n\t\t\t\t\t\t\t\t\t\t<i id=\"${ element['key'] }_removeOption\" class=\"material-icons input-remove\" uk-tooltip=\"title: Remove; pos: bottom\">clear</i>\t\r\n\t\t\t\t\t\t\t\t\t\t<input id=\"${ element['key'] }_option\" style=\"padding-left:40px;\" class=\"uk-input\" type=\"text\">\r\n\t\t\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\t\t\toptions.insertBefore(newOption, options.childNodes[index]); \r\n\t\t\t\t\t\t\t\t\tdocument.getElementById(`${ element['key'] }_option`).value = element['value'];\r\n\t\t\t\t\t\t\t\t\tdocument.getElementById(`${ element['key'] }_option`).placeholder = ` Option ${ index + 1 }`;\r\n\t\t\t\t\t\t\t\t\tdocument.getElementById(`${ element['key'] }_option`).addEventListener('keyup', (event) => {\r\n\t\t\t\t\t\t\t\t\t\telement['value'] = event.target.value;\r\n\t\t\t\t\t\t\t\t\t\teditPreviewOptions(`<input class=\"uk-radio\" type=\"radio\" disabled>`);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t// set CSS properties to parent eliment\r\n\t\t\t\t\t\t\t\t\tvar childOptionsContent = document.getElementById(`${ element['key'] }_removeOption`);\r\n\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.id = element['key'];\r\n\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.classList.add('uk-inline');\r\n\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.style.display = 'block';\r\n\t\t\t\t\t\t\t\t\tchildOptionsContent.addEventListener('click', (event) => {\r\n\t\t\t\t\t\t\t\t\t\tformElement['options'].splice(index, 1);\r\n\t\t\t\t\t\t\t\t\t\t\tvar currentOptionDiv = event.target.parentElement;\r\n\t\t\t\t\t\t\t\t\t\t\t// remove element from DOM\r\n\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(`${ formElement['key'] }_options`).removeChild(currentOptionDiv);\r\n\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions(`<input class=\"uk-radio\" type=\"radio\" disabled>`);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\teditPreviewOptions(`<input class=\"uk-radio\" type=\"radio\" disabled>`);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tvar rawOption = {\r\n\t\t\t\t\t\t\t\t\tkey: Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5),\r\n\t\t\t\t\t\t\t\t\tvalue: ''\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t// create new attribute options in formElement\r\n\t\t\t\t\t\t\t\tformElement['options'] = [];\r\n\t\t\t\t\t\t\t\tformElement['options'].push(rawOption);\r\n\t\r\n\t\t\t\t\t\t\t\tselectedQuestionDOM.innerHTML = `\r\n\t\t\t\t\t\t\t\t\t<div class=\"uk-margin\">\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Question Name</label>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"short_text_input\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"uk-input\" \r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Question Name\">\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"uk-margin\">\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Content</label>\r\n\t\t\t\t\t\t\t\t\t\t<div id=\"${ formElement['key'] }_options\" class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div id=\"${ rawOption['key'] }\" class=\"uk-inline\" style=\"display:block;\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"input-icon\"><input class=\"uk-radio\" type=\"radio\" disabled></label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i id=\"${ rawOption['key'] }_removeOption\" class=\"material-icons input-remove\" uk-tooltip=\"title: Remove; pos: bottom\">clear</i>\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"${ rawOption['key'] }_option\" style=\"padding-left:40px;\" class=\"uk-input\" type=\"text\">\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"uk-inline\" style=\"display:block;padding-top:10px;\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"input-icon\" style=\"padding-top:10px;\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input class=\"uk-radio\" type=\"radio\" disabled>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span id=\"add_content\" style=\"padding-left:40px;\">Add Option</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style=\"border-bottom: 1px dotted rgba(0,0,0,0.38);width: 80px;margin-left: 40px;\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\t\thiddenElement.innerHTML = `\r\n\t\t\t\t\t\t\t\t\t<h1 id=\"${ formElement['key'] }_title_preview\" class=\"question-preview\">Untitled Question</h1>\r\n\t\t\t\t\t\t\t\t\t<div id=\"previewOptions\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\t\teditPreviewOptions(`<input class=\"uk-radio\" type=\"radio\" disabled>`);\r\n\t\r\n\t\t\t\t\t\t\t\tvar rawOptionField = document.getElementById(`${ rawOption['key'] }_option`);\r\n\t\t\t\t\t\t\t\trawOptionField.placeholder = 'Option 1';\r\n\t\t\t\t\t\t\t\trawOptionField.addEventListener('keyup', (event) => {\r\n\t\t\t\t\t\t\t\t\tformElement['options'].forEach(element => {\r\n\t\t\t\t\t\t\t\t\t\tif (element['key'] == getByKey(event.target.id)) {\r\n\t\t\t\t\t\t\t\t\t\t\telement['value'] = event.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions(`<input class=\"uk-radio\" type=\"radio\" disabled>`);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\t\t\t\tvar removeOption = document.getElementById(`${ rawOption['key'] }_removeOption`);\r\n\t\t\t\t\t\t\t\tremoveOption.addEventListener('click', (event) => {\r\n\t\t\t\t\t\t\t\t\tformElement['options'].forEach((element, index) => {\r\n\t\t\t\t\t\t\t\t\t\tif (element['key'] == getByKey(event.target.id)) {\r\n\t\t\t\t\t\t\t\t\t\t\t// remove option\r\n\t\t\t\t\t\t\t\t\t\t\tformElement['options'].splice(index, 1);\r\n\t\t\t\t\t\t\t\t\t\t\tvar currentOptionDiv = event.target.parentElement;\r\n\t\t\t\t\t\t\t\t\t\t\t// remove element from DOM\r\n\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(`${ formElement['key'] }_options`).removeChild(currentOptionDiv);\r\n\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions(`<input class=\"uk-radio\" type=\"radio\" disabled>`);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// bind previous options to DOM if present\r\n\t\t\t\t\t\t\tvar radioBtn_title = document.querySelector(`#${ formElement['key'] } #short_text_input`);\r\n\t\t\t\t\t\t\tvar radioBtn_title_preview = document.getElementById(`${ formElement['key'] }_title_preview`);\r\n\t\t\t\t\t\t\tif (formElement['placeholder'] != '') {\r\n\t\t\t\t\t\t\t\tradioBtn_title.value = formElement['placeholder'];\r\n\t\t\t\t\t\t\t\tradioBtn_title.placeholder = 'Question Name';\r\n\t\t\t\t\t\t\t\tradioBtn_title_preview.innerHTML = formElement['placeholder'];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tradioBtn_title.value = '';\r\n\t\t\t\t\t\t\t\tradioBtn_title.placeholder = 'Question Name';\r\n\t\t\t\t\t\t\t\tradioBtn_title_preview.innerHTML = 'Untitled Question'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\teditPreviewOptions(`<input class=\"uk-radio\" type=\"radio\" disabled>`);\r\n\r\n\t\t\t\t\t\t\t// assign keyup event for new textInput\r\n\t\t\t\t\t\t\tvar shortTextInput = document.querySelector(`#${ formElement['key'] } #short_text_input`);\r\n\t\t\t\t\t\t\tvar titlePreview = document.getElementById(`${ formElement['key'] }_title_preview`);\r\n\t\t\t\t\t\t\tshortTextInput.addEventListener('keyup', (event) => {\r\n\t\t\t\t\t\t\t\t// assign text to preview text\r\n\t\t\t\t\t\t\t\ttitlePreview.innerHTML = event.target.value;\r\n\t\t\t\t\t\t\t\tformElement['label'] = event.target.value;\r\n\t\t\t\t\t\t\t\tformElement['placeholder'] = event.target.value;\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tvar radioBtn_addOptions = document.querySelector(`#${ formElement['key'] } #add_content`);\r\n\t\t\t\t\t\t\tradioBtn_addOptions.addEventListener('click', (event) => {\r\n\t\t\t\t\t\t\t\tvar rawOption = {\r\n\t\t\t\t\t\t\t\t\tkey: Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5),\r\n\t\t\t\t\t\t\t\t\tvalue: ''\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tformElement['options'].push(rawOption);\r\n\r\n\t\t\t\t\t\t\t\t// bind new option to DOM\r\n\t\t\t\t\t\t\t\tvar options = document.getElementById(`${ formElement['key'] }_options`);\r\n\t\t\t\t\t\t\t\tvar newOption = document.createElement('div');\r\n\t\t\t\t\t\t\t\tnewOption.innerHTML = `\r\n\t\t\t\t\t\t\t\t\t<label class=\"input-icon\"><input class=\"uk-radio\" type=\"radio\" disabled></label>\r\n\t\t\t\t\t\t\t\t\t<i id=\"${ rawOption['key'] }_removeOption\" class=\"material-icons input-remove\" uk-tooltip=\"title: Remove; pos: bottom\">clear</i>\t\r\n\t\t\t\t\t\t\t\t\t<input id=\"${ rawOption['key'] }_option\" style=\"padding-left:40px;\" class=\"uk-input\" type=\"text\">\r\n\t\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\t\t// set CSS properties to parent eliment\r\n\t\t\t\t\t\t\t\toptions.insertBefore(newOption, options.childNodes[formElement['options'].length]); \r\n\t\t\t\t\t\t\t\tdocument.getElementById(`${ rawOption['key'] }_option`).placeholder = `Option ${ formElement['options'].length }`;\r\n\r\n\t\t\t\t\t\t\t\tvar childOptionsContent = document.getElementById(`${ rawOption['key'] }_removeOption`);\r\n\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.id = rawOption['key'];\r\n\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.classList.add('uk-inline');\r\n\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.style.display = 'block';\r\n\t\t\t\t\t\t\t\teditPreviewOptions(`<input class=\"uk-radio\" type=\"radio\" disabled>`);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// assign event handkler to pass data to the array\r\n\t\t\t\t\t\t\t\tvar radioBtn_option = document.getElementById(`${ rawOption['key'] }_option`);\r\n\t\t\t\t\t\t\t\tradioBtn_option.addEventListener('keyup', (event) => {\r\n\t\t\t\t\t\t\t\t\tformElement['options'].forEach(element => {\r\n\t\t\t\t\t\t\t\t\t\tif (element['key'] == getByKey(event.target.id)) {\r\n\t\t\t\t\t\t\t\t\t\t\telement['value'] = event.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions(`<input class=\"uk-radio\" type=\"radio\" disabled>`);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t// add click event handler to remove element\r\n\t\t\t\t\t\t\t\tvar radioBtn_remove = document.getElementById(`${ rawOption['key'] }_removeOption`);\r\n\t\t\t\t\t\t\t\tradioBtn_remove.addEventListener('click', (event) => {\r\n\t\t\t\t\t\t\t\t\tformElement['options'].forEach((element, index) => {\r\n\t\t\t\t\t\t\t\t\t\tif (element['key'] == getByKey(event.target.id)) {\r\n\t\t\t\t\t\t\t\t\t\t\t// remove option\r\n\t\t\t\t\t\t\t\t\t\t\tformElement['options'].splice(index, 1);\r\n\t\t\t\t\t\t\t\t\t\t\tvar currentOptionDiv = event.target.parentElement;\r\n\t\t\t\t\t\t\t\t\t\t\t// remove element from DOM\r\n\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(`${ formElement['key'] }_options`).removeChild(currentOptionDiv);\r\n\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions(`<input class=\"uk-radio\" type=\"radio\" disabled>`);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t// Checkbox selection\r\n\t\t\t\t\t\tcase 'checkbox':\r\n\t\t\t\t\t\t\tfunction editPreviewOptions(innetText) {\r\n\t\t\t\t\t\t\t\tvar previewOptions = document.querySelector(`#${ formElement['key'] } #previewOptions`);\r\n\t\t\t\t\t\t\t\tpreviewOptions.innerHTML = ``;\r\n\t\t\t\t\t\t\t\tformElement['options'].forEach((element, index) => {\r\n\t\t\t\t\t\t\t\t\tvar div = document.createElement('div');\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t\tvar label = document.createElement('label');\r\n\t\t\t\t\t\t\t\t\tlabel.innerHTML = innetText;\r\n\t\t\t\t\t\t\t\t\tpreviewOptions.insertBefore(label, span);\r\n\t\t\t\t\t\t\t\t\tlabel.classList.add('input-preview-icon');\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t\tvar span = document.createElement('span');\r\n\t\t\t\t\t\t\t\t\tif (element['value'] != '') {\r\n\t\t\t\t\t\t\t\t\t\tspan.innerHTML = `${ element['value'] }`;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tspan.innerHTML = `Option ${ index + 1 }`;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tspan.style.display = 'block';\r\n\t\t\t\t\t\t\t\t\tspan.style.marginBottom = '-20px';\r\n\t\t\t\t\t\t\t\t\tspan.style.marginTop = '-25px';\r\n\t\t\t\t\t\t\t\t\tspan.style.paddingLeft = '25px';\r\n\t\t\t\t\t\t\t\t\tspan.classList.add('short-answer-text');\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t\tdiv.appendChild(label);\r\n\t\t\t\t\t\t\t\t\tdiv.appendChild(span);\r\n\t\t\t\t\t\t\t\t\tpreviewOptions.appendChild(div);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tformElement['controlType'] = 'checkbox';\r\n\t\t\t\t\t\t\tselectedType.placeholder = 'Checkbox';\r\n\t\t\t\t\t\t\tif (formElement['options']) {\r\n\t\t\t\t\t\t\t\tselectedQuestionDOM.innerHTML = `\r\n\t\t\t\t\t\t\t\t\t<div class=\"uk-margin\">\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Question Name</label>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"short_text_input\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"uk-input\" \r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Question Name\">\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"uk-margin\">\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Content</label>\r\n\t\t\t\t\t\t\t\t\t\t<div id=\"${ formElement['key'] }_options\" class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"uk-inline\" style=\"display:block;padding-top:10px;\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"input-icon\" style=\"padding-top:10px;\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input class=\"uk-checkbox\" type=\"checkbox\" disabled>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span id=\"add_content\" style=\"padding-left:40px;\">Add Option</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style=\"border-bottom: 1px dotted rgba(0,0,0,0.38);width: 80px;margin-left: 40px;\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\t\thiddenElement.innerHTML = `\r\n\t\t\t\t\t\t\t\t\t<h1 id=\"${ formElement['key'] }_title_preview\" class=\"question-preview\">Untitled Question</h1>\r\n\t\t\t\t\t\t\t\t\t<div id=\"previewOptions\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar options = document.getElementById(`${ formElement['key'] }_options`);\r\n\t\t\t\t\t\t\t\tformElement['options'].forEach((element, index) => {\r\n\t\t\t\t\t\t\t\t\tvar newOption = document.createElement('div');\r\n\t\t\t\t\t\t\t\t\tnewOption.innerHTML = `\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"input-icon\"><input class=\"uk-checkbox\" type=\"checkbox\" disabled></label>\r\n\t\t\t\t\t\t\t\t\t\t<i id=\"${ element['key'] }_removeOption\" class=\"material-icons input-remove\" uk-tooltip=\"title: Remove; pos: bottom\">clear</i>\t\r\n\t\t\t\t\t\t\t\t\t\t<input id=\"${ element['key'] }_option\" style=\"padding-left:40px;\" class=\"uk-input\" type=\"text\">\r\n\t\t\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\t\t\toptions.insertBefore(newOption, options.childNodes[index]); \r\n\t\t\t\t\t\t\t\t\tdocument.getElementById(`${ element['key'] }_option`).value = element['value'];\r\n\t\t\t\t\t\t\t\t\tdocument.getElementById(`${ element['key'] }_option`).placeholder = ` Option ${ index + 1 }`;\r\n\t\t\t\t\t\t\t\t\tdocument.getElementById(`${ element['key'] }_option`).addEventListener('keyup', (event) => {\r\n\t\t\t\t\t\t\t\t\t\telement['value'] = event.target.value;\r\n\t\t\t\t\t\t\t\t\t\teditPreviewOptions(`<input class=\"uk-checkbox\" type=\"checkbox\" disabled>`);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t// set CSS properties to parent eliment\r\n\t\t\t\t\t\t\t\t\tvar childOptionsContent = document.getElementById(`${ element['key'] }_removeOption`);\r\n\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.id = element['key'];\r\n\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.classList.add('uk-inline');\r\n\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.style.display = 'block';\r\n\t\t\t\t\t\t\t\t\tchildOptionsContent.addEventListener('click', (event) => {\r\n\t\t\t\t\t\t\t\t\t\tformElement['options'].splice(index, 1);\r\n\t\t\t\t\t\t\t\t\t\t\tvar currentOptionDiv = event.target.parentElement;\r\n\t\t\t\t\t\t\t\t\t\t\t// remove element from DOM\r\n\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(`${ formElement['key'] }_options`).removeChild(currentOptionDiv);\r\n\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions(`<input class=\"uk-checkbox\" type=\"checkbox\" disabled>`);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\teditPreviewOptions(`<input class=\"uk-checkbox\" type=\"checkbox\" disabled>`);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tvar rawOption = {\r\n\t\t\t\t\t\t\t\t\tkey: Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5),\r\n\t\t\t\t\t\t\t\t\tvalue: ''\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t// create new attribute options in formElement\r\n\t\t\t\t\t\t\t\tformElement['options'] = [];\r\n\t\t\t\t\t\t\t\tformElement['options'].push(rawOption);\r\n\t\r\n\t\t\t\t\t\t\t\tselectedQuestionDOM.innerHTML = `\r\n\t\t\t\t\t\t\t\t\t<div class=\"uk-margin\">\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Question Name</label>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"short_text_input\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"uk-input\" \r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Question Name\">\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"uk-margin\">\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Content</label>\r\n\t\t\t\t\t\t\t\t\t\t<div id=\"${ formElement['key'] }_options\" class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div id=\"${ rawOption['key'] }\" class=\"uk-inline\" style=\"display:block;\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"input-icon\"><input class=\"uk-checkbox\" type=\"checkbox\" disabled></label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i id=\"${ rawOption['key'] }_removeOption\" class=\"material-icons input-remove\" uk-tooltip=\"title: Remove; pos: bottom\">clear</i>\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"${ rawOption['key'] }_option\" style=\"padding-left:40px;\" class=\"uk-input\" type=\"text\">\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"uk-inline\" style=\"display:block;padding-top:10px;\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"input-icon\" style=\"padding-top:10px;\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input class=\"uk-checkbox\" type=\"checkbox\" disabled>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span id=\"add_content\" style=\"padding-left:40px;\">Add Option</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style=\"border-bottom: 1px dotted rgba(0,0,0,0.38);width: 80px;margin-left: 40px;\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\t\thiddenElement.innerHTML = `\r\n\t\t\t\t\t\t\t\t\t<h1 id=\"${ formElement['key'] }_title_preview\" class=\"question-preview\">Untitled Question</h1>\r\n\t\t\t\t\t\t\t\t\t<div id=\"previewOptions\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\t\teditPreviewOptions(`<input class=\"uk-checkbox\" type=\"checkbox\" disabled>`);\r\n\t\r\n\t\t\t\t\t\t\t\tvar rawOptionField = document.getElementById(`${ rawOption['key'] }_option`);\r\n\t\t\t\t\t\t\t\trawOptionField.placeholder = 'Option 1';\r\n\t\t\t\t\t\t\t\trawOptionField.addEventListener('keyup', (event) => {\r\n\t\t\t\t\t\t\t\t\tformElement['options'].forEach(element => {\r\n\t\t\t\t\t\t\t\t\t\tif (element['key'] == getByKey(event.target.id)) {\r\n\t\t\t\t\t\t\t\t\t\t\telement['value'] = event.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions(`<input class=\"uk-checkbox\" type=\"checkbox\" disabled>`);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\t\t\t\tvar removeOption = document.getElementById(`${ rawOption['key'] }_removeOption`);\r\n\t\t\t\t\t\t\t\tremoveOption.addEventListener('click', (event) => {\r\n\t\t\t\t\t\t\t\t\tformElement['options'].forEach((element, index) => {\r\n\t\t\t\t\t\t\t\t\t\tif (element['key'] == getByKey(event.target.id)) {\r\n\t\t\t\t\t\t\t\t\t\t\t// remove option\r\n\t\t\t\t\t\t\t\t\t\t\tformElement['options'].splice(index, 1);\r\n\t\t\t\t\t\t\t\t\t\t\tvar currentOptionDiv = event.target.parentElement;\r\n\t\t\t\t\t\t\t\t\t\t\t// remove element from DOM\r\n\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(`${ formElement['key'] }_options`).removeChild(currentOptionDiv);\r\n\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions(`<input class=\"uk-checkbox\" type=\"checkbox\" disabled>`);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// bind previous options to DOM if present\r\n\t\t\t\t\t\t\tvar checkbox_title = document.querySelector(`#${ formElement['key'] } #short_text_input`);\r\n\t\t\t\t\t\t\tvar checkbox_title_preview = document.getElementById(`${ formElement['key'] }_title_preview`);\r\n\t\t\t\t\t\t\tif (formElement['placeholder'] != '') {\r\n\t\t\t\t\t\t\t\tcheckbox_title.value = formElement['placeholder'];\r\n\t\t\t\t\t\t\t\tcheckbox_title_preview.innerHTML = formElement['placeholder'];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcheckbox_title.value = '';\r\n\t\t\t\t\t\t\t\tcheckbox_title.placeholder = 'Question Name';\r\n\t\t\t\t\t\t\t\tcheckbox_title_preview.innerHTML = 'Untitled Question'\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\teditPreviewOptions(`<input class=\"uk-checkbox\" type=\"checkbox\" disabled>`);\r\n\r\n\t\t\t\t\t\t\t// assign keyup event for new textInput\r\n\t\t\t\t\t\t\tvar shortTextInput = document.querySelector(`#${ formElement['key'] } #short_text_input`);\r\n\t\t\t\t\t\t\tvar titlePreview = document.getElementById(`${ formElement['key'] }_title_preview`);\r\n\t\t\t\t\t\t\tshortTextInput.addEventListener('keyup', (event) => {\r\n\t\t\t\t\t\t\t\t// assign text to preview text\r\n\t\t\t\t\t\t\t\ttitlePreview.innerHTML = event.target.value;\r\n\t\t\t\t\t\t\t\tformElement['label'] = event.target.value;\r\n\t\t\t\t\t\t\t\tformElement['placeholder'] = event.target.value;\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tvar checkbox_addOptions = document.querySelector(`#${ formElement['key'] } #add_content`);\r\n\t\t\t\t\t\t\tcheckbox_addOptions.addEventListener('click', (event) => {\r\n\t\t\t\t\t\t\t\tvar rawOption = {\r\n\t\t\t\t\t\t\t\t\tkey: Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5),\r\n\t\t\t\t\t\t\t\t\tvalue: ''\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tformElement['options'].push(rawOption);\r\n\r\n\t\t\t\t\t\t\t\t// bind new option to DOM\r\n\t\t\t\t\t\t\t\tvar options = document.getElementById(`${ formElement['key'] }_options`);\r\n\t\t\t\t\t\t\t\tvar newOption = document.createElement('div');\r\n\t\t\t\t\t\t\t\tnewOption.innerHTML = `\r\n\t\t\t\t\t\t\t\t\t<label class=\"input-icon\"><input class=\"uk-checkbox\" type=\"checkbox\" disabled></label>\r\n\t\t\t\t\t\t\t\t\t<i id=\"${ rawOption['key'] }_removeOption\" class=\"material-icons input-remove\" uk-tooltip=\"title: Remove; pos: bottom\">clear</i>\t\r\n\t\t\t\t\t\t\t\t\t<input id=\"${ rawOption['key'] }_option\" style=\"padding-left:40px;\" class=\"uk-input\" type=\"text\">\r\n\t\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\t\t// set CSS properties to parent eliment\r\n\t\t\t\t\t\t\t\toptions.insertBefore(newOption, options.childNodes[formElement['options'].length]); \r\n\t\t\t\t\t\t\t\tdocument.getElementById(`${ rawOption['key'] }_option`).placeholder = `Option ${ formElement['options'].length }`;\r\n\r\n\t\t\t\t\t\t\t\tvar childOptionsContent = document.getElementById(`${ rawOption['key'] }_removeOption`);\r\n\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.id = rawOption['key'];\r\n\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.classList.add('uk-inline');\r\n\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.style.display = 'block';\r\n\t\t\t\t\t\t\t\teditPreviewOptions(`<input class=\"uk-checkbox\" type=\"checkbox\" disabled>`);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// assign event handkler to pass data to the array\r\n\t\t\t\t\t\t\t\tvar checkbox_option = document.getElementById(`${ rawOption['key'] }_option`);\r\n\t\t\t\t\t\t\t\tcheckbox_option.addEventListener('keyup', (event) => {\r\n\t\t\t\t\t\t\t\t\tformElement['options'].forEach(element => {\r\n\t\t\t\t\t\t\t\t\t\tif (element['key'] == getByKey(event.target.id)) {\r\n\t\t\t\t\t\t\t\t\t\t\telement['value'] = event.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions(`<input class=\"uk-checkbox\" type=\"checkbox\" disabled>`);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t// add click event handler to remove element\r\n\t\t\t\t\t\t\t\tvar checkbox_remove = document.getElementById(`${ rawOption['key'] }_removeOption`);\r\n\t\t\t\t\t\t\t\tcheckbox_remove.addEventListener('click', (event) => {\r\n\t\t\t\t\t\t\t\t\tformElement['options'].forEach((element, index) => {\r\n\t\t\t\t\t\t\t\t\t\tif (element['key'] == getByKey(event.target.id)) {\r\n\t\t\t\t\t\t\t\t\t\t\t// remove option\r\n\t\t\t\t\t\t\t\t\t\t\tformElement['options'].splice(index, 1);\r\n\t\t\t\t\t\t\t\t\t\t\tvar currentOptionDiv = event.target.parentElement;\r\n\t\t\t\t\t\t\t\t\t\t\t// remove element from DOM\r\n\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(`${ formElement['key'] }_options`).removeChild(currentOptionDiv);\r\n\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions(`<input class=\"uk-checkbox\" type=\"checkbox\" disabled>`);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t// Dropdown selection\r\n\t\t\t\t\t\tcase 'dropdown':\r\n\t\t\t\t\t\t\tfunction editPreviewOptions() {\r\n\t\t\t\t\t\t\t\tvar previewOptions = document.querySelector(`#${ formElement['key'] } #previewOptions`);\r\n\t\t\t\t\t\t\t\tpreviewOptions.innerHTML = ``;\r\n\t\t\t\t\t\t\t\tformElement['options'].forEach((element, index) => {\r\n\t\t\t\t\t\t\t\t\tvar div = document.createElement('div');\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t\tvar label = document.createElement('label');\r\n\t\t\t\t\t\t\t\t\tlabel.innerHTML = `<spa>${ index + 1 }.</span>`;\r\n\t\t\t\t\t\t\t\t\tpreviewOptions.insertBefore(label, span);\r\n\t\t\t\t\t\t\t\t\tlabel.classList.add('input-preview-icon');\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t\tvar span = document.createElement('span');\r\n\t\t\t\t\t\t\t\t\tif (element['value'] != '') {\r\n\t\t\t\t\t\t\t\t\t\tspan.innerHTML = `${ element['value'] }`;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tspan.innerHTML = `Option ${ index + 1 }`;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tspan.style.display = 'block';\r\n\t\t\t\t\t\t\t\t\tspan.style.marginBottom = '-20px';\r\n\t\t\t\t\t\t\t\t\tspan.style.marginTop = '-25px';\r\n\t\t\t\t\t\t\t\t\tspan.style.paddingLeft = '25px';\r\n\t\t\t\t\t\t\t\t\tspan.classList.add('short-answer-text');\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t\tdiv.appendChild(label);\r\n\t\t\t\t\t\t\t\t\tdiv.appendChild(span);\r\n\t\t\t\t\t\t\t\t\tpreviewOptions.appendChild(div);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tformElement['controlType'] = 'dropdown';\r\n\t\t\t\t\t\t\tselectedType.placeholder = 'Dropdown';\r\n\t\t\t\t\t\t\tif (formElement['options']) {\r\n\t\t\t\t\t\t\t\tselectedQuestionDOM.innerHTML = `\r\n\t\t\t\t\t\t\t\t\t<div class=\"uk-margin\">\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Question Name</label>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"short_text_input\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"uk-input\" \r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Question Name\">\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"uk-margin\">\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Content</label>\r\n\t\t\t\t\t\t\t\t\t\t<div id=\"${ formElement['key'] }_options\" class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"uk-inline\" style=\"display:block;padding-top:10px;\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"input-icon\" style=\"padding-top:10px;\"></label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span id=\"add_content\" style=\"padding-left:40px;\">Add Option</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style=\"border-bottom: 1px dotted rgba(0,0,0,0.38);width: 80px;margin-left: 40px;\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\t\thiddenElement.innerHTML = `\r\n\t\t\t\t\t\t\t\t\t<h1 id=\"${ formElement['key'] }_title_preview\" class=\"question-preview\">Untitled Question</h1>\r\n\t\t\t\t\t\t\t\t\t<div id=\"previewOptions\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tvar options = document.getElementById(`${ formElement['key'] }_options`);\r\n\t\t\t\t\t\t\t\tformElement['options'].forEach((element, index) => {\r\n\t\t\t\t\t\t\t\t\tvar newOption = document.createElement('div');\r\n\t\t\t\t\t\t\t\t\tnewOption.innerHTML = `\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"input-icon\"></label>\r\n\t\t\t\t\t\t\t\t\t\t<i id=\"${ element['key'] }_removeOption\" class=\"material-icons input-remove\" uk-tooltip=\"title: Remove; pos: bottom\">clear</i>\t\r\n\t\t\t\t\t\t\t\t\t\t<input id=\"${ element['key'] }_option\" style=\"padding-left:40px;\" class=\"uk-input\" type=\"text\">\r\n\t\t\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\t\t\toptions.insertBefore(newOption, options.childNodes[index]); \r\n\t\t\t\t\t\t\t\t\tdocument.getElementById(`${ element['key'] }_option`).value = element['value'];\r\n\t\t\t\t\t\t\t\t\tdocument.getElementById(`${ element['key'] }_option`).placeholder = ` Option ${ index + 1 }`;\r\n\t\t\t\t\t\t\t\t\tdocument.getElementById(`${ element['key'] }_option`).addEventListener('keyup', (event) => {\r\n\t\t\t\t\t\t\t\t\t\telement['value'] = event.target.value;\r\n\t\t\t\t\t\t\t\t\t\teditPreviewOptions();\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t// set CSS properties to parent eliment\r\n\t\t\t\t\t\t\t\t\tvar childOptionsContent = document.getElementById(`${ element['key'] }_removeOption`);\r\n\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.id = element['key'];\r\n\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.classList.add('uk-inline');\r\n\t\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.style.display = 'block';\r\n\t\t\t\t\t\t\t\t\tchildOptionsContent.addEventListener('click', (event) => {\r\n\t\t\t\t\t\t\t\t\t\tformElement['options'].splice(index, 1);\r\n\t\t\t\t\t\t\t\t\t\t\tvar currentOptionDiv = event.target.parentElement;\r\n\t\t\t\t\t\t\t\t\t\t\t// remove element from DOM\r\n\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(`${ formElement['key'] }_options`).removeChild(currentOptionDiv);\r\n\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions();\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\teditPreviewOptions();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tvar rawOption = {\r\n\t\t\t\t\t\t\t\t\tkey: Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5),\r\n\t\t\t\t\t\t\t\t\tvalue: ''\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t// create new attribute options in formElement\r\n\t\t\t\t\t\t\t\tformElement['options'] = [];\r\n\t\t\t\t\t\t\t\tformElement['options'].push(rawOption);\r\n\t\r\n\t\t\t\t\t\t\t\tselectedQuestionDOM.innerHTML = `\r\n\t\t\t\t\t\t\t\t\t<div class=\"uk-margin\">\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Question Name</label>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"short_text_input\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"uk-input\" \r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Question Name\">\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"uk-margin\">\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Content</label>\r\n\t\t\t\t\t\t\t\t\t\t<div id=\"${ formElement['key'] }_options\" class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div id=\"${ rawOption['key'] }\" class=\"uk-inline\" style=\"display:block;\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"input-icon\"></label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i id=\"${ rawOption['key'] }_removeOption\" class=\"material-icons input-remove\" uk-tooltip=\"title: Remove; pos: bottom\">clear</i>\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"${ rawOption['key'] }_option\" style=\"padding-left:40px;\" class=\"uk-input\" type=\"text\">\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"uk-inline\" style=\"display:block;padding-top:10px;\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"input-icon\" style=\"padding-top:10px;\"></label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span id=\"add_content\" style=\"padding-left:40px;\">Add Option</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style=\"border-bottom: 1px dotted rgba(0,0,0,0.38);width: 80px;margin-left: 40px;\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\t\thiddenElement.innerHTML = `\r\n\t\t\t\t\t\t\t\t\t<h1 id=\"${ formElement['key'] }_title_preview\" class=\"question-preview\">Untitled Question</h1>\r\n\t\t\t\t\t\t\t\t\t<div id=\"previewOptions\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\t\teditPreviewOptions();\r\n\t\r\n\t\t\t\t\t\t\t\tvar rawOptionField = document.getElementById(`${ rawOption['key'] }_option`);\r\n\t\t\t\t\t\t\t\trawOptionField.placeholder = 'Option 1';\r\n\t\t\t\t\t\t\t\trawOptionField.addEventListener('keyup', (event) => {\r\n\t\t\t\t\t\t\t\t\tformElement['options'].forEach(element => {\r\n\t\t\t\t\t\t\t\t\t\tif (element['key'] == getByKey(event.target.id)) {\r\n\t\t\t\t\t\t\t\t\t\t\telement['value'] = event.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions();\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\t\t\t\tvar removeOption = document.getElementById(`${ rawOption['key'] }_removeOption`);\r\n\t\t\t\t\t\t\t\tremoveOption.addEventListener('click', (event) => {\r\n\t\t\t\t\t\t\t\t\tformElement['options'].forEach((element, index) => {\r\n\t\t\t\t\t\t\t\t\t\tif (element['key'] == getByKey(event.target.id)) {\r\n\t\t\t\t\t\t\t\t\t\t\t// remove option\r\n\t\t\t\t\t\t\t\t\t\t\tformElement['options'].splice(index, 1);\r\n\t\t\t\t\t\t\t\t\t\t\tvar currentOptionDiv = event.target.parentElement;\r\n\t\t\t\t\t\t\t\t\t\t\t// remove element from DOM\r\n\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(`${ formElement['key'] }_options`).removeChild(currentOptionDiv);\r\n\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions();\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// bind previous options to DOM if present\r\n\t\t\t\t\t\t\tvar dropDown_title = document.querySelector(`#${ formElement['key'] } #short_text_input`);\r\n\t\t\t\t\t\t\tvar dropDown_title_preview = document.getElementById(`${ formElement['key'] }_title_preview`);\r\n\t\t\t\t\t\t\tif (formElement['placeholder'] != '') {\r\n\t\t\t\t\t\t\t\tdropDown_title.value = formElement['placeholder'];\r\n\t\t\t\t\t\t\t\tdropDown_title_preview.innerHTML = formElement['placeholder'];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tdropDown_title.value = '';\r\n\t\t\t\t\t\t\t\tdropDown_title.placeholder = 'Question Name';\r\n\t\t\t\t\t\t\t\tdropDown_title_preview.innerHTML = 'Untitled Question'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\teditPreviewOptions();\r\n\r\n\t\t\t\t\t\t\t// assign keyup event for new textInput\r\n\t\t\t\t\t\t\tvar shortTextInput = document.querySelector(`#${ formElement['key'] } #short_text_input`);\r\n\t\t\t\t\t\t\tvar titlePreview = document.getElementById(`${ formElement['key'] }_title_preview`);\r\n\t\t\t\t\t\t\tshortTextInput.addEventListener('keyup', (event) => {\r\n\t\t\t\t\t\t\t\t// assign text to preview text\r\n\t\t\t\t\t\t\t\ttitlePreview.innerHTML = event.target.value;\r\n\t\t\t\t\t\t\t\tformElement['label'] = event.target.value;\r\n\t\t\t\t\t\t\t\tformElement['placeholder'] = event.target.value;\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tvar dropdown_addOptions = document.querySelector(`#${ formElement['key'] } #add_content`);\r\n\t\t\t\t\t\t\tdropdown_addOptions.addEventListener('click', (event) => {\r\n\t\t\t\t\t\t\t\tvar rawOption = {\r\n\t\t\t\t\t\t\t\t\tkey: Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5),\r\n\t\t\t\t\t\t\t\t\tvalue: ''\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tformElement['options'].push(rawOption);\r\n\r\n\t\t\t\t\t\t\t\t// bind new option to DOM\r\n\t\t\t\t\t\t\t\tvar options = document.getElementById(`${ formElement['key'] }_options`);\r\n\t\t\t\t\t\t\t\tvar newOption = document.createElement('div');\r\n\t\t\t\t\t\t\t\tnewOption.innerHTML = `\r\n\t\t\t\t\t\t\t\t\t<label class=\"input-icon\"></label>\r\n\t\t\t\t\t\t\t\t\t<i id=\"${ rawOption['key'] }_removeOption\" class=\"material-icons input-remove\" uk-tooltip=\"title: Remove; pos: bottom\">clear</i>\t\r\n\t\t\t\t\t\t\t\t\t<input id=\"${ rawOption['key'] }_option\" style=\"padding-left:40px;\" class=\"uk-input\" type=\"text\">\r\n\t\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// set CSS properties to parent eliment\r\n\t\t\t\t\t\t\t\toptions.insertBefore(newOption, options.childNodes[formElement['options'].length]); \r\n\t\t\t\t\t\t\t\tdocument.getElementById(`${ rawOption['key'] }_option`).placeholder = `Option ${ formElement['options'].length }`;\r\n\r\n\t\t\t\t\t\t\t\tvar childOptionsContent = document.getElementById(`${ rawOption['key'] }_removeOption`);\r\n\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.id = rawOption['key'];\r\n\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.classList.add('uk-inline');\r\n\t\t\t\t\t\t\t\tchildOptionsContent.parentElement.style.display = 'block';\r\n\t\t\t\t\t\t\t\teditPreviewOptions();\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// assign event handkler to pass data to the array\r\n\t\t\t\t\t\t\t\tvar dropdown_btn_option = document.getElementById(`${ rawOption['key'] }_option`);\r\n\t\t\t\t\t\t\t\tdropdown_btn_option.addEventListener('keyup', (event) => {\r\n\t\t\t\t\t\t\t\t\tformElement['options'].forEach(element => {\r\n\t\t\t\t\t\t\t\t\t\tif (element['key'] == getByKey(event.target.id)) {\r\n\t\t\t\t\t\t\t\t\t\t\telement['value'] = event.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions();\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t// add click event handler to remove element\r\n\t\t\t\t\t\t\t\tvar dropdownBtn_remove = document.getElementById(`${ rawOption['key'] }_removeOption`);\r\n\t\t\t\t\t\t\t\tdropdownBtn_remove.addEventListener('click', (event) => {\r\n\t\t\t\t\t\t\t\t\tformElement['options'].forEach((element, index) => {\r\n\t\t\t\t\t\t\t\t\t\tif (element['key'] == getByKey(event.target.id)) {\r\n\t\t\t\t\t\t\t\t\t\t\t// remove option\r\n\t\t\t\t\t\t\t\t\t\t\tformElement['options'].splice(index, 1);\r\n\t\t\t\t\t\t\t\t\t\t\tvar currentOptionDiv = event.target.parentElement;\r\n\t\t\t\t\t\t\t\t\t\t\t// remove element from DOM\r\n\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(`${ formElement['key'] }_options`).removeChild(currentOptionDiv);\r\n\t\t\t\t\t\t\t\t\t\t\teditPreviewOptions();\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'date':\r\n\t\t\t\t\t\t\tformElement['controlType'] = 'date';\r\n\t\t\t\t\t\t\tselectedType.placeholder = 'Date';\r\n\t\t\t\t\t\t\tselectedQuestionDOM.innerHTML = `\r\n\t\t\t\t\t\t\t\t<div class=\"uk-margin\">\r\n\t\t\t\t\t\t\t\t\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Question Name</label>\r\n\t\t\t\t\t\t\t\t\t<div class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\tid=\"short_text_input\"\r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"uk-input\" \r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Question Name\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"uk-margin\">\r\n\t\t\t\t\t\t\t\t\t<label class=\"uk-form-label\" for=\"form-horizontal-text\">Content</label>\r\n\t\t\t\t\t\t\t\t\t<div class=\"uk-form-controls\">\r\n\t\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\tclass=\"uk-input\" \r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Date\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\thiddenElement.innerHTML = `\r\n\t\t\t\t\t\t\t\t<h1 id=\"${ formElement['key'] }_title_preview\" class=\"question-preview\">Untitled Question</h1>\r\n\t\t\t\t\t\t\t\t<span class=\"short-answer-text\">Date</span>\r\n\t\t\t\t\t\t\t\t<div style=\"border-bottom: 1px dotted rgba(0,0,0,0.38);margin-top: -10px;\"></div>\r\n\t\t\t\t\t\t\t`;\r\n\t\t\t\t\t\t\tif (formElement['placeholder'] != '') {\r\n\t\t\t\t\t\t\t\t// populate DOM of previous data\r\n\t\t\t\t\t\t\t\tvar shortTextInput = document.querySelector(`#${ formElement['key'] } #short_text_input`);\r\n\t\t\t\t\t\t\t\tvar titlePreview = document.getElementById(`${ formElement['key'] }_title_preview`);\r\n\t\t\t\t\t\t\t\tshortTextInput.value = formElement['placeholder'];\r\n\t\t\t\t\t\t\t\ttitlePreview.innerHTML = formElement['placeholder'];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// assign keyup event for new textInput\r\n\t\t\t\t\t\t\tvar shortTextInput = document.querySelector(`#${ formElement['key'] } #short_text_input`);\r\n\t\t\t\t\t\t\tvar titlePreview = document.getElementById(`${ formElement['key'] }_title_preview`);\r\n\t\t\t\t\t\t\tshortTextInput.addEventListener('keyup', (event) => {\r\n\t\t\t\t\t\t\t\t// assign text to preview text\r\n\t\t\t\t\t\t\t\ttitlePreview.innerHTML = event.target.value;\r\n\t\t\t\t\t\t\t\tformElement['label'] = event.target.value;\r\n\t\t\t\t\t\t\t\tformElement['placeholder'] = event.target.value;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this.selector, this.idf_form_object;\r\n\t}\r\n\r\n\tcreate(content = null) {\r\n\t\tconsole.log(content);\r\n\t}\r\n\r\n\tsubmit(content = null) {\r\n\r\n\t}\r\n\r\n\tgetFormObject() {\r\n\t\treturn this.idf_form_object;\r\n\t}\r\n}\r\n\r\n// export the class instance via a function call\r\nmodule.exports = (selector) => {\r\n\treturn new idf(selector);\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/App.es6","/*! UIkit 3.0.0-beta.40 | http://www.getuikit.com | (c) 2014 - 2017 YOOtheme | MIT License */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define('uikit', factory) :\n\t(global.UIkit = factory());\n}(this, (function () { 'use strict';\n\nfunction bind(fn, context) {\n    return function (a) {\n        var l = arguments.length;\n        return l ? l > 1 ? fn.apply(context, arguments) : fn.call(context, a) : fn.call(context);\n    };\n}\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\n\nfunction hasOwn(obj, key) {\n    return hasOwnProperty.call(obj, key);\n}\n\nvar hyphenateRe = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n    return str\n        .replace(hyphenateRe, '$1-$2')\n        .toLowerCase();\n}\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n    return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n    return c ? c.toUpperCase() : '';\n}\n\nfunction ucfirst(str) {\n    return str.length ? toUpper(null, str.charAt(0)) + str.slice(1) : '';\n}\n\nvar strPrototype = String.prototype;\nvar startsWithFn = strPrototype.startsWith || function (search) { return this.lastIndexOf(search, 0) === 0; };\n\nfunction startsWith(str, search) {\n    return startsWithFn.call(str, search);\n}\n\nvar endsWithFn = strPrototype.endsWith || function (search) { return this.substr(-search.length) === search; };\n\nfunction endsWith(str, search) {\n    return endsWithFn.call(str, search);\n}\n\nvar includesFn = function (search) { return ~this.indexOf(search); };\nvar includesStr = strPrototype.includes || includesFn;\nvar includesArray = Array.prototype.includes || includesFn;\n\nfunction includes(obj, search) {\n    return obj && (isString(obj) ? includesStr : includesArray).call(obj, search);\n}\n\nvar isArray = Array.isArray;\n\nfunction isFunction(obj) {\n    return typeof obj === 'function';\n}\n\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\n\nfunction isPlainObject(obj) {\n    return isObject(obj) && Object.getPrototypeOf(obj) === Object.prototype;\n}\n\nfunction isWindow(obj) {\n    return isObject(obj) && obj === obj.window;\n}\n\nfunction isDocument(obj) {\n    return isObject(obj) && obj.nodeType === 9;\n}\n\nfunction isJQuery(obj) {\n    return isObject(obj) && !!obj.jquery;\n}\n\nfunction isNode(element) {\n    return element instanceof Node || isObject(element) && element.nodeType === 1;\n}\n\nfunction isNodeCollection(element) {\n    return element instanceof NodeList || element instanceof HTMLCollection;\n}\n\nfunction isBoolean(value) {\n    return typeof value === 'boolean';\n}\n\nfunction isString(value) {\n    return typeof value === 'string';\n}\n\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\n\nfunction isNumeric(value) {\n    return isNumber(value) || isString(value) && !isNaN(value - parseFloat(value));\n}\n\nfunction isUndefined(value) {\n    return value === void 0;\n}\n\nfunction toBoolean(value) {\n    return isBoolean(value)\n        ? value\n        : value === 'true' || value === '1' || value === ''\n            ? true\n            : value === 'false' || value === '0'\n                ? false\n                : value;\n}\n\nfunction toNumber(value) {\n    var number = Number(value);\n    return !isNaN(number) ? number : false;\n}\n\nfunction toFloat(value) {\n    return parseFloat(value) || 0;\n}\n\nfunction toNode(element) {\n    return isNode(element) || isWindow(element) || isDocument(element)\n        ? element\n        : isNodeCollection(element) || isJQuery(element)\n            ? element[0]\n            : isArray(element)\n                ? toNode(element[0])\n                : null;\n}\n\nvar arrayProto = Array.prototype;\nfunction toNodes(element) {\n    return isNode(element)\n        ? [element]\n        : isNodeCollection(element)\n            ? arrayProto.slice.call(element)\n            : isArray(element)\n                ? element.map(toNode).filter(Boolean)\n                : isJQuery(element)\n                    ? element.toArray()\n                    : [];\n}\n\nfunction toList(value) {\n    return isArray(value)\n        ? value\n        : isString(value)\n            ? value.split(/,(?![^(]*\\))/).map(function (value) { return isNumeric(value)\n                ? toNumber(value)\n                : toBoolean(value.trim()); })\n            : [value];\n}\n\nfunction toMs(time) {\n    return !time\n        ? 0\n        : endsWith(time, 'ms')\n            ? toFloat(time)\n            : toFloat(time) * 1000;\n}\n\nfunction swap(value, a, b) {\n    return value.replace(new RegExp((a + \"|\" + b), 'mg'), function (match) {\n        return match === a ? b : a;\n    });\n}\n\nvar assign = Object.assign || function (target) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n    target = Object(target);\n    for (var i = 0; i < args.length; i++) {\n        var source = args[i];\n        if (source !== null) {\n            for (var key in source) {\n                if (hasOwn(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n    }\n    return target;\n};\n\nfunction each(obj, cb) {\n    for (var key in obj) {\n        if (cb.call(obj[key], obj[key], key) === false) {\n            break;\n        }\n    }\n}\n\nfunction sortBy(collection, prop) {\n    return collection.sort(function (a, b) { return a[prop] > b[prop]\n            ? 1\n            : b[prop] > a[prop]\n                ? -1\n                : 0; }\n    );\n}\n\nfunction clamp(number, min, max) {\n    if ( min === void 0 ) min = 0;\n    if ( max === void 0 ) max = 1;\n\n    return Math.min(Math.max(number, min), max);\n}\n\nfunction noop() {}\n\nfunction intersectRect(r1, r2) {\n    return r1.left <= r2.right &&\n        r2.left <= r1.right &&\n        r1.top <= r2.bottom &&\n        r2.top <= r1.bottom;\n}\n\nfunction pointInRect(point, rect) {\n    return intersectRect({top: point.y, bottom: point.y, left: point.x, right: point.x}, rect);\n}\n\nvar Dimensions = {\n\n    ratio: function ratio(dimensions, prop, value) {\n        var obj;\n\n\n        var aProp = prop === 'width' ? 'height' : 'width';\n\n        return ( obj = {}, obj[aProp] = Math.round(value * dimensions[aProp] / dimensions[prop]), obj[prop] = value, obj);\n    },\n\n    contain: function contain(dimensions, maxDimensions) {\n        var this$1 = this;\n\n        dimensions = assign({}, dimensions);\n\n        each(dimensions, function (_, prop) { return dimensions = dimensions[prop] > maxDimensions[prop]\n            ? this$1.ratio(dimensions, prop, maxDimensions[prop])\n            : dimensions; }\n        );\n\n        return dimensions;\n    },\n\n    cover: function cover(dimensions, maxDimensions) {\n        var this$1 = this;\n\n        dimensions = this.contain(dimensions, maxDimensions);\n\n        each(dimensions, function (_, prop) { return dimensions = dimensions[prop] < maxDimensions[prop]\n            ? this$1.ratio(dimensions, prop, maxDimensions[prop])\n            : dimensions; }\n        );\n\n        return dimensions;\n    }\n\n};\n\nfunction attr(element, name, value) {\n\n    if (isObject(name)) {\n        for (var key in name) {\n            attr(element, key, name[key]);\n        }\n        return;\n    }\n\n    if (isUndefined(value)) {\n        element = toNode(element);\n        return element && element.getAttribute(name);\n    } else {\n        toNodes(element).forEach(function (element) {\n\n            if (isFunction(value)) {\n                value = value.call(element, attr(element, name));\n            }\n\n            if (value === null) {\n                removeAttr(element, name);\n            } else {\n                element.setAttribute(name, value);\n            }\n        });\n    }\n\n}\n\nfunction hasAttr(element, name) {\n    return toNodes(element).some(function (element) { return element.hasAttribute(name); });\n}\n\nfunction removeAttr(element, name) {\n    element = toNodes(element);\n    name.split(' ').forEach(function (name) { return element.forEach(function (element) { return element.removeAttribute(name); }\n        ); }\n    );\n}\n\nfunction filterAttr(element, attribute, pattern, replacement) {\n    attr(element, attribute, function (value) { return value ? value.replace(pattern, replacement) : value; });\n}\n\nfunction data(element, attribute) {\n    for (var i = 0, attrs = [attribute, (\"data-\" + attribute)]; i < attrs.length; i++) {\n        if (hasAttr(element, attrs[i])) {\n            return attr(element, attrs[i]);\n        }\n    }\n}\n\n/* global setImmediate */\nvar Promise = 'Promise' in window ? window.Promise : PromiseFn;\n\nvar Deferred = function Deferred() {\n    var this$1 = this;\n\n    this.promise = new Promise(function (resolve, reject) {\n        this$1.reject = reject;\n        this$1.resolve = resolve;\n    });\n};\n\n/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING = 2;\n\nvar async = 'setImmediate' in window ? setImmediate : setTimeout;\n\nfunction PromiseFn(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromiseFn.reject = function (r) {\n    return new PromiseFn(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromiseFn.resolve = function (x) {\n    return new PromiseFn(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromiseFn.all = function all(iterable) {\n    return new PromiseFn(function (resolve, reject) {\n        var result = [];\n        var count = 0;\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            PromiseFn.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromiseFn.race = function race(iterable) {\n    return new PromiseFn(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            PromiseFn.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p = PromiseFn.prototype;\n\np.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x.then;\n\n            if (x !== null && isObject(x) && isFunction(then)) {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np.notify = function notify() {\n    var this$1 = this;\n\n    async(function () {\n        if (this$1.state !== PENDING) {\n            while (this$1.deferred.length) {\n                var ref = this$1.deferred.shift();\n                var onResolved = ref[0];\n                var onRejected = ref[1];\n                var resolve = ref[2];\n                var reject = ref[3];\n\n                try {\n                    if (this$1.state === RESOLVED) {\n                        if (isFunction(onResolved)) {\n                            resolve(onResolved.call(undefined, this$1.value));\n                        } else {\n                            resolve(this$1.value);\n                        }\n                    } else if (this$1.state === REJECTED) {\n                        if (isFunction(onRejected)) {\n                            resolve(onRejected.call(undefined, this$1.value));\n                        } else {\n                            reject(this$1.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np.then = function then(onResolved, onRejected) {\n    var this$1 = this;\n\n    return new PromiseFn(function (resolve, reject) {\n        this$1.deferred.push([onResolved, onRejected, resolve, reject]);\n        this$1.notify();\n    });\n};\n\np.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\n/* global DocumentTouch */\nvar win = window;\nvar doc = document;\nvar docEl = doc.documentElement;\n\nvar isRtl = attr(docEl, 'dir') === 'rtl';\n\nvar Observer = win.MutationObserver;\n\nvar hasTouchEvents = 'ontouchstart' in win;\nvar hasPointerEvents = win.PointerEvent;\nvar hasTouch = hasTouchEvents\n    || win.DocumentTouch && doc instanceof DocumentTouch\n    || navigator.maxTouchPoints; // IE >=11\n\nvar pointerDown = !hasTouch ? 'mousedown' : (\"mousedown \" + (hasTouchEvents ? 'touchstart' : 'pointerdown'));\nvar pointerMove = !hasTouch ? 'mousemove' : (\"mousemove \" + (hasTouchEvents ? 'touchmove' : 'pointermove'));\nvar pointerUp = !hasTouch ? 'mouseup' : (\"mouseup \" + (hasTouchEvents ? 'touchend' : 'pointerup'));\nvar pointerEnter = hasTouch && hasPointerEvents ? 'pointerenter' : 'mouseenter';\nvar pointerLeave = hasTouch && hasPointerEvents ? 'pointerleave' : 'mouseleave';\n\nfunction getImage(src) {\n\n    return new Promise(function (resolve, reject) {\n        var img = new Image();\n\n        img.onerror = reject;\n        img.onload = function () { return resolve(img); };\n\n        img.src = src;\n    });\n\n}\n\nvar supports = {};\n\n// IE 11\n(function () {\n\n    var list = doc.createElement('_').classList;\n    if (list) {\n        list.add('a', 'b');\n        list.toggle('c', false);\n        supports.Multiple = list.contains('b');\n        supports.Force = !list.contains('c');\n        supports.ClassList = true;\n    }\n    list = null;\n\n})();\n\nfunction query(selector, context) {\n    return toNode(selector) || find(selector, isContextSelector(selector) ? context : doc);\n}\n\nfunction queryAll(selector, context) {\n    var nodes = toNodes(selector);\n    return nodes.length && nodes || findAll(selector, isContextSelector(selector) ? context : doc);\n}\n\nfunction find(selector, context) {\n    return toNode(_query(selector, context, 'querySelector'));\n}\n\nfunction findAll(selector, context) {\n    return toNodes(_query(selector, context, 'querySelectorAll'));\n}\n\nfunction _query(selector, context, queryFn) {\n    if ( context === void 0 ) context = doc;\n\n\n    if (!selector || !isString(selector)) {\n        return null;\n    }\n\n    selector = selector.replace(contextSanitizeRe, '$1 *');\n\n    var removes;\n\n    if (isContextSelector(selector)) {\n\n        removes = [];\n\n        selector = selector.split(',').map(function (selector, i) {\n\n            var ctx = context;\n\n            selector = selector.trim();\n\n            if (selector[0] === '!') {\n\n                var selectors = selector.substr(1).trim().split(' ');\n                ctx = closest(context.parentNode, selectors[0]);\n                selector = selectors.slice(1).join(' ');\n\n            }\n\n            if (!ctx) {\n                return null;\n            }\n\n            if (!ctx.id) {\n                ctx.id = \"uk-\" + (Date.now()) + i;\n                removes.push(function () { return removeAttr(ctx, 'id'); });\n            }\n\n            return (\"#\" + (escape(ctx.id)) + \" \" + selector);\n\n        }).filter(Boolean).join(',');\n\n        context = doc;\n\n    }\n\n    try {\n\n        return context[queryFn](selector);\n\n    } catch (e) {\n\n        return null;\n\n    } finally {\n\n        removes && removes.forEach(function (remove) { return remove(); });\n\n    }\n\n}\n\nvar contextSelectorRe = /(^|,)\\s*[!>+~]/;\nvar contextSanitizeRe = /([!>+~])(?=\\s+[!>+~]|\\s*$)/g;\n\nfunction isContextSelector(selector) {\n    return isString(selector) && selector.match(contextSelectorRe);\n}\n\nvar elProto = Element.prototype;\nvar matchesFn = elProto.matches || elProto.webkitMatchesSelector || elProto.msMatchesSelector;\n\nfunction matches(element, selector) {\n    return toNodes(element).some(function (element) { return matchesFn.call(element, selector); });\n}\n\nvar closestFn = elProto.closest || function (selector) {\n    var ancestor = this;\n\n    do {\n\n        if (matches(ancestor, selector)) {\n            return ancestor;\n        }\n\n        ancestor = ancestor.parentNode;\n\n    } while (ancestor && ancestor.nodeType === 1);\n};\n\nfunction closest(element, selector) {\n\n    if (startsWith(selector, '>')) {\n        selector = selector.slice(1);\n    }\n\n    return isNode(element)\n        ? element.parentNode && closestFn.call(element, selector)\n        : toNodes(element).map(function (element) { return element.parentNode && closestFn.call(element, selector); }).filter(Boolean);\n}\n\nfunction parents(element, selector) {\n    var elements = [];\n    var parent = toNode(element).parentNode;\n\n    while (parent && parent.nodeType === 1) {\n\n        if (matches(parent, selector)) {\n            elements.push(parent);\n        }\n\n        parent = parent.parentNode;\n    }\n\n    return elements;\n}\n\nvar escapeFn = win.CSS && CSS.escape || function (css) { return css.replace(/([^\\x7f-\\uFFFF\\w-])/g, function (match) { return (\"\\\\\" + match); }); };\nfunction escape(css) {\n    return isString(css) ? escapeFn.call(null, css) : '';\n}\n\nvar voidElements = {\n    area: true,\n    base: true,\n    br: true,\n    col: true,\n    embed: true,\n    hr: true,\n    img: true,\n    input: true,\n    keygen: true,\n    link: true,\n    menuitem: true,\n    meta: true,\n    param: true,\n    source: true,\n    track: true,\n    wbr: true\n};\nfunction isVoidElement(element) {\n    return toNodes(element).some(function (element) { return voidElements[element.tagName.toLowerCase()]; });\n}\n\nfunction isVisible(element) {\n    return toNodes(element).some(function (element) { return element.offsetHeight || element.getBoundingClientRect().height; });\n}\n\nvar selInput = 'input,select,textarea,button';\nfunction isInput(element) {\n    return toNodes(element).some(function (element) { return matches(element, selInput); });\n}\n\nfunction filter(element, selector) {\n    return toNodes(element).filter(function (element) { return matches(element, selector); });\n}\n\nfunction within(element, selector) {\n    return !isString(selector)\n        ? element === selector || toNode(selector).contains(toNode(element))\n        : matches(element, selector) || closest(element, selector);\n}\n\nfunction on() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n\n    var ref = getArgs(args);\n    var target = ref[0];\n    var type = ref[1];\n    var selector = ref[2];\n    var listener = ref[3];\n    var useCapture = ref[4];\n\n    target = toEventTarget(target);\n\n    if (selector) {\n        listener = delegate(target, selector, listener);\n    }\n\n    if (listener.length > 1) {\n        listener = detail(listener);\n    }\n\n    type.split(' ').forEach(function (type) { return target && target.addEventListener(type, listener, useCapture); });\n    return function () { return off(target, type, listener, useCapture); };\n}\n\nfunction off(target, type, listener, useCapture) {\n    if ( useCapture === void 0 ) useCapture = false;\n\n    target = toEventTarget(target);\n    target && type.split(' ').forEach(function (type) { return target.removeEventListener(type, listener, useCapture); });\n}\n\nfunction once() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n\n    var ref = getArgs(args);\n    var element = ref[0];\n    var type = ref[1];\n    var selector = ref[2];\n    var listener = ref[3];\n    var useCapture = ref[4];\n    var condition = ref[5];\n    var off = on(element, type, selector, function (e) {\n        var result = !condition || condition(e);\n        if (result) {\n            off();\n            listener(e, result);\n        }\n    }, useCapture);\n\n    return off;\n}\n\nfunction trigger(target, event, detail) {\n    return toEventTargets(target).reduce(function (notCanceled, target) { return notCanceled && target.dispatchEvent(createEvent(event, true, true, detail)); }\n        , true);\n}\n\nfunction createEvent(e, bubbles, cancelable, detail) {\n    if ( bubbles === void 0 ) bubbles = true;\n    if ( cancelable === void 0 ) cancelable = false;\n\n    if (isString(e)) {\n        var event = document.createEvent('CustomEvent'); // IE 11\n        event.initCustomEvent(e, bubbles, cancelable, detail);\n        e = event;\n    }\n\n    return e;\n}\n\nfunction getArgs(args) {\n\n    if (isString(args[0])) {\n        args[0] = find(args[0]);\n    }\n\n    if (isFunction(args[2])) {\n        args.splice(2, 0, false);\n    }\n    return args;\n}\n\nfunction delegate(element, selector, listener) {\n    var this$1 = this;\n\n    return function (e) {\n\n        var target = e.target;\n        var current = selector[0] === '>'\n            ? findAll(selector, element).reverse().filter(function (element) { return within(target, element); })[0]\n            : closest(target, selector);\n\n        if (current) {\n            e.delegate = element;\n            e.current = current;\n\n            listener.call(this$1, e);\n        }\n    };\n}\n\nfunction detail(listener) {\n    return function (e) { return isArray(e.detail) ? listener.apply(listener, [e].concat(e.detail)) : listener(e); };\n}\n\nfunction isEventTarget(target) {\n    return 'EventTarget' in window\n        ? target instanceof EventTarget\n        : target && 'addEventListener' in target;\n}\n\nfunction toEventTarget(target) {\n    return isEventTarget(target) ? target : toNode(target);\n}\n\nfunction toEventTargets(target) {\n    return isEventTarget(target)\n        ? [target]\n        : isArray(target)\n            ? target.map(toEventTarget).filter(Boolean)\n            : toNodes(target);\n}\n\nfunction preventClick() {\n\n    var timer = setTimeout(once(document, 'click', function (e) {\n\n        e.preventDefault();\n        e.stopImmediatePropagation();\n\n        clearTimeout(timer);\n\n    }, true));\n\n}\n\nfunction ajax(url, options) {\n    return new Promise(function (resolve, reject) {\n\n        var env = assign({\n            data: null,\n            method: 'GET',\n            headers: {},\n            xhr: new XMLHttpRequest(),\n            beforeSend: noop,\n            responseType: ''\n        }, options);\n\n        env.beforeSend(env);\n\n        var xhr = env.xhr;\n\n        for (var prop in env) {\n            if (prop in xhr) {\n                try {\n\n                    xhr[prop] = env[prop];\n\n                } catch (e) {}\n            }\n        }\n\n        xhr.open(env.method.toUpperCase(), url);\n\n        for (var header in env.headers) {\n            xhr.setRequestHeader(header, env.headers[header]);\n        }\n\n        on(xhr, 'load', function () {\n\n            if (xhr.status === 0 || xhr.status >= 200 && xhr.status < 300 || xhr.status === 304) {\n                resolve(xhr);\n            } else {\n                reject(assign(Error(xhr.statusText), {\n                    xhr: xhr,\n                    status: xhr.status\n                }));\n            }\n\n        });\n\n        on(xhr, 'error', function () { return reject(assign(Error('Network Error'), {xhr: xhr})); });\n        on(xhr, 'timeout', function () { return reject(assign(Error('Network Timeout'), {xhr: xhr})); });\n\n        xhr.send(env.data);\n    });\n}\n\nfunction isReady() {\n    return doc.readyState === 'complete' || doc.readyState !== 'loading' && !docEl.doScroll;\n}\n\nfunction ready(fn) {\n\n    if (isReady()) {\n        fn();\n        return;\n    }\n\n    var handle = function () {\n        unbind1();\n        unbind2();\n        fn();\n    };\n    var unbind1 = on(doc, 'DOMContentLoaded', handle);\n    var unbind2 = on(win, 'load', handle);\n}\n\nfunction index(element, ref) {\n    return ref\n        ? toNodes(element).indexOf(toNode(ref))\n        : toNodes((element = toNode(element)) && element.parentNode.children).indexOf(element);\n}\n\nfunction getIndex(i, elements, current, finite) {\n    if ( current === void 0 ) current = 0;\n    if ( finite === void 0 ) finite = false;\n\n\n    elements = toNodes(elements);\n\n    var length = elements.length;\n\n    i = isNumeric(i)\n        ? toNumber(i)\n        : i === 'next'\n            ? current + 1\n            : i === 'previous'\n                ? current - 1\n                : index(elements, i);\n\n    if (finite) {\n        return clamp(i, 0, length - 1);\n    }\n\n    i %= length;\n\n    return i < 0 ? i + length : i;\n}\n\nfunction empty(element) {\n    element = toNode(element);\n    element.innerHTML = '';\n    return element;\n}\n\nfunction html(parent, html) {\n    parent = toNode(parent);\n    return isUndefined(html)\n        ? parent.innerHTML\n        : append(parent.hasChildNodes() ? empty(parent) : parent, html);\n}\n\nfunction prepend(parent, element) {\n\n    parent = toNode(parent);\n\n    if (!parent.hasChildNodes()) {\n        return append(parent, element);\n    } else {\n        return insertNodes(element, function (element) { return parent.insertBefore(element, parent.firstChild); });\n    }\n}\n\nfunction append(parent, element) {\n    parent = toNode(parent);\n    return insertNodes(element, function (element) { return parent.appendChild(element); });\n}\n\nfunction before(ref, element) {\n    ref = toNode(ref);\n    return insertNodes(element, function (element) { return ref.parentNode.insertBefore(element, ref); });\n}\n\nfunction after(ref, element) {\n    ref = toNode(ref);\n    return insertNodes(element, function (element) { return ref.nextSibling\n        ? before(ref.nextSibling, element)\n        : append(ref.parentNode, element); }\n    );\n}\n\nfunction insertNodes(element, fn) {\n    element = isString(element) ? fragment(element) : element;\n    return element\n        ? 'length' in element\n            ? toNodes(element).map(fn)\n            : fn(element)\n        : null;\n}\n\nfunction remove(element) {\n    toNodes(element).map(function (element) { return element.parentNode && element.parentNode.removeChild(element); });\n}\n\nfunction wrapAll(element, structure) {\n\n    structure = toNode(before(element, structure));\n\n    while (structure.firstChild) {\n        structure = structure.firstChild;\n    }\n\n    append(structure, element);\n\n    return structure;\n}\n\nfunction wrapInner(element, structure) {\n    return toNodes(toNodes(element).map(function (element) { return element.hasChildNodes ? wrapAll(toNodes(element.childNodes), structure) : append(element, structure); }\n    ));\n}\n\nfunction unwrap(element) {\n    toNodes(element)\n        .map(function (element) { return element.parentNode; })\n        .filter(function (value, index, self) { return self.indexOf(value) === index; })\n        .forEach(function (parent) {\n            before(parent, parent.childNodes);\n            remove(parent);\n        });\n}\n\nvar fragmentRE = /^\\s*<(\\w+|!)[^>]*>/;\nvar singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>)?$/;\n\nfunction fragment(html) {\n\n    var matches = singleTagRE.exec(html);\n    if (matches) {\n        return doc.createElement(matches[1]);\n    }\n\n    var container = doc.createElement('div');\n    if (fragmentRE.test(html)) {\n        container.insertAdjacentHTML('beforeend', html.trim());\n    } else {\n        container.textContent = html;\n    }\n\n    return container.childNodes.length > 1 ? toNodes(container.childNodes) : container.firstChild;\n\n}\n\nfunction addClass(element) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n    apply(element, args, 'add');\n}\n\nfunction removeClass(element) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n    apply(element, args, 'remove');\n}\n\nfunction removeClasses(element, cls) {\n    filterAttr(element, 'class', new RegExp((\"(^|\\\\s)\" + cls + \"(?!\\\\S)\"), 'g'), '');\n}\n\nfunction replaceClass(element) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n    args[0] && removeClass(element, args[0]);\n    args[1] && addClass(element, args[1]);\n}\n\nfunction hasClass(element, cls) {\n    return supports.ClassList && toNodes(element).some(function (element) { return element.classList.contains(cls); });\n}\n\nfunction toggleClass(element) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n\n    if (!supports.ClassList || !args.length) {\n        return;\n    }\n\n    args = getArgs$1(args);\n\n    var force = !isString(args[args.length - 1]) ? args.pop() : []; // in iOS 9.3 force === undefined evaluates to false\n\n    args = args.filter(Boolean);\n\n    toNodes(element).forEach(function (ref) {\n        var classList = ref.classList;\n\n        for (var i = 0; i < args.length; i++) {\n            supports.Force\n                ? classList.toggle.apply(classList, [args[i]].concat(force))\n                : (classList[(!isUndefined(force) ? force : !classList.contains(args[i])) ? 'add' : 'remove'](args[i]));\n        }\n    });\n\n}\n\nfunction apply(element, args, fn) {\n    args = getArgs$1(args).filter(Boolean);\n\n    supports.ClassList && args.length && toNodes(element).forEach(function (ref) {\n        var classList = ref.classList;\n\n        supports.Multiple\n            ? classList[fn].apply(classList, args)\n            : args.forEach(function (cls) { return classList[fn](cls); });\n    });\n}\n\nfunction getArgs$1(args) {\n    return args.reduce(function (args, arg) { return args.concat.call(args, isString(arg) && includes(arg, ' ') ? arg.trim().split(' ') : arg); }\n        , []);\n}\n\nvar cssNumber = {\n    'animation-iteration-count': true,\n    'column-count': true,\n    'fill-opacity': true,\n    'flex-grow': true,\n    'flex-shrink': true,\n    'font-weight': true,\n    'line-height': true,\n    'opacity': true,\n    'order': true,\n    'orphans': true,\n    'widows': true,\n    'z-index': true,\n    'zoom': true\n};\n\nfunction css(element, property, value) {\n\n    return toNodes(element).map(function (element) {\n\n        if (isString(property)) {\n\n            property = propName(property);\n\n            if (isUndefined(value)) {\n                return getStyle(element, property);\n            } else if (!value && value !== 0) {\n                element.style.removeProperty(property);\n            } else {\n                element.style[property] = isNumeric(value) && !cssNumber[property] ? (value + \"px\") : value;\n            }\n\n        } else if (isArray(property)) {\n\n            var styles = getStyles(element);\n\n            return property.reduce(function (props, property) {\n                props[property] = styles[propName(property)];\n                return props;\n            }, {});\n\n        } else if (isObject(property)) {\n            each(property, function (value, property) { return css(element, property, value); });\n        }\n\n        return element;\n\n    })[0];\n\n}\n\nfunction getStyles(element, pseudoElt) {\n    element = toNode(element);\n    return element.ownerDocument.defaultView.getComputedStyle(element, pseudoElt);\n}\n\nfunction getStyle(element, property, pseudoElt) {\n    return getStyles(element, pseudoElt)[property];\n}\n\nvar vars = {};\n\nfunction getCssVar(name) {\n\n    if (!(name in vars)) {\n\n        /* usage in css: .var-name:before { content:\"xyz\" } */\n\n        var element = append(docEl, doc.createElement('div'));\n\n        addClass(element, (\"var-\" + name));\n\n        try {\n\n            vars[name] = getStyle(element, 'content', ':before').replace(/^[\"'](.*)[\"']$/, '$1');\n            vars[name] = JSON.parse(vars[name]);\n\n        } catch (e) {}\n\n        docEl.removeChild(element);\n\n    }\n\n    return vars[name];\n\n}\n\nvar cssProps = {};\n\nfunction propName(name) {\n\n    var ret = cssProps[name];\n    if (!ret) {\n        ret = cssProps[name] = vendorPropName(name) || name;\n    }\n    return ret;\n}\n\nvar cssPrefixes = ['webkit', 'moz', 'ms'];\nvar ref$1 = doc.createElement('_');\nvar style = ref$1.style;\n\nfunction vendorPropName(name) {\n\n    name = hyphenate(name);\n\n    if (name in style) {\n        return name;\n    }\n\n    var i = cssPrefixes.length, prefixedName;\n\n    while (i--) {\n        prefixedName = \"-\" + (cssPrefixes[i]) + \"-\" + name;\n        if (prefixedName in style) {\n            return prefixedName;\n        }\n    }\n}\n\nfunction transition(element, props, duration, timing) {\n    if ( duration === void 0 ) duration = 400;\n    if ( timing === void 0 ) timing = 'linear';\n\n\n    return Promise.all(toNodes(element).map(function (element) { return new Promise(function (resolve, reject) {\n\n            for (var name in props) {\n                var value = css(element, name);\n                if (value === '') {\n                    css(element, name, value);\n                }\n            }\n\n            var timer = setTimeout(function () { return trigger(element, 'transitionend'); }, duration);\n\n            once(element, 'transitionend transitioncanceled', function (ref) {\n                var type = ref.type;\n\n                clearTimeout(timer);\n                removeClass(element, 'uk-transition');\n                css(element, {\n                    'transition-property': '',\n                    'transition-duration': '',\n                    'transition-timing-function': ''\n                });\n                type === 'transitioncanceled' ? reject() : resolve();\n            }, false, function (ref) {\n                var target = ref.target;\n\n                return element === target;\n            });\n\n            addClass(element, 'uk-transition');\n            css(element, assign({\n                'transition-property': Object.keys(props).map(propName).join(','),\n                'transition-duration': (duration + \"ms\"),\n                'transition-timing-function': timing\n            }, props));\n\n        }); }\n    ));\n\n}\n\nvar Transition = {\n\n    start: transition,\n\n    stop: function stop(element) {\n        trigger(element, 'transitionend');\n        return Promise.resolve();\n    },\n\n    cancel: function cancel(element) {\n        trigger(element, 'transitioncanceled');\n    },\n\n    inProgress: function inProgress(element) {\n        return hasClass(element, 'uk-transition');\n    }\n\n};\n\nvar animationPrefix = 'uk-animation-';\nvar clsCancelAnimation = 'uk-cancel-animation';\n\nfunction animate(element, animation, duration, origin, out) {\n    var arguments$1 = arguments;\n    if ( duration === void 0 ) duration = 200;\n\n\n    return Promise.all(toNodes(element).map(function (element) { return new Promise(function (resolve, reject) {\n\n            if (hasClass(element, clsCancelAnimation)) {\n                requestAnimationFrame(function () { return Promise.resolve().then(function () { return animate.apply(void 0, arguments$1).then(resolve, reject); }\n                    ); }\n                );\n                return;\n            }\n\n            var cls = animation + \" \" + animationPrefix + (out ? 'leave' : 'enter');\n\n            if (startsWith(animation, animationPrefix)) {\n\n                if (origin) {\n                    cls += \" uk-transform-origin-\" + origin;\n                }\n\n                if (out) {\n                    cls += \" \" + animationPrefix + \"reverse\";\n                }\n\n            }\n\n            reset();\n\n            once(element, 'animationend animationcancel', function (ref) {\n                var type = ref.type;\n\n\n                var hasReset = false;\n\n                if (type === 'animationcancel') {\n                    reject();\n                    reset();\n                } else {\n                    resolve();\n                    Promise.resolve().then(function () {\n                        hasReset = true;\n                        reset();\n                    });\n                }\n\n                requestAnimationFrame(function () {\n                    if (!hasReset) {\n                        addClass(element, clsCancelAnimation);\n\n                        requestAnimationFrame(function () { return removeClass(element, clsCancelAnimation); });\n                    }\n                });\n\n            }, false, function (ref) {\n                var target = ref.target;\n\n                return element === target;\n            });\n\n            css(element, 'animationDuration', (duration + \"ms\"));\n            addClass(element, cls);\n\n            function reset() {\n                css(element, 'animationDuration', '');\n                removeClasses(element, (animationPrefix + \"\\\\S*\"));\n            }\n\n        }); }\n    ));\n\n}\n\nvar inProgress = new RegExp((animationPrefix + \"(enter|leave)\"));\nvar Animation = {\n\n    in: function in$1(element, animation, duration, origin) {\n        return animate(element, animation, duration, origin, false);\n    },\n\n    out: function out(element, animation, duration, origin) {\n        return animate(element, animation, duration, origin, true);\n    },\n\n    inProgress: function inProgress$1(element) {\n        return inProgress.test(attr(element, 'class'));\n    },\n\n    cancel: function cancel(element) {\n        trigger(element, 'animationcancel');\n    }\n\n};\n\nfunction $(selector, context) {\n    return !isString(selector)\n        ? toNode(selector)\n        : isHtml(selector)\n            ? toNode(fragment(selector))\n            : find(selector, context);\n}\n\nfunction $$(selector, context) {\n    return !isString(selector)\n        ? toNodes(selector)\n        : isHtml(selector)\n            ? toNodes(fragment(selector))\n            : findAll(selector, context);\n}\n\nfunction isHtml(str) {\n    return str[0] === '<' || str.match(/^\\s*</);\n}\n\nvar dirs = {\n    width: ['x', 'left', 'right'],\n    height: ['y', 'top', 'bottom']\n};\n\nfunction positionAt(element, target, elAttach, targetAttach, elOffset, targetOffset, flip, boundary) {\n\n    elAttach = getPos(elAttach);\n    targetAttach = getPos(targetAttach);\n\n    var flipped = {element: elAttach, target: targetAttach};\n\n    if (!element || !target) {\n        return flipped;\n    }\n\n    var dim = getDimensions(element);\n    var targetDim = getDimensions(target);\n    var position = targetDim;\n\n    moveTo(position, elAttach, dim, -1);\n    moveTo(position, targetAttach, targetDim, 1);\n\n    elOffset = getOffsets(elOffset, dim.width, dim.height);\n    targetOffset = getOffsets(targetOffset, targetDim.width, targetDim.height);\n\n    elOffset['x'] += targetOffset['x'];\n    elOffset['y'] += targetOffset['y'];\n\n    position.left += elOffset['x'];\n    position.top += elOffset['y'];\n\n    boundary = getDimensions(boundary || window$1(element));\n\n    if (flip) {\n        each(dirs, function (ref, prop) {\n            var dir = ref[0];\n            var align = ref[1];\n            var alignFlip = ref[2];\n\n\n            if (!(flip === true || includes(flip, dir))) {\n                return;\n            }\n\n            var elemOffset = elAttach[dir] === align\n                ? -dim[prop]\n                : elAttach[dir] === alignFlip\n                    ? dim[prop]\n                    : 0;\n\n            var targetOffset = targetAttach[dir] === align\n                ? targetDim[prop]\n                : targetAttach[dir] === alignFlip\n                    ? -targetDim[prop]\n                    : 0;\n\n            if (position[align] < boundary[align] || position[align] + dim[prop] > boundary[alignFlip]) {\n\n                var centerOffset = dim[prop] / 2;\n                var centerTargetOffset = targetAttach[dir] === 'center' ? -targetDim[prop] / 2 : 0;\n\n                elAttach[dir] === 'center' && (\n                    apply(centerOffset, centerTargetOffset)\n                    || apply(-centerOffset, -centerTargetOffset)\n                ) || apply(elemOffset, targetOffset);\n\n            }\n\n            function apply(elemOffset, targetOffset) {\n\n                var newVal = position[align] + elemOffset + targetOffset - elOffset[dir] * 2;\n\n                if (newVal >= boundary[align] && newVal + dim[prop] <= boundary[alignFlip]) {\n                    position[align] = newVal;\n\n                    ['element', 'target'].forEach(function (el) {\n                        flipped[el][dir] = !elemOffset\n                            ? flipped[el][dir]\n                            : flipped[el][dir] === dirs[prop][1]\n                                ? dirs[prop][2]\n                                : dirs[prop][1];\n                    });\n\n                    return true;\n                }\n\n            }\n\n        });\n    }\n\n    offset(element, position);\n\n    return flipped;\n}\n\nfunction offset(element, coordinates) {\n\n    element = toNode(element);\n\n    if (coordinates) {\n\n        var currentOffset = offset(element);\n        var pos = css(element, 'position');\n\n        ['left', 'top'].forEach(function (prop) {\n            if (prop in coordinates) {\n                var value = css(element, prop);\n                element.style[prop] = ((coordinates[prop] - currentOffset[prop])\n                + toFloat(pos === 'absolute' && value === 'auto' ? position(element)[prop] : value)) + \"px\";\n            }\n        });\n\n        return;\n    }\n\n    return getDimensions(element);\n}\n\nfunction getDimensions(element) {\n\n    element = toNode(element);\n\n    var ref = window$1(element);\n    var top = ref.pageYOffset;\n    var left = ref.pageXOffset;\n\n    if (isWindow(element)) {\n\n        var height = element.innerHeight;\n        var width = element.innerWidth;\n\n        return {\n            top: top,\n            left: left,\n            height: height,\n            width: width,\n            bottom: top + height,\n            right: left + width,\n        };\n    }\n\n    var display = false;\n    if (!isVisible(element)) {\n        display = element.style.display;\n        element.style.display = 'block';\n    }\n\n    var rect = element.getBoundingClientRect();\n\n    if (display !== false) {\n        element.style.display = display;\n    }\n\n    return {\n        height: rect.height,\n        width: rect.width,\n        top: rect.top + top,\n        left: rect.left + left,\n        bottom: rect.bottom + top,\n        right: rect.right + left,\n    };\n}\n\nfunction position(element) {\n    element = toNode(element);\n\n    var parent = offsetParent(element);\n    var parentOffset = parent === docEl$1(element) ? {top: 0, left: 0} : offset(parent);\n    var ref = ['top', 'left'].reduce(function (props, prop) {\n        var propName$$1 = ucfirst(prop);\n        props[prop] -= parentOffset[prop]\n            + (toFloat(css(element, (\"margin\" + propName$$1))) || 0)\n            + (toFloat(css(parent, (\"border\" + propName$$1 + \"Width\"))) || 0);\n        return props;\n    }, offset(element));\n    var top = ref.top;\n    var left = ref.left;\n\n    return {top: top, left: left};\n}\n\nfunction offsetParent(element) {\n\n    var parent = toNode(element).offsetParent;\n\n    while (parent && css(parent, 'position') === 'static') {\n        parent = parent.offsetParent;\n    }\n\n    return parent || docEl$1(element);\n}\n\nvar height = dimension('height');\nvar width = dimension('width');\n\nfunction dimension(prop) {\n    var propName$$1 = ucfirst(prop);\n    return function (element, value) {\n\n        element = toNode(element);\n\n        if (isUndefined(value)) {\n\n            if (isWindow(element)) {\n                return element[(\"inner\" + propName$$1)];\n            }\n\n            if (isDocument(element)) {\n                var doc = element.documentElement;\n                return Math.max(doc.offsetHeight, doc.scrollHeight);\n            }\n\n            value = css(element, prop);\n            value = value === 'auto' ? element[(\"offset\" + propName$$1)] : toFloat(value) || 0;\n\n            return getContentSize(prop, element, value);\n\n        } else {\n\n            css(element, prop, !value && value !== 0\n                ? ''\n                : getContentSize(prop, element, value) + 'px'\n            );\n\n        }\n\n    };\n}\n\nfunction getContentSize(prop, element, value) {\n    return css(element, 'boxSizing') === 'border-box' ? dirs[prop].slice(1).map(ucfirst).reduce(function (value, prop) { return value\n        - toFloat(css(element, (\"padding\" + prop)))\n        - toFloat(css(element, (\"border\" + prop + \"Width\"))); }\n        , value) : value;\n}\n\nfunction moveTo(position, attach, dim, factor) {\n    each(dirs, function (ref, prop) {\n        var dir = ref[0];\n        var align = ref[1];\n        var alignFlip = ref[2];\n\n        if (attach[dir] === alignFlip) {\n            position[align] += dim[prop] * factor;\n        } else if (attach[dir] === 'center') {\n            position[align] += dim[prop] * factor / 2;\n        }\n    });\n}\n\nfunction getPos(pos) {\n\n    var x = /left|center|right/;\n    var y = /top|center|bottom/;\n\n    pos = (pos || '').split(' ');\n\n    if (pos.length === 1) {\n        pos = x.test(pos[0])\n            ? pos.concat(['center'])\n            : y.test(pos[0])\n                ? ['center'].concat(pos)\n                : ['center', 'center'];\n    }\n\n    return {\n        x: x.test(pos[0]) ? pos[0] : 'center',\n        y: y.test(pos[1]) ? pos[1] : 'center'\n    };\n}\n\nfunction getOffsets(offsets, width, height) {\n\n    var ref = (offsets || '').split(' ');\n    var x = ref[0];\n    var y = ref[1];\n\n    return {\n        x: x ? toFloat(x) * (endsWith(x, '%') ? width / 100 : 1) : 0,\n        y: y ? toFloat(y) * (endsWith(y, '%') ? height / 100 : 1) : 0\n    };\n}\n\nfunction flipPosition(pos) {\n    switch (pos) {\n        case 'left':\n            return 'right';\n        case 'right':\n            return 'left';\n        case 'top':\n            return 'bottom';\n        case 'bottom':\n            return 'top';\n        default:\n            return pos;\n    }\n}\n\nfunction isInView(element, top, left) {\n    if ( top === void 0 ) top = 0;\n    if ( left === void 0 ) left = 0;\n\n\n    element = toNode(element);\n\n    var win = window$1(element);\n    return intersectRect(element.getBoundingClientRect(), {\n        top: top,\n        left: left,\n        bottom: top + height(win),\n        right: left + width(win)\n    });\n}\n\nfunction scrolledOver(element) {\n\n    element = toNode(element);\n\n    var win = window$1(element);\n    var doc = document$1(element);\n    var elHeight = element.offsetHeight;\n    var top = positionTop(element);\n    var vp = height(win);\n    var vh = vp + Math.min(0, top - vp);\n    var diff = Math.max(0, vp - (height(doc) - (top + elHeight)));\n\n    return clamp(((vh + win.pageYOffset - top) / ((vh + (elHeight - (diff < vp ? diff : 0))) / 100)) / 100);\n}\n\nfunction positionTop(element) {\n    var top = 0;\n\n    do {\n\n        top += element.offsetTop;\n\n    } while ((element = element.offsetParent));\n\n    return top;\n}\n\nfunction window$1(element) {\n    return isWindow(element) ? element : document$1(element).defaultView;\n}\n\nfunction document$1(element) {\n    return toNode(element).ownerDocument;\n}\n\nfunction docEl$1(element) {\n    return document$1(element).documentElement;\n}\n\n/*\n    Based on:\n    Copyright (c) 2016 Wilson Page wilsonpage@me.com\n    https://github.com/wilsonpage/fastdom\n*/\n\nvar fastdom = {\n\n    reads: [],\n    writes: [],\n\n    read: function read(task) {\n        this.reads.push(task);\n        scheduleFlush();\n        return task;\n    },\n\n    write: function write(task) {\n        this.writes.push(task);\n        scheduleFlush();\n        return task;\n    },\n\n    clear: function clear(task) {\n        return remove$1(this.reads, task) || remove$1(this.writes, task);\n    },\n\n    flush: function flush() {\n\n        runTasks(this.reads);\n        runTasks(this.writes.splice(0, this.writes.length));\n\n        this.scheduled = false;\n\n        if (this.reads.length || this.writes.length) {\n            scheduleFlush();\n        }\n\n    }\n\n};\n\nfunction scheduleFlush() {\n    if (!fastdom.scheduled) {\n        fastdom.scheduled = true;\n        requestAnimationFrame(fastdom.flush.bind(fastdom));\n    }\n}\n\nfunction runTasks(tasks) {\n    var task;\n    while ((task = tasks.shift())) {\n        task();\n    }\n}\n\nfunction remove$1(array, item) {\n    var index = array.indexOf(item);\n    return !!~index && !!array.splice(index, 1);\n}\n\nfunction MouseTracker() {}\n\nMouseTracker.prototype = {\n\n    positions: [],\n    position: null,\n\n    init: function init() {\n        var this$1 = this;\n\n\n        this.positions = [];\n        this.position = null;\n\n        var ticking = false;\n        this.unbind = on(doc, 'mousemove', function (e) {\n\n            if (ticking) {\n                return;\n            }\n\n            setTimeout(function () {\n\n                var time = Date.now();\n                var ref = this$1.positions;\n                var length = ref.length;\n\n                if (length && (time - this$1.positions[length - 1].time > 100)) {\n                    this$1.positions.splice(0, length);\n                }\n\n                this$1.positions.push({time: time, x: e.pageX, y: e.pageY});\n\n                if (this$1.positions.length > 5) {\n                    this$1.positions.shift();\n                }\n\n                ticking = false;\n            }, 5);\n\n            ticking = true;\n        });\n\n    },\n\n    cancel: function cancel() {\n        if (this.unbind) {\n            this.unbind();\n        }\n    },\n\n    movesTo: function movesTo(target) {\n\n        if (this.positions.length < 2) {\n            return false;\n        }\n\n        var p = offset(target);\n        var position$$1 = this.positions[this.positions.length - 1];\n        var ref = this.positions;\n        var prevPos = ref[0];\n\n        if (p.left <= position$$1.x && position$$1.x <= p.right && p.top <= position$$1.y && position$$1.y <= p.bottom) {\n            return false;\n        }\n\n        var points = [\n            [{x: p.left, y: p.top}, {x: p.right, y: p.bottom}],\n            [{x: p.right, y: p.top}, {x: p.left, y: p.bottom}]\n        ];\n\n        if (p.right <= position$$1.x) {\n            // empty\n        } else if (p.left >= position$$1.x) {\n            points[0].reverse();\n            points[1].reverse();\n        } else if (p.bottom <= position$$1.y) {\n            points[0].reverse();\n        } else if (p.top >= position$$1.y) {\n            points[1].reverse();\n        }\n\n        return !!points.reduce(function (result, point) {\n            return result + (slope(prevPos, point[0]) < slope(position$$1, point[0]) && slope(prevPos, point[1]) > slope(position$$1, point[1]));\n        }, 0);\n    }\n\n};\n\nfunction slope(a, b) {\n    return (b.y - a.y) / (b.x - a.x);\n}\n\nvar strats = {};\n\n// concat strategy\nstrats.args =\nstrats.events =\nstrats.init =\nstrats.created =\nstrats.beforeConnect =\nstrats.connected =\nstrats.ready =\nstrats.beforeDisconnect =\nstrats.disconnected =\nstrats.destroy = function (parentVal, childVal) {\n\n    parentVal = parentVal && !isArray(parentVal) ? [parentVal] : parentVal;\n\n    return childVal\n        ? parentVal\n            ? parentVal.concat(childVal)\n            : isArray(childVal)\n                ? childVal\n                : [childVal]\n        : parentVal;\n};\n\n// update strategy\nstrats.update = function (parentVal, childVal) {\n    return strats.args(parentVal, isFunction(childVal) ? {read: childVal} : childVal);\n};\n\n// property strategy\nstrats.props = function (parentVal, childVal) {\n\n    if (isArray(childVal)) {\n        childVal = childVal.reduce(function (value, key) {\n            value[key] = String;\n            return value;\n        }, {});\n    }\n\n    return strats.methods(parentVal, childVal);\n};\n\n// extend strategy\nstrats.computed =\nstrats.defaults =\nstrats.methods = function (parentVal, childVal) {\n    return childVal\n        ? parentVal\n            ? assign({}, parentVal, childVal)\n            : childVal\n        : parentVal;\n};\n\n// default strategy\nvar defaultStrat = function (parentVal, childVal) {\n    return isUndefined(childVal) ? parentVal : childVal;\n};\n\nfunction mergeOptions(parent, child) {\n\n    var options = {};\n\n    if (child.mixins) {\n        for (var i = 0, l = child.mixins.length; i < l; i++) {\n            parent = mergeOptions(parent, child.mixins[i]);\n        }\n    }\n\n    for (var key in parent) {\n        mergeKey(key);\n    }\n\n    for (var key$1 in child) {\n        if (!hasOwn(parent, key$1)) {\n            mergeKey(key$1);\n        }\n    }\n\n    function mergeKey(key) {\n        options[key] = (strats[key] || defaultStrat)(parent[key], child[key]);\n    }\n\n    return options;\n}\n\nvar id = 0;\n\nvar Player = function Player(el) {\n    this.id = ++id;\n    this.el = toNode(el);\n};\n\nPlayer.prototype.isVideo = function isVideo () {\n    return this.isYoutube() || this.isVimeo() || this.isHTML5();\n};\n\nPlayer.prototype.isHTML5 = function isHTML5 () {\n    return this.el.tagName === 'VIDEO';\n};\n\nPlayer.prototype.isIFrame = function isIFrame () {\n    return this.el.tagName === 'IFRAME';\n};\n\nPlayer.prototype.isYoutube = function isYoutube () {\n    return this.isIFrame() && !!this.el.src.match(/\\/\\/.*?youtube(-nocookie)?\\.[a-z]+\\/(watch\\?v=[^&\\s]+|embed)|youtu\\.be\\/.*/);\n};\n\nPlayer.prototype.isVimeo = function isVimeo () {\n    return this.isIFrame() && !!this.el.src.match(/vimeo\\.com\\/video\\/.*/);\n};\n\nPlayer.prototype.enableApi = function enableApi () {\n        var this$1 = this;\n\n\n    if (this.ready) {\n        return this.ready;\n    }\n\n    var youtube = this.isYoutube();\n    var vimeo = this.isVimeo();\n\n    var poller;\n\n    if (youtube || vimeo) {\n\n        return this.ready = new Promise(function (resolve) {\n\n            once(this$1.el, 'load', function () {\n                if (youtube) {\n                    var listener = function () { return post(this$1.el, {event: 'listening', id: this$1.id}); };\n                    poller = setInterval(listener, 100);\n                    listener();\n                }\n            });\n\n            listen(function (data$$1) { return youtube && data$$1.id === this$1.id && data$$1.event === 'onReady' || vimeo && Number(data$$1.player_id) === this$1.id; })\n                .then(function () {\n                    resolve();\n                    poller && clearInterval(poller);\n                });\n\n            attr(this$1.el, 'src', (\"\" + (this$1.el.src) + (includes(this$1.el.src, '?') ? '&' : '?') + (youtube ? 'enablejsapi=1' : (\"api=1&player_id=\" + id))));\n\n        });\n\n    }\n\n    return Promise.resolve();\n\n};\n\nPlayer.prototype.play = function play () {\n        var this$1 = this;\n\n\n    if (!this.isVideo()) {\n        return;\n    }\n\n    if (this.isIFrame()) {\n        this.enableApi().then(function () { return post(this$1.el, {func: 'playVideo', method: 'play'}); });\n    } else if (this.isHTML5()) {\n        try {\n            this.el.play();\n        } catch (e) {}\n    }\n};\n\nPlayer.prototype.pause = function pause () {\n        var this$1 = this;\n\n\n    if (!this.isVideo()) {\n        return;\n    }\n\n    if (this.isIFrame()) {\n        this.enableApi().then(function () { return post(this$1.el, {func: 'pauseVideo', method: 'pause'}); });\n    } else if (this.isHTML5()) {\n        this.el.pause();\n    }\n};\n\nPlayer.prototype.mute = function mute () {\n        var this$1 = this;\n\n\n    if (!this.isVideo()) {\n        return;\n    }\n\n    if (this.isIFrame()) {\n        this.enableApi().then(function () { return post(this$1.el, {func: 'mute', method: 'setVolume', value: 0}); });\n    } else if (this.isHTML5()) {\n        this.el.muted = true;\n        attr(this.el, 'muted', '');\n    }\n\n};\n\nfunction post(el, cmd) {\n    try {\n        el.contentWindow.postMessage(JSON.stringify(assign({event: 'command'}, cmd)), '*');\n    } catch (e) {}\n}\n\nfunction listen(cb) {\n\n    return new Promise(function (resolve) {\n\n        once(win, 'message', function (_, data$$1) { return resolve(data$$1); }, false, function (ref) {\n            var data$$1 = ref.data;\n\n\n            if (!data$$1 || !isString(data$$1)) {\n                return;\n            }\n\n            try {\n                data$$1 = JSON.parse(data$$1);\n            } catch (e) {\n                return;\n            }\n\n            return data$$1 && cb(data$$1);\n\n        });\n\n    });\n\n}\n\n/*\n    Based on:\n    Copyright (c) 2010-2016 Thomas Fuchs\n    http://zeptojs.com/\n*/\nvar touch = {};\nvar clickTimeout;\nvar swipeTimeout;\nvar tapTimeout;\nvar clicked;\n\nfunction swipeDirection(ref) {\n    var x1 = ref.x1;\n    var x2 = ref.x2;\n    var y1 = ref.y1;\n    var y2 = ref.y2;\n\n    return Math.abs(x1 - x2) >= Math.abs(y1 - y2) ? (x1 - x2 > 0 ? 'Left' : 'Right') : (y1 - y2 > 0 ? 'Up' : 'Down');\n}\n\nfunction cancelAll() {\n    clickTimeout && clearTimeout(clickTimeout);\n    swipeTimeout && clearTimeout(swipeTimeout);\n    tapTimeout && clearTimeout(tapTimeout);\n    clickTimeout = swipeTimeout = tapTimeout = null;\n    touch = {};\n}\n\nready(function () {\n\n    on(doc, 'click', function () { return clicked = true; }, true);\n\n    on(doc, pointerDown, function (e) {\n\n        var target = e.target;\n        var ref = getPos$1(e);\n        var x = ref.x;\n        var y = ref.y;\n        var now = Date.now();\n        var type = getType(e.type);\n\n        if (touch.type && touch.type !== type) {\n            return;\n        }\n\n        touch.el = 'tagName' in target ? target : target.parentNode;\n\n        clickTimeout && clearTimeout(clickTimeout);\n\n        touch.x1 = x;\n        touch.y1 = y;\n\n        if (touch.last && now - touch.last <= 250) {\n            touch = {};\n        }\n\n        touch.type = type;\n        touch.last = now;\n\n        clicked = e.button > 0;\n\n    });\n\n    on(doc, pointerMove, function (e) {\n\n        if (e.defaultPrevented) {\n            return;\n        }\n\n        var ref = getPos$1(e);\n        var x = ref.x;\n        var y = ref.y;\n\n        touch.x2 = x;\n        touch.y2 = y;\n\n    });\n\n    on(doc, pointerUp, function (ref) {\n        var type = ref.type;\n        var target = ref.target;\n\n\n        if (touch.type !== getType(type)) {\n            return;\n        }\n\n        // swipe\n        if (touch.x2 && Math.abs(touch.x1 - touch.x2) > 30 || touch.y2 && Math.abs(touch.y1 - touch.y2) > 30) {\n\n            swipeTimeout = setTimeout(function () {\n                if (touch.el) {\n                    trigger(touch.el, 'swipe');\n                    trigger(touch.el, (\"swipe\" + (swipeDirection(touch))));\n                }\n                touch = {};\n            });\n\n        // normal tap\n        } else if ('last' in touch) {\n\n            tapTimeout = setTimeout(function () { return trigger(touch.el, 'tap'); });\n\n            // trigger single click after 350ms of inactivity\n            if (touch.el && type !== 'mouseup' && within(target, touch.el)) {\n                clickTimeout = setTimeout(function () {\n                    clickTimeout = null;\n                    if (touch.el && !clicked) {\n                        trigger(touch.el, 'click');\n                    }\n                    touch = {};\n                }, 350);\n            }\n\n        } else {\n            touch = {};\n        }\n\n    });\n\n    on(doc, 'touchcancel', cancelAll);\n    on(win, 'scroll', cancelAll);\n\n});\n\nvar touching = false;\non(doc, 'touchstart', function () { return touching = true; }, true);\non(doc, 'click', function () {touching = false;});\non(doc, 'touchcancel', function () { return touching = false; }, true);\n\nfunction isTouch(e) {\n    return touching || e.pointerType === 'touch';\n}\n\nfunction getPos$1(e) {\n    var touches = e.touches;\n    var changedTouches = e.changedTouches;\n    var ref = touches && touches[0] || changedTouches && changedTouches[0] || e;\n    var x = ref.pageX;\n    var y = ref.pageY;\n\n    return {x: x, y: y};\n}\n\nfunction getType(type) {\n    return type.slice(0, 5);\n}\n\n\n\nvar util = Object.freeze({\n\tajax: ajax,\n\ttransition: transition,\n\tTransition: Transition,\n\tanimate: animate,\n\tAnimation: Animation,\n\tattr: attr,\n\thasAttr: hasAttr,\n\tremoveAttr: removeAttr,\n\tfilterAttr: filterAttr,\n\tdata: data,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\tremoveClasses: removeClasses,\n\treplaceClass: replaceClass,\n\thasClass: hasClass,\n\ttoggleClass: toggleClass,\n\t$: $,\n\t$$: $$,\n\tpositionAt: positionAt,\n\toffset: offset,\n\tposition: position,\n\theight: height,\n\twidth: width,\n\tflipPosition: flipPosition,\n\tisInView: isInView,\n\tscrolledOver: scrolledOver,\n\tisReady: isReady,\n\tready: ready,\n\tindex: index,\n\tgetIndex: getIndex,\n\tempty: empty,\n\thtml: html,\n\tprepend: prepend,\n\tappend: append,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\twrapAll: wrapAll,\n\twrapInner: wrapInner,\n\tunwrap: unwrap,\n\tfragment: fragment,\n\twin: win,\n\tdoc: doc,\n\tdocEl: docEl,\n\tisRtl: isRtl,\n\tObserver: Observer,\n\thasTouch: hasTouch,\n\tpointerDown: pointerDown,\n\tpointerMove: pointerMove,\n\tpointerUp: pointerUp,\n\tpointerEnter: pointerEnter,\n\tpointerLeave: pointerLeave,\n\tgetImage: getImage,\n\tsupports: supports,\n\ton: on,\n\toff: off,\n\tonce: once,\n\ttrigger: trigger,\n\tcreateEvent: createEvent,\n\ttoEventTargets: toEventTargets,\n\tpreventClick: preventClick,\n\tfastdom: fastdom,\n\tisVoidElement: isVoidElement,\n\tisVisible: isVisible,\n\tselInput: selInput,\n\tisInput: isInput,\n\tfilter: filter,\n\twithin: within,\n\tbind: bind,\n\thasOwn: hasOwn,\n\thyphenate: hyphenate,\n\tcamelize: camelize,\n\tucfirst: ucfirst,\n\tstartsWith: startsWith,\n\tendsWith: endsWith,\n\tincludes: includes,\n\tisArray: isArray,\n\tisFunction: isFunction,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tisWindow: isWindow,\n\tisDocument: isDocument,\n\tisJQuery: isJQuery,\n\tisNode: isNode,\n\tisNodeCollection: isNodeCollection,\n\tisBoolean: isBoolean,\n\tisString: isString,\n\tisNumber: isNumber,\n\tisNumeric: isNumeric,\n\tisUndefined: isUndefined,\n\ttoBoolean: toBoolean,\n\ttoNumber: toNumber,\n\ttoFloat: toFloat,\n\ttoNode: toNode,\n\ttoNodes: toNodes,\n\ttoList: toList,\n\ttoMs: toMs,\n\tswap: swap,\n\tassign: assign,\n\teach: each,\n\tsortBy: sortBy,\n\tclamp: clamp,\n\tnoop: noop,\n\tintersectRect: intersectRect,\n\tpointInRect: pointInRect,\n\tDimensions: Dimensions,\n\tMouseTracker: MouseTracker,\n\tmergeOptions: mergeOptions,\n\tPlayer: Player,\n\tPromise: Promise,\n\tDeferred: Deferred,\n\tquery: query,\n\tqueryAll: queryAll,\n\tfind: find,\n\tfindAll: findAll,\n\tmatches: matches,\n\tclosest: closest,\n\tparents: parents,\n\tescape: escape,\n\tcss: css,\n\tgetStyles: getStyles,\n\tgetStyle: getStyle,\n\tgetCssVar: getCssVar,\n\tpropName: propName,\n\tisTouch: isTouch,\n\tgetPos: getPos$1\n});\n\nfunction componentAPI (UIkit) {\n\n    var DATA = UIkit.data;\n\n    UIkit.components = {};\n\n    UIkit.component = function (id, options) {\n\n        var name = camelize(id);\n\n        if (isPlainObject(options)) {\n            options.name = name;\n            options = UIkit.extend(options);\n        } else if (isUndefined(options)) {\n            return UIkit.components[name];\n        } else {\n            options.options.name = name;\n        }\n\n        UIkit.components[name] = options;\n\n        UIkit[name] = function (element, data) {\n            var i = arguments.length, argsArray = Array(i);\n            while ( i-- ) argsArray[i] = arguments[i];\n\n\n            if (isPlainObject(element)) {\n                return new UIkit.components[name]({data: element});\n            }\n\n            if (UIkit.components[name].options.functional) {\n                return new UIkit.components[name]({data: [].concat( argsArray )});\n            }\n\n            return element && element.nodeType ? init(element) : $$(element).map(init)[0];\n\n            function init(element) {\n\n                var cmp = UIkit.getComponent(element, name);\n\n                if (cmp && data) {\n                    cmp.$reset(data);\n                }\n\n                return cmp || new UIkit.components[name]({el: element, data: data || {}});\n            }\n\n        };\n\n        if (UIkit._initialized && !options.options.functional) {\n            fastdom.read(function () { return UIkit[name]((\"[uk-\" + id + \"],[data-uk-\" + id + \"]\")); });\n        }\n\n        return UIkit.components[name];\n    };\n\n    UIkit.getComponents = function (element) { return element && (element = isJQuery(element) ? element[0] : element) && element[DATA] || {}; };\n    UIkit.getComponent = function (element, name) { return UIkit.getComponents(element)[name]; };\n\n    UIkit.connect = function (node) {\n\n        if (node[DATA]) {\n            for (var name in node[DATA]) {\n                node[DATA][name]._callConnected();\n            }\n        }\n\n        for (var i = 0; i < node.attributes.length; i++) {\n\n            var name$1 = getComponentName(node.attributes[i].name);\n\n            if (name$1 && name$1 in UIkit.components) {\n                UIkit[name$1](node);\n            }\n\n        }\n\n    };\n\n    UIkit.disconnect = function (node) {\n        for (var name in node[DATA]) {\n            node[DATA][name]._callDisconnected();\n        }\n    };\n\n}\n\nfunction getComponentName(attribute) {\n    return startsWith(attribute, 'uk-') || startsWith(attribute, 'data-uk-')\n        ? camelize(attribute.replace('data-uk-', '').replace('uk-', ''))\n        : false;\n}\n\nfunction boot (UIkit) {\n\n    var connect = UIkit.connect;\n    var disconnect = UIkit.disconnect;\n\n    if (!Observer) {\n        return;\n    }\n\n    if (doc.body) {\n\n        init();\n\n    } else {\n\n        (new Observer(function () {\n\n            if (doc.body) {\n                this.disconnect();\n                init();\n            }\n\n        })).observe(docEl, {childList: true, subtree: true});\n\n    }\n\n    function init() {\n\n        apply(doc.body, connect);\n\n        fastdom.flush();\n\n        (new Observer(function (mutations) { return mutations.forEach(applyMutation); })).observe(docEl, {\n            childList: true,\n            subtree: true,\n            characterData: true,\n            attributes: true\n        });\n\n        UIkit._initialized = true;\n    }\n\n    function applyMutation(mutation) {\n\n        var target = mutation.target;\n        var type = mutation.type;\n\n        var update = type !== 'attributes'\n            ? applyChildList(mutation)\n            : applyAttribute(mutation);\n\n        update && UIkit.update('update', target, true);\n\n    }\n\n    function applyAttribute(ref) {\n        var target = ref.target;\n        var attributeName = ref.attributeName;\n\n\n        if (attributeName === 'href') {\n            return true;\n        }\n\n        var name = getComponentName(attributeName);\n\n        if (!name || !(name in UIkit.components)) {\n            return;\n        }\n\n        if (hasAttr(target, attributeName)) {\n            UIkit[name](target);\n            return true;\n        }\n\n        var component = UIkit.getComponent(target, name);\n\n        if (component) {\n            component.$destroy();\n            return true;\n        }\n\n    }\n\n    function applyChildList(ref) {\n        var addedNodes = ref.addedNodes;\n        var removedNodes = ref.removedNodes;\n\n\n        for (var i = 0; i < addedNodes.length; i++) {\n            apply(addedNodes[i], connect);\n        }\n\n        for (var i$1 = 0; i$1 < removedNodes.length; i$1++) {\n            apply(removedNodes[i$1], disconnect);\n        }\n\n        return true;\n    }\n    function apply(node, fn) {\n\n        if (node.nodeType !== 1 || hasAttr(node, 'uk-no-boot')) {\n            return;\n        }\n\n        fn(node);\n        node = node.firstElementChild;\n        while (node) {\n            var next = node.nextElementSibling;\n            apply(node, fn);\n            node = next;\n        }\n    }\n\n}\n\nfunction globalAPI (UIkit) {\n\n    var DATA = UIkit.data;\n\n    UIkit.use = function (plugin) {\n\n        if (plugin.installed) {\n            return;\n        }\n\n        plugin.call(null, this);\n        plugin.installed = true;\n\n        return this;\n    };\n\n    UIkit.mixin = function (mixin, component) {\n        component = (isString(component) ? UIkit.components[component] : component) || this;\n        mixin = mergeOptions({}, mixin);\n        mixin.mixins = component.options.mixins;\n        delete component.options.mixins;\n        component.options = mergeOptions(mixin, component.options);\n    };\n\n    UIkit.extend = function (options) {\n\n        options = options || {};\n\n        var Super = this;\n        var Sub = function UIkitComponent (options) {\n            this._init(options);\n        };\n\n        Sub.prototype = Object.create(Super.prototype);\n        Sub.prototype.constructor = Sub;\n        Sub.options = mergeOptions(Super.options, options);\n\n        Sub['super'] = Super;\n        Sub.extend = Super.extend;\n\n        return Sub;\n    };\n\n    UIkit.update = function (e, element, parents) {\n        if ( parents === void 0 ) parents = false;\n\n\n        e = createEvent(e || 'update');\n\n        if (!element) {\n\n            update(UIkit.instances, e);\n            return;\n\n        }\n\n        element = toNode(element);\n\n        if (parents) {\n\n            do {\n\n                update(element[DATA], e);\n                element = element.parentNode;\n\n            } while (element);\n\n        } else {\n\n            apply(element, function (element) { return update(element[DATA], e); });\n\n        }\n\n    };\n\n    var container;\n    Object.defineProperty(UIkit, 'container', {\n\n        get: function get() {\n            return container || doc.body;\n        },\n\n        set: function set(element) {\n            container = $(element);\n        }\n\n    });\n\n    function apply(node, fn) {\n\n        if (node.nodeType !== 1) {\n            return;\n        }\n\n        fn(node);\n        node = node.firstElementChild;\n        while (node) {\n            apply(node, fn);\n            node = node.nextElementSibling;\n        }\n    }\n\n    function update(data, e) {\n\n        if (!data) {\n            return;\n        }\n\n        for (var name in data) {\n            if (data[name]._isReady) {\n                data[name]._callUpdate(e);\n            }\n        }\n\n    }\n\n}\n\nfunction hooksAPI (UIkit) {\n\n    UIkit.prototype._callHook = function (hook) {\n        var this$1 = this;\n\n\n        var handlers = this.$options[hook];\n\n        if (handlers) {\n            handlers.forEach(function (handler) { return handler.call(this$1); });\n        }\n    };\n\n    UIkit.prototype._callConnected = function () {\n        var this$1 = this;\n\n\n        if (this._connected) {\n            return;\n        }\n\n        if (!includes(UIkit.elements, this.$options.el)) {\n            UIkit.elements.push(this.$options.el);\n        }\n\n        UIkit.instances[this._uid] = this;\n\n        this._data = {};\n\n        this._callHook('beforeConnect');\n        this._connected = true;\n\n        this._initEvents();\n        this._initObserver();\n\n        this._callHook('connected');\n\n        if (!this._isReady) {\n            ready(function () { return this$1._callReady(); });\n        }\n\n        this._callUpdate();\n    };\n\n    UIkit.prototype._callDisconnected = function () {\n\n        if (!this._connected) {\n            return;\n        }\n\n        this._callHook('beforeDisconnect');\n\n        if (this._observer) {\n            this._observer.disconnect();\n            this._observer = null;\n        }\n\n        var index = UIkit.elements.indexOf(this.$options.el);\n\n        if (~index) {\n            UIkit.elements.splice(index, 1);\n        }\n\n        delete UIkit.instances[this._uid];\n\n        this._unbindEvents();\n        this._callHook('disconnected');\n\n        this._connected = false;\n\n    };\n\n    UIkit.prototype._callReady = function () {\n\n        if (this._isReady) {\n            return;\n        }\n\n        this._isReady = true;\n        this._callHook('ready');\n        this._resetComputeds();\n        this._callUpdate();\n    };\n\n    UIkit.prototype._callUpdate = function (e) {\n        var this$1 = this;\n\n\n        e = createEvent(e || 'update');\n\n        var type = e.type;\n\n        if (includes(['update', 'load', 'resize'], type)) {\n            this._resetComputeds();\n        }\n\n        var updates = this.$options.update;\n        var ref = this._frames;\n        var reads = ref.reads;\n        var writes = ref.writes;\n\n        if (!updates) {\n            return;\n        }\n\n        updates.forEach(function (ref, i) {\n            var read = ref.read;\n            var write = ref.write;\n            var events = ref.events;\n\n\n            if (type !== 'update' && !includes(events, type)) {\n                return;\n            }\n\n            if (read && !includes(fastdom.reads, reads[i])) {\n                reads[i] = fastdom.read(function () {\n\n                    var result = read.call(this$1, this$1._data, e);\n\n                    if (result === false && write) {\n                        fastdom.clear(writes[i]);\n                        delete writes[i];\n                    } else if (isPlainObject(result)) {\n                        assign(this$1._data, result);\n                    }\n                    delete reads[i];\n                });\n            }\n\n            if (write && !includes(fastdom.writes, writes[i])) {\n                writes[i] = fastdom.write(function () {\n                    write.call(this$1, this$1._data, e);\n                    delete writes[i];\n                });\n            }\n\n        });\n\n    };\n\n}\n\nfunction stateAPI (UIkit) {\n\n    var uid = 0;\n\n    UIkit.prototype.props = {};\n\n    UIkit.prototype._init = function (options) {\n\n        options = options || {};\n        options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n        this.$el = null;\n        this.$name = UIkit.prefix + hyphenate(this.$options.name);\n        this.$props = {};\n\n        this._frames = {reads: {}, writes: {}};\n        this._events = [];\n\n        this._uid = uid++;\n        this._initData();\n        this._initMethods();\n        this._initComputeds();\n        this._callHook('created');\n\n        if (options.el) {\n            this.$mount(options.el);\n        }\n    };\n\n    UIkit.prototype._initData = function () {\n        var this$1 = this;\n\n\n        var ref = this.$options;\n        var defaults = ref.defaults;\n        var data$$1 = ref.data; if ( data$$1 === void 0 ) data$$1 = {};\n        var args = ref.args; if ( args === void 0 ) args = [];\n        var props = ref.props; if ( props === void 0 ) props = {};\n        var el = ref.el;\n\n        if (args.length && isArray(data$$1)) {\n            data$$1 = data$$1.slice(0, args.length).reduce(function (data$$1, value, index) {\n                if (isPlainObject(value)) {\n                    assign(data$$1, value);\n                } else {\n                    data$$1[args[index]] = value;\n                }\n                return data$$1;\n            }, {});\n        }\n\n        for (var key in assign({}, defaults, props)) {\n            this$1.$props[key] = this$1[key] = hasOwn(data$$1, key) && !isUndefined(data$$1[key])\n                ? coerce(props[key], data$$1[key], el)\n                : defaults\n                    ? defaults[key] && isArray(defaults[key])\n                        ? defaults[key].concat()\n                        : defaults[key]\n                    : null;\n        }\n    };\n\n    UIkit.prototype._initMethods = function () {\n        var this$1 = this;\n\n\n        var ref = this.$options;\n        var methods = ref.methods;\n\n        if (methods) {\n            for (var key in methods) {\n                this$1[key] = bind(methods[key], this$1);\n            }\n        }\n    };\n\n    UIkit.prototype._initComputeds = function () {\n        var this$1 = this;\n\n\n        var ref = this.$options;\n        var computed = ref.computed;\n\n        this._resetComputeds();\n\n        if (computed) {\n            for (var key in computed) {\n                registerComputed(this$1, key, computed[key]);\n            }\n        }\n    };\n\n    UIkit.prototype._resetComputeds = function () {\n        this._computeds = {};\n    };\n\n    UIkit.prototype._initProps = function (props) {\n        var this$1 = this;\n\n\n        var key;\n\n        this._resetComputeds();\n\n        props = props || getProps(this.$options, this.$name);\n\n        for (key in props) {\n            if (!isUndefined(props[key])) {\n                this$1.$props[key] = props[key];\n            }\n        }\n\n        var exclude = [this.$options.computed, this.$options.methods];\n        for (key in this$1.$props) {\n            if (key in props && notIn(exclude, key)) {\n                this$1[key] = this$1.$props[key];\n            }\n        }\n    };\n\n    UIkit.prototype._initEvents = function () {\n        var this$1 = this;\n\n\n        var ref = this.$options;\n        var events = ref.events;\n\n        if (events) {\n\n            events.forEach(function (event) {\n\n                if (!hasOwn(event, 'handler')) {\n                    for (var key in event) {\n                        registerEvent(this$1, event[key], key);\n                    }\n                } else {\n                    registerEvent(this$1, event);\n                }\n\n            });\n        }\n    };\n\n    UIkit.prototype._unbindEvents = function () {\n        this._events.forEach(function (unbind) { return unbind(); });\n        this._events = [];\n    };\n\n    UIkit.prototype._initObserver = function () {\n        var this$1 = this;\n\n\n        var ref = this.$options;\n        var attrs = ref.attrs;\n        var props = ref.props;\n        var el = ref.el;\n        if (this._observer || !props || !attrs || !Observer) {\n            return;\n        }\n\n        attrs = isArray(attrs) ? attrs : Object.keys(props).map(function (key) { return hyphenate(key); });\n\n        this._observer = new Observer(function () {\n\n            var data$$1 = getProps(this$1.$options, this$1.$name);\n            if (attrs.some(function (key) { return !isUndefined(data$$1[key]) && data$$1[key] !== this$1.$props[key]; })) {\n                this$1.$reset(data$$1);\n            }\n\n        });\n\n        this._observer.observe(el, {attributes: true, attributeFilter: attrs.concat([this.$name, (\"data-\" + (this.$name))])});\n    };\n\n    function getProps(opts, name) {\n\n        var data$$1 = {};\n        var args = opts.args; if ( args === void 0 ) args = [];\n        var props = opts.props; if ( props === void 0 ) props = {};\n        var el = opts.el;\n\n        if (!props) {\n            return data$$1;\n        }\n\n        for (var key in props) {\n            var prop = hyphenate(key);\n            if (hasAttr(el, prop)) {\n\n                var value = coerce(props[key], attr(el, prop), el);\n\n                if (prop === 'target' && (!value || startsWith(value, '_'))) {\n                    continue;\n                }\n\n                data$$1[key] = value;\n            }\n        }\n\n        var options = parseOptions(data(el, name), args);\n\n        for (var key$1 in options) {\n            var prop$1 = camelize(key$1);\n            if (props[prop$1] !== undefined) {\n                data$$1[prop$1] = coerce(props[prop$1], options[key$1], el);\n            }\n        }\n\n        return data$$1;\n    }\n\n    function parseOptions(options, args) {\n        var obj;\n\n        if ( args === void 0 ) args = [];\n\n        try {\n\n            return !options\n                ? {}\n                : startsWith(options, '{')\n                    ? JSON.parse(options)\n                    : args.length && !includes(options, ':')\n                        ? (( obj = {}, obj[args[0]] = options, obj))\n                        : options.split(';').reduce(function (options, option) {\n                            var ref = option.split(/:(.+)/);\n                            var key = ref[0];\n                            var value = ref[1];\n                            if (key && value) {\n                                options[key.trim()] = value.trim();\n                            }\n                            return options;\n                        }, {});\n\n        } catch (e) {\n            return {};\n        }\n\n    }\n\n    function registerComputed(component, key, cb) {\n        Object.defineProperty(component, key, {\n\n            enumerable: true,\n\n            get: function get() {\n\n                var _computeds = component._computeds;\n                var $props = component.$props;\n                var $el = component.$el;\n\n                if (!hasOwn(_computeds, key)) {\n                    _computeds[key] = cb.call(component, $props, $el);\n                }\n\n                return _computeds[key];\n            },\n\n            set: function set(value) {\n                component._computeds[key] = value;\n            }\n\n        });\n    }\n\n    function registerEvent(component, event, key) {\n\n        if (!isPlainObject(event)) {\n            event = ({name: key, handler: event});\n        }\n\n        var name = event.name;\n        var el = event.el;\n        var handler = event.handler;\n        var capture = event.capture;\n        var delegate = event.delegate;\n        var filter = event.filter;\n        var self = event.self;\n        el = isFunction(el)\n            ? el.call(component)\n            : el || component.$el;\n\n        if (isArray(el)) {\n            el.forEach(function (el) { return registerEvent(component, assign({}, event, {el: el}), key); });\n            return;\n        }\n\n        if (!el || filter && !filter.call(component)) {\n            return;\n        }\n\n        handler = detail(isString(handler) ? component[handler] : bind(handler, component));\n\n        if (self) {\n            handler = selfFilter(handler);\n        }\n\n        component._events.push(\n            on(\n                el,\n                name,\n                !delegate\n                    ? null\n                    : isString(delegate)\n                        ? delegate\n                        : delegate.call(component),\n                handler,\n                capture\n            )\n        );\n\n    }\n\n    function selfFilter(handler) {\n        return function selfHandler(e) {\n            if (e.target === e.currentTarget || e.target === e.current) {\n                return handler.call(null, e);\n            }\n        };\n    }\n\n    function notIn(options, key) {\n        return options.every(function (arr) { return !arr || !hasOwn(arr, key); });\n    }\n\n    function detail(listener) {\n        return function (e) { return isArray(e.detail) ? listener.apply(void 0, [e].concat(e.detail)) : listener(e); };\n    }\n\n    function coerce(type, value, context) {\n\n        if (type === Boolean) {\n            return toBoolean(value);\n        } else if (type === Number) {\n            return toNumber(value);\n        } else if (type === 'query') {\n            return query(value, context);\n        } else if (type === 'list') {\n            return toList(value);\n        } else if (type === 'media') {\n            return toMedia(value);\n        }\n\n        return type ? type(value) : value;\n    }\n\n    function toMedia(value) {\n\n        if (isString(value)) {\n            if (value[0] === '@') {\n                var name = \"media-\" + (value.substr(1));\n                value = toFloat(getCssVar(name));\n            } else if (isNaN(value)) {\n                return value;\n            }\n        }\n\n        return value && !isNaN(value) ? (\"(min-width: \" + value + \"px)\") : false;\n    }\n\n}\n\nfunction instanceAPI (UIkit) {\n\n    var DATA = UIkit.data;\n\n    UIkit.prototype.$mount = function (el) {\n\n        var ref = this.$options;\n        var name = ref.name;\n\n        if (!el[DATA]) {\n            el[DATA] = {};\n        }\n\n        if (el[DATA][name]) {\n            return;\n        }\n\n        el[DATA][name] = this;\n\n        this.$el = this.$options.el = this.$options.el || el;\n\n        this._initProps();\n\n        this._callHook('init');\n\n        if (within(el, docEl)) {\n            this._callConnected();\n        }\n    };\n\n    UIkit.prototype.$emit = function (e) {\n        this._callUpdate(e);\n    };\n\n    UIkit.prototype.$update = function (e, parents) {\n        UIkit.update(e, this.$options.el, parents);\n    };\n\n    UIkit.prototype.$reset = function (data) {\n        this._callDisconnected();\n        this._initProps(data);\n        this._callConnected();\n    };\n\n    UIkit.prototype.$destroy = function (removeEl) {\n        if ( removeEl === void 0 ) removeEl = false;\n\n\n        var ref = this.$options;\n        var el = ref.el;\n        var name = ref.name;\n\n        if (el) {\n            this._callDisconnected();\n        }\n\n        this._callHook('destroy');\n\n        if (!el || !el[DATA]) {\n            return;\n        }\n\n        delete el[DATA][name];\n\n        if (!Object.keys(el[DATA]).length) {\n            delete el[DATA];\n        }\n\n        if (removeEl) {\n            remove(this.$el);\n        }\n    };\n\n}\n\nvar UIkit$2 = function (options) {\n    this._init(options);\n};\n\nUIkit$2.util = util;\nUIkit$2.data = '__uikit__';\nUIkit$2.prefix = 'uk-';\nUIkit$2.options = {};\nUIkit$2.instances = {};\nUIkit$2.elements = [];\n\nglobalAPI(UIkit$2);\nhooksAPI(UIkit$2);\nstateAPI(UIkit$2);\ninstanceAPI(UIkit$2);\ncomponentAPI(UIkit$2);\n\nvar Class = {\n\n    init: function init() {\n        addClass(this.$el, this.$name);\n    }\n\n};\n\nvar Container = {\n\n    props: {\n        container: Boolean\n    },\n\n    defaults: {\n        container: true\n    },\n\n    computed: {\n\n        container: function container(ref) {\n            var container = ref.container;\n\n            return container === true && UIkit$2.container || container && $(container);\n        }\n\n    }\n\n};\n\nvar Togglable = {\n\n    props: {\n        cls: Boolean,\n        animation: 'list',\n        duration: Number,\n        origin: String,\n        transition: String,\n        queued: Boolean\n    },\n\n    defaults: {\n        cls: false,\n        animation: [false],\n        duration: 200,\n        origin: false,\n        transition: 'linear',\n        queued: false,\n\n        initProps: {\n            overflow: '',\n            height: '',\n            paddingTop: '',\n            paddingBottom: '',\n            marginTop: '',\n            marginBottom: ''\n        },\n\n        hideProps: {\n            overflow: 'hidden',\n            height: 0,\n            paddingTop: 0,\n            paddingBottom: 0,\n            marginTop: 0,\n            marginBottom: 0\n        }\n\n    },\n\n    computed: {\n\n        hasAnimation: function hasAnimation(ref) {\n            var animation = ref.animation;\n\n            return !!animation[0];\n        },\n\n        hasTransition: function hasTransition(ref) {\n            var animation = ref.animation;\n\n            return this.hasAnimation && animation[0] === true;\n        }\n\n    },\n\n    methods: {\n\n        toggleElement: function toggleElement(targets, show, animate) {\n            var this$1 = this;\n\n            return new Promise(function (resolve) {\n\n                targets = toNodes(targets);\n\n                var all = function (targets) { return Promise.all(targets.map(function (el) { return this$1._toggleElement(el, show, animate); })); };\n                var toggled = targets.filter(function (el) { return this$1.isToggled(el); });\n                var untoggled = targets.filter(function (el) { return !includes(toggled, el); });\n\n                var p;\n\n                if (!this$1.queued || !isUndefined(animate) || !isUndefined(show) || !this$1.hasAnimation || targets.length < 2) {\n\n                    p = all(untoggled.concat(toggled));\n\n                } else {\n\n                    var body = doc.body;\n                    var scroll = body.scrollTop;\n                    var el = toggled[0];\n                    var inProgress = Animation.inProgress(el) && hasClass(el, 'uk-animation-leave')\n                            || Transition.inProgress(el) && el.style.height === '0px';\n\n                    p = all(toggled);\n\n                    if (!inProgress) {\n                        p = p.then(function () {\n                            var p = all(untoggled);\n                            body.scrollTop = scroll;\n                            return p;\n                        });\n                    }\n\n                }\n\n                p.then(resolve, noop);\n\n            });\n        },\n\n        toggleNow: function toggleNow(targets, show) {\n            var this$1 = this;\n\n            return new Promise(function (resolve) { return Promise.all(toNodes(targets).map(function (el) { return this$1._toggleElement(el, show, false); })).then(resolve, noop); });\n        },\n\n        isToggled: function isToggled(el) {\n            var nodes = toNodes(el || this.$el);\n            return this.cls\n                ? hasClass(nodes, this.cls.split(' ')[0])\n                : !hasAttr(nodes, 'hidden');\n        },\n\n        updateAria: function updateAria(el) {\n            if (this.cls === false) {\n                attr(el, 'aria-hidden', !this.isToggled(el));\n            }\n        },\n\n        _toggleElement: function _toggleElement(el, show, animate) {\n            var this$1 = this;\n\n\n            show = isBoolean(show)\n                ? show\n                : Animation.inProgress(el)\n                    ? hasClass(el, 'uk-animation-leave')\n                    : Transition.inProgress(el)\n                        ? el.style.height === '0px'\n                        : !this.isToggled(el);\n\n            if (!trigger(el, (\"before\" + (show ? 'show' : 'hide')), [this])) {\n                return Promise.reject();\n            }\n\n            var promise = (animate === false || !this.hasAnimation\n                ? this._toggleImmediate\n                : this.hasTransition\n                    ? this._toggleHeight\n                    : this._toggleAnimation\n            )(el, show);\n\n            trigger(el, show ? 'show' : 'hide', [this]);\n\n            return promise.then(function () {\n                trigger(el, show ? 'shown' : 'hidden', [this$1]);\n                UIkit$2.update(null, el);\n            });\n        },\n\n        _toggle: function _toggle(el, toggled) {\n\n            if (!el) {\n                return;\n            }\n\n            if (this.cls) {\n                toggleClass(el, this.cls, includes(this.cls, ' ') ? undefined : toggled);\n            } else {\n                attr(el, 'hidden', !toggled ? '' : null);\n            }\n\n            $$('[autofocus]', el).some(function (el) { return isVisible(el) && (el.focus() || true); });\n\n            this.updateAria(el);\n            UIkit$2.update(null, el);\n        },\n\n        _toggleImmediate: function _toggleImmediate(el, show) {\n            this._toggle(el, show);\n            return Promise.resolve();\n        },\n\n        _toggleHeight: function _toggleHeight(el, show) {\n            var this$1 = this;\n\n\n            var inProgress = Transition.inProgress(el);\n            var inner = el.hasChildNodes ? toFloat(css(el.firstElementChild, 'marginTop')) + toFloat(css(el.lastElementChild, 'marginBottom')) : 0;\n            var currentHeight = isVisible(el) ? height(el) + (inProgress ? 0 : inner) : 0;\n\n            Transition.cancel(el);\n\n            if (!this.isToggled(el)) {\n                this._toggle(el, true);\n            }\n\n            height(el, '');\n\n            // Update child components first\n            fastdom.flush();\n\n            var endHeight = height(el) + (inProgress ? 0 : inner);\n            height(el, currentHeight);\n\n            return (show\n                ? Transition.start(el, assign({}, this.initProps, {overflow: 'hidden', height: endHeight}), Math.round(this.duration * (1 - currentHeight / endHeight)), this.transition)\n                : Transition.start(el, this.hideProps, Math.round(this.duration * (currentHeight / endHeight)), this.transition).then(function () { return this$1._toggle(el, false); })\n            ).then(function () { return css(el, this$1.initProps); });\n\n        },\n\n        _toggleAnimation: function _toggleAnimation(el, show) {\n            var this$1 = this;\n\n\n            Animation.cancel(el);\n\n            if (show) {\n                this._toggle(el, true);\n                return Animation.in(el, this.animation[0], this.duration, this.origin);\n            }\n\n            return Animation.out(el, this.animation[1] || this.animation[0], this.duration, this.origin).then(function () { return this$1._toggle(el, false); });\n        }\n\n    }\n\n};\n\nvar active;\n\nvar Modal = {\n\n    mixins: [Class, Container, Togglable],\n\n    props: {\n        clsPanel: String,\n        selClose: String,\n        escClose: Boolean,\n        bgClose: Boolean,\n        stack: Boolean\n    },\n\n    defaults: {\n        cls: 'uk-open',\n        escClose: true,\n        bgClose: true,\n        overlay: true,\n        stack: false\n    },\n\n    computed: {\n\n        panel: function panel(ref, $el) {\n            var clsPanel = ref.clsPanel;\n\n            return $((\".\" + clsPanel), $el);\n        },\n\n        transitionElement: function transitionElement() {\n            return this.panel;\n        },\n\n        transitionDuration: function transitionDuration() {\n            return toMs(css(this.transitionElement, 'transitionDuration'));\n        }\n\n    },\n\n    events: [\n\n        {\n\n            name: 'click',\n\n            delegate: function delegate() {\n                return this.selClose;\n            },\n\n            handler: function handler(e) {\n                e.preventDefault();\n                this.hide();\n            }\n\n        },\n\n        {\n\n            name: 'toggle',\n\n            self: true,\n\n            handler: function handler(e) {\n\n                if (e.defaultPrevented) {\n                    return;\n                }\n\n                e.preventDefault();\n                this.toggle();\n            }\n\n        },\n\n        {\n            name: 'beforeshow',\n\n            self: true,\n\n            handler: function handler(e) {\n\n                var prev = active && active !== this && active;\n\n                active = this;\n\n                if (prev) {\n                    if (this.stack) {\n                        this.prev = prev;\n                    } else {\n                        prev.hide().then(this.show);\n                        e.preventDefault();\n                        return;\n                    }\n                }\n\n                registerEvents();\n\n            }\n\n        },\n\n        {\n            name: 'beforehide',\n\n            self: true,\n\n            handler: function handler() {\n\n                active = active && active !== this && active || this.prev;\n\n                if (!active) {\n                    deregisterEvents();\n                }\n\n            }\n\n        },\n\n        {\n\n            name: 'show',\n\n            self: true,\n\n            handler: function handler() {\n\n                if (!hasClass(docEl, this.clsPage)) {\n                    this.scrollbarWidth = width(win) - docEl.offsetWidth;\n                    css(doc.body, 'overflowY', this.scrollbarWidth && this.overlay ? 'scroll' : '');\n                }\n\n                addClass(docEl, this.clsPage);\n\n            }\n\n        },\n\n        {\n\n            name: 'hidden',\n\n            self: true,\n\n            handler: function handler() {\n                var this$1 = this;\n\n\n                var found;\n                var ref = this;\n                var prev = ref.prev;\n\n                while (prev) {\n\n                    if (prev.clsPage === this$1.clsPage) {\n                        found = true;\n                        break;\n                    }\n\n                    prev = prev.prev;\n\n                }\n\n                if (!found) {\n                    removeClass(docEl, this.clsPage);\n\n                }\n\n                !this.prev && css(doc.body, 'overflowY', '');\n            }\n\n        }\n\n    ],\n\n    methods: {\n\n        toggle: function toggle() {\n            return this.isToggled() ? this.hide() : this.show();\n        },\n\n        show: function show() {\n\n            if (this.isToggled()) {\n                return;\n            }\n\n            if (this.container && this.$el.parentNode !== this.container) {\n                append(this.container, this.$el);\n                this._callConnected();\n            }\n\n            return this.toggleNow(this.$el, true);\n        },\n\n        hide: function hide() {\n            if (this.isToggled()) {\n                return this.toggleNow(this.$el, false);\n            }\n        },\n\n        getActive: function getActive() {\n            return active;\n        },\n\n        _toggleImmediate: function _toggleImmediate(el, show) {\n            var this$1 = this;\n\n            return new Promise(function (resolve) { return requestAnimationFrame(function () {\n                    this$1._toggle(el, show);\n\n                    if (this$1.transitionDuration) {\n                        once(this$1.transitionElement, 'transitionend', resolve, false, function (e) { return e.target === this$1.transitionElement; });\n                    } else {\n                        resolve();\n                    }\n                }); }\n            );\n        }\n\n    }\n\n};\n\nvar events;\n\nfunction registerEvents() {\n\n    if (events) {\n        return;\n    }\n\n    events = [\n        on(docEl, 'click', function (ref) {\n            var target = ref.target;\n            var defaultPrevented = ref.defaultPrevented;\n\n            if (active && active.bgClose && !defaultPrevented && !within(target, (active.panel || active.$el))) {\n                active.hide();\n            }\n        }),\n        on(doc, 'keydown', function (e) {\n            if (e.keyCode === 27 && active && active.escClose) {\n                e.preventDefault();\n                active.hide();\n            }\n        })\n    ];\n}\n\nfunction deregisterEvents() {\n    events && events.forEach(function (unbind) { return unbind(); });\n    events = null;\n}\n\nvar Position = {\n\n    props: {\n        pos: String,\n        offset: null,\n        flip: Boolean,\n        clsPos: String\n    },\n\n    defaults: {\n        pos: (\"bottom-\" + (!isRtl ? 'left' : 'right')),\n        flip: true,\n        offset: false,\n        clsPos: ''\n    },\n\n    computed: {\n\n        pos: function pos(ref) {\n            var pos = ref.pos;\n\n            return (pos + (!includes(pos, '-') ? '-center' : '')).split('-');\n        },\n\n        dir: function dir() {\n            return this.pos[0];\n        },\n\n        align: function align() {\n            return this.pos[1];\n        }\n\n    },\n\n    methods: {\n\n        positionAt: function positionAt$1(element, target, boundary) {\n\n            removeClasses(element, ((this.clsPos) + \"-(top|bottom|left|right)(-[a-z]+)?\"));\n            css(element, {top: '', left: ''});\n\n            var node;\n            var ref = this;\n            var offset$$1 = ref.offset;\n\n            offset$$1 = isNumeric(offset$$1)\n                ? offset$$1\n                : (node = $(offset$$1))\n                    ? offset(node)[axis === 'x' ? 'left' : 'top'] - offset(target)[axis === 'x' ? 'right' : 'bottom']\n                    : 0;\n\n            var axis = this.getAxis();\n            var ref$1 = positionAt(\n                element,\n                target,\n                axis === 'x' ? ((flipPosition(this.dir)) + \" \" + (this.align)) : ((this.align) + \" \" + (flipPosition(this.dir))),\n                axis === 'x' ? ((this.dir) + \" \" + (this.align)) : ((this.align) + \" \" + (this.dir)),\n                axis === 'x' ? (\"\" + (this.dir === 'left' ? -offset$$1 : offset$$1)) : (\" \" + (this.dir === 'top' ? -offset$$1 : offset$$1)),\n                null,\n                this.flip,\n                boundary\n            ).target;\n            var x = ref$1.x;\n            var y = ref$1.y;\n\n            this.dir = axis === 'x' ? x : y;\n            this.align = axis === 'x' ? y : x;\n\n            toggleClass(element, ((this.clsPos) + \"-\" + (this.dir) + \"-\" + (this.align)), this.offset === false);\n\n        },\n\n        getAxis: function getAxis() {\n            return this.dir === 'top' || this.dir === 'bottom' ? 'y' : 'x';\n        }\n\n    }\n\n};\n\nfunction mixin (UIkit) {\n\n    UIkit.mixin.class = Class;\n    UIkit.mixin.container = Container;\n    UIkit.mixin.modal = Modal;\n    UIkit.mixin.position = Position;\n    UIkit.mixin.togglable = Togglable;\n\n}\n\nfunction Accordion (UIkit) {\n\n    UIkit.component('accordion', {\n\n        mixins: [Class, Togglable],\n\n        props: {\n            targets: String,\n            active: null,\n            collapsible: Boolean,\n            multiple: Boolean,\n            toggle: String,\n            content: String,\n            transition: String\n        },\n\n        defaults: {\n            targets: '> *',\n            active: false,\n            animation: [true],\n            collapsible: true,\n            multiple: false,\n            clsOpen: 'uk-open',\n            toggle: '> .uk-accordion-title',\n            content: '> .uk-accordion-content',\n            transition: 'ease'\n        },\n\n        computed: {\n\n            items: function items(ref, $el) {\n                var targets = ref.targets;\n\n                return $$(targets, $el);\n            }\n\n        },\n\n        events: [\n\n            {\n\n                name: 'click',\n\n                delegate: function delegate() {\n                    return ((this.targets) + \" \" + (this.$props.toggle));\n                },\n\n                handler: function handler(e) {\n                    e.preventDefault();\n                    this.toggle(index($$(((this.targets) + \" \" + (this.$props.toggle)), this.$el), e.current));\n                }\n\n            }\n\n        ],\n\n        connected: function connected() {\n\n            if (this.active === false) {\n                return;\n            }\n\n            var active = this.items[Number(this.active)];\n            if (active && !hasClass(active, this.clsOpen)) {\n                this.toggle(active, false);\n            }\n        },\n\n        update: function update() {\n            var this$1 = this;\n\n\n            this.items.forEach(function (el) { return this$1._toggleImmediate($(this$1.content, el), hasClass(el, this$1.clsOpen)); });\n\n            var active = !this.collapsible && !hasClass(this.items, this.clsOpen) && this.items[0];\n            if (active) {\n                this.toggle(active, false);\n            }\n        },\n\n        methods: {\n\n            toggle: function toggle(item, animate) {\n                var this$1 = this;\n\n\n                var index = getIndex(item, this.items);\n                var active = filter(this.items, (\".\" + (this.clsOpen)));\n\n                item = this.items[index];\n\n                item && [item]\n                    .concat(!this.multiple && !includes(active, item) && active || [])\n                    .forEach(function (el) {\n\n                        var isItem = el === item;\n                        var state = isItem && !hasClass(el, this$1.clsOpen);\n\n                        if (!state && isItem && !this$1.collapsible && active.length < 2) {\n                            return;\n                        }\n\n                        toggleClass(el, this$1.clsOpen, state);\n\n                        var content = el._wrapper ? el._wrapper.firstElementChild : $(this$1.content, el);\n\n                        if (!el._wrapper) {\n                            el._wrapper = wrapAll(content, '<div>');\n                            attr(el._wrapper, 'hidden', state ? '' : null);\n                        }\n\n                        this$1._toggleImmediate(content, true);\n                        this$1.toggleElement(el._wrapper, state, animate).then(function () {\n                            if (hasClass(el, this$1.clsOpen) === state) {\n\n                                if (!state) {\n                                    this$1._toggleImmediate(content, false);\n                                }\n\n                                el._wrapper = null;\n                                unwrap(content);\n                            }\n                        });\n\n                    });\n            }\n\n        }\n\n    });\n\n}\n\nfunction Alert (UIkit) {\n\n    UIkit.component('alert', {\n\n        attrs: true,\n\n        mixins: [Class, Togglable],\n\n        args: 'animation',\n\n        props: {\n            close: String\n        },\n\n        defaults: {\n            animation: [true],\n            selClose: '.uk-alert-close',\n            duration: 150,\n            hideProps: assign({opacity: 0}, Togglable.defaults.hideProps)\n        },\n\n        events: [\n\n            {\n\n                name: 'click',\n\n                delegate: function delegate() {\n                    return this.selClose;\n                },\n\n                handler: function handler(e) {\n                    e.preventDefault();\n                    this.close();\n                }\n\n            }\n\n        ],\n\n        methods: {\n\n            close: function close() {\n                var this$1 = this;\n\n                this.toggleElement(this.$el).then(function () { return this$1.$destroy(true); });\n            }\n\n        }\n\n    });\n\n}\n\nfunction Core (UIkit) {\n\n    ready(function () {\n\n        var scroll = 0;\n        var started = 0;\n\n        on(win, 'load resize', UIkit.update);\n        on(win, 'scroll', function (e) {\n            e.dir = scroll <= win.pageYOffset ? 'down' : 'up';\n            e.scrollY = scroll = win.pageYOffset;\n            UIkit.update(e);\n        });\n\n        on(doc, 'animationstart', function (ref) {\n            var target = ref.target;\n\n            if ((css(target, 'animationName') || '').match(/^uk-.*(left|right)/)) {\n                started++;\n                doc.body.style.overflowX = 'hidden';\n                setTimeout(function () {\n                    if (!--started) {\n                        doc.body.style.overflowX = '';\n                    }\n                }, toMs(css(target, 'animationDuration')) + 100);\n            }\n        }, true);\n\n        if (!hasTouch) {\n            return;\n        }\n\n        var cls = 'uk-hover';\n\n        on(doc, 'tap', function (ref) {\n                var target = ref.target;\n\n                return $$((\".\" + cls)).forEach(function (el) { return !within(target, el) && removeClass(el, cls); }\n            );\n        }\n        );\n\n        Object.defineProperty(UIkit, 'hoverSelector', {\n\n            set: function set(selector) {\n                on(doc, 'tap', selector, function (ref) {\n                    var current = ref.current;\n\n                    return addClass(current, cls);\n                });\n            }\n\n        });\n\n        UIkit.hoverSelector = '.uk-animation-toggle, .uk-transition-toggle, [uk-hover]';\n\n    });\n\n}\n\nfunction Cover (UIkit) {\n\n    UIkit.component('cover', {\n\n        mixins: [Class, UIkit.components.video.options],\n\n        props: {\n            width: Number,\n            height: Number\n        },\n\n        defaults: {\n            automute: true\n        },\n\n        update: {\n\n            write: function write() {\n\n                var el = this.$el;\n\n                if (!isVisible(el)) {\n                    return;\n                }\n\n                var ref = el.parentNode;\n                var height = ref.offsetHeight;\n                var width = ref.offsetWidth;\n\n                css(\n                    css(el, {width: '', height: ''}),\n                    Dimensions.cover(\n                        {\n                            width: this.width || el.clientWidth,\n                            height: this.height || el.clientHeight\n                        },\n                        {\n                            width: width + (width % 2 ? 1 : 0),\n                            height: height + (height % 2 ? 1 : 0)\n                        }\n                    )\n                );\n\n            },\n\n            events: ['load', 'resize']\n\n        },\n\n        events: {\n\n            loadedmetadata: function loadedmetadata() {\n                this.$emit();\n            }\n\n        }\n\n    });\n\n}\n\nfunction Drop (UIkit) {\n\n    var active;\n\n    UIkit.component('drop', {\n\n        mixins: [Position, Togglable],\n\n        args: 'pos',\n\n        props: {\n            mode: 'list',\n            toggle: Boolean,\n            boundary: 'query',\n            boundaryAlign: Boolean,\n            delayShow: Number,\n            delayHide: Number,\n            clsDrop: String\n        },\n\n        defaults: {\n            mode: ['click', 'hover'],\n            toggle: true,\n            boundary: win,\n            boundaryAlign: false,\n            delayShow: 0,\n            delayHide: 800,\n            clsDrop: false,\n            hoverIdle: 200,\n            animation: ['uk-animation-fade'],\n            cls: 'uk-open'\n        },\n\n        computed: {\n\n            clsDrop: function clsDrop(ref) {\n                var clsDrop = ref.clsDrop;\n\n                return clsDrop || (\"uk-\" + (this.$options.name));\n            },\n\n            clsPos: function clsPos() {\n                return this.clsDrop;\n            }\n\n        },\n\n        init: function init() {\n            this.tracker = new MouseTracker();\n            addClass(this.$el, this.clsDrop);\n        },\n\n        connected: function connected() {\n\n            var ref = this.$props;\n            var toggle = ref.toggle;\n            this.toggle = toggle && UIkit.toggle(isString(toggle) ? query(toggle, this.$el) : this.$el.previousElementSibling, {\n                target: this.$el,\n                mode: this.mode\n            });\n\n            this.updateAria(this.$el);\n\n        },\n\n        events: [\n\n            {\n\n                name: 'click',\n\n                delegate: function delegate() {\n                    return (\".\" + (this.clsDrop) + \"-close\");\n                },\n\n                handler: function handler(e) {\n                    e.preventDefault();\n                    this.hide(false);\n                }\n\n            },\n\n            {\n\n                name: 'click',\n\n                delegate: function delegate() {\n                    return 'a[href^=\"#\"]';\n                },\n\n                handler: function handler(e) {\n\n                    if (e.defaultPrevented) {\n                        return;\n                    }\n\n                    var id = e.target.hash;\n\n                    if (!id) {\n                        e.preventDefault();\n                    }\n\n                    if (!id || !within(id, this.$el)) {\n                        this.hide(false);\n                    }\n                }\n\n            },\n\n            {\n\n                name: 'beforescroll',\n\n                handler: function handler() {\n                    this.hide(false);\n                }\n\n            },\n\n            {\n\n                name: 'toggle',\n\n                self: true,\n\n                handler: function handler(e, toggle) {\n\n                    e.preventDefault();\n\n                    if (this.isToggled()) {\n                        this.hide(false);\n                    } else {\n                        this.show(toggle, false);\n                    }\n                }\n\n            },\n\n            {\n\n                name: pointerEnter,\n\n                filter: function filter() {\n                    return includes(this.mode, 'hover');\n                },\n\n                handler: function handler(e) {\n\n                    if (isTouch(e)) {\n                        return;\n                    }\n\n                    if (active\n                        && active !== this\n                        && active.toggle\n                        && includes(active.toggle.mode, 'hover')\n                        && !within(e.target, active.toggle.$el)\n                        && !pointInRect({x: e.pageX, y: e.pageY}, offset(active.$el))\n                    ) {\n                        active.hide(false);\n                    }\n\n                    e.preventDefault();\n                    this.show(this.toggle);\n                }\n\n            },\n\n            {\n\n                name: 'toggleshow',\n\n                handler: function handler(e, toggle) {\n\n                    if (toggle && !includes(toggle.target, this.$el)) {\n                        return;\n                    }\n\n                    e.preventDefault();\n                    this.show(toggle || this.toggle);\n                }\n\n            },\n\n            {\n\n                name: (\"togglehide \" + pointerLeave),\n\n                handler: function handler(e, toggle) {\n\n                    if (isTouch(e) || toggle && !includes(toggle.target, this.$el)) {\n                        return;\n                    }\n\n                    e.preventDefault();\n\n                    if (this.toggle && includes(this.toggle.mode, 'hover')) {\n                        this.hide();\n                    }\n                }\n\n            },\n\n            {\n\n                name: 'beforeshow',\n\n                self: true,\n\n                handler: function handler() {\n                    this.clearTimers();\n                    this.position();\n                }\n\n            },\n\n            {\n\n                name: 'show',\n\n                self: true,\n\n                handler: function handler() {\n                    this.tracker.init();\n                    addClass(this.toggle.$el, this.cls);\n                    attr(this.toggle.$el, 'aria-expanded', 'true');\n                    registerEvent();\n                }\n\n            },\n\n            {\n\n                name: 'beforehide',\n\n                self: true,\n\n                handler: function handler() {\n                    this.clearTimers();\n                }\n\n            },\n\n            {\n\n                name: 'hide',\n\n                handler: function handler(ref) {\n                    var target = ref.target;\n\n\n                    if (this.$el !== target) {\n                        active = active === null && within(target, this.$el) && this.isToggled() ? this : active;\n                        return;\n                    }\n\n                    active = this.isActive() ? null : active;\n                    removeClass(this.toggle.$el, this.cls);\n                    attr(this.toggle.$el, 'aria-expanded', 'false');\n                    this.toggle.$el.blur();\n                    $$('a, button', this.toggle.$el).forEach(function (el) { return el.blur(); });\n                    this.tracker.cancel();\n                }\n\n            }\n\n        ],\n\n        update: {\n\n            write: function write() {\n\n                if (this.isToggled() && !Animation.inProgress(this.$el)) {\n                    this.position();\n                }\n\n            },\n\n            events: ['resize']\n\n        },\n\n        methods: {\n\n            show: function show(toggle, delay) {\n                var this$1 = this;\n                if ( delay === void 0 ) delay = true;\n\n\n                var show = function () { return !this$1.isToggled() && this$1.toggleElement(this$1.$el, true); };\n                var tryShow = function () {\n\n                    this$1.toggle = toggle || this$1.toggle;\n\n                    this$1.clearTimers();\n\n                    if (this$1.isActive()) {\n                        return;\n                    } else if (delay && active && active !== this$1 && active.isDelaying) {\n                        this$1.showTimer = setTimeout(this$1.show, 10);\n                        return;\n                    } else if (this$1.isParentOf(active)) {\n\n                        if (active.hideTimer) {\n                            active.hide(false);\n                        } else {\n                            return;\n                        }\n\n                    } else if (active && !this$1.isChildOf(active) && !this$1.isParentOf(active)) {\n\n                        var prev;\n                        while (active && active !== prev && !this$1.isChildOf(active)) {\n                            prev = active;\n                            active.hide(false);\n                        }\n\n                    }\n\n                    if (delay && this$1.delayShow) {\n                        this$1.showTimer = setTimeout(show, this$1.delayShow);\n                    } else {\n                        show();\n                    }\n\n                    active = this$1;\n                };\n\n                if (toggle && this.toggle && toggle.$el !== this.toggle.$el) {\n\n                    once(this.$el, 'hide', tryShow);\n                    this.hide(false);\n\n                } else {\n                    tryShow();\n                }\n            },\n\n            hide: function hide(delay) {\n                var this$1 = this;\n                if ( delay === void 0 ) delay = true;\n\n\n                var hide = function () { return this$1.toggleNow(this$1.$el, false); };\n\n                this.clearTimers();\n\n                this.isDelaying = this.tracker.movesTo(this.$el);\n\n                if (delay && this.isDelaying) {\n                    this.hideTimer = setTimeout(this.hide, this.hoverIdle);\n                } else if (delay && this.delayHide) {\n                    this.hideTimer = setTimeout(hide, this.delayHide);\n                } else {\n                    hide();\n                }\n            },\n\n            clearTimers: function clearTimers() {\n                clearTimeout(this.showTimer);\n                clearTimeout(this.hideTimer);\n                this.showTimer = null;\n                this.hideTimer = null;\n                this.isDelaying = false;\n            },\n\n            isActive: function isActive() {\n                return active === this;\n            },\n\n            isChildOf: function isChildOf(drop) {\n                return drop && drop !== this && within(this.$el, drop.$el);\n            },\n\n            isParentOf: function isParentOf(drop) {\n                return drop && drop !== this && within(drop.$el, this.$el);\n            },\n\n            position: function position() {\n\n                removeClasses(this.$el, ((this.clsDrop) + \"-(stack|boundary)\"));\n                css(this.$el, {top: '', left: '', display: 'block'});\n                toggleClass(this.$el, ((this.clsDrop) + \"-boundary\"), this.boundaryAlign);\n\n                var boundary = offset(this.boundary);\n                var alignTo = this.boundaryAlign ? boundary : offset(this.toggle.$el);\n\n                if (this.align === 'justify') {\n                    var prop = this.getAxis() === 'y' ? 'width' : 'height';\n                    css(this.$el, prop, alignTo[prop]);\n                } else if (this.$el.offsetWidth > Math.max(boundary.right - alignTo.left, alignTo.right - boundary.left)) {\n                    addClass(this.$el, ((this.clsDrop) + \"-stack\"));\n                }\n\n                this.positionAt(this.$el, this.boundaryAlign ? this.boundary : this.toggle.$el, this.boundary);\n\n                css(this.$el, 'display', '');\n\n            }\n\n        }\n\n    });\n\n    UIkit.drop.getActive = function () { return active; };\n\n    var registered;\n\n    function registerEvent() {\n\n        if (registered) {\n            return;\n        }\n\n        registered = true;\n        on(docEl, 'click', function (ref) {\n            var target = ref.target;\n            var defaultPrevented = ref.defaultPrevented;\n\n            var prev;\n\n            if (defaultPrevented) {\n                return;\n            }\n\n            while (active && active !== prev && !within(target, active.$el) && !(active.toggle && within(target, active.toggle.$el))) {\n                prev = active;\n                active.hide(false);\n            }\n        });\n    }\n\n}\n\nfunction Dropdown (UIkit) {\n\n    UIkit.component('dropdown', UIkit.components.drop.extend({name: 'dropdown'}));\n\n}\n\nfunction FormCustom (UIkit) {\n\n    UIkit.component('form-custom', {\n\n        mixins: [Class],\n\n        args: 'target',\n\n        props: {\n            target: Boolean\n        },\n\n        defaults: {\n            target: false\n        },\n\n        computed: {\n\n            input: function input(_, $el) {\n                return $(selInput, $el);\n            },\n\n            state: function state() {\n                return this.input.nextElementSibling;\n            },\n\n            target: function target(ref, $el) {\n                var target = ref.target;\n\n                return target && (target === true\n                    && this.input.parentNode === $el\n                    && this.input.nextElementSibling\n                    || query(target, $el));\n            }\n\n        },\n\n        update: function update() {\n\n            var ref = this;\n            var target = ref.target;\n            var input = ref.input;\n\n            if (!target) {\n                return;\n            }\n\n            var option;\n\n            target[isInput(target) ? 'value' : 'textContent'] = input.files && input.files[0]\n                ? input.files[0].name\n                : matches(input, 'select') && (option = $$('option', input).filter(function (el) { return el.selected; })[0])\n                    ? option.textContent\n                    : input.value;\n\n        },\n\n        events: [\n\n            {\n\n                name: 'focusin focusout mouseenter mouseleave',\n\n                delegate: selInput,\n\n                handler: function handler(ref) {\n                    var type = ref.type;\n                    var current = ref.current;\n\n                    if (current === this.input) {\n                        toggleClass(\n                            this.state,\n                            (\"uk-\" + (includes(type, 'focus') ? 'focus' : 'hover')),\n                            includes(['focusin', 'mouseenter'], type)\n                        );\n                    }\n                }\n\n            },\n\n            {\n\n                name: 'change',\n\n                handler: function handler() {\n                    this.$emit();\n                }\n\n            }\n\n        ]\n\n    });\n\n}\n\nfunction Gif (UIkit) {\n\n    // Deprecated\n    UIkit.component('gif', {\n\n        update: {\n\n            read: function read(data) {\n\n                var inview = isInView(this.$el);\n\n                if (!inview || data.isInView === inview) {\n                    return false;\n                }\n\n                data.isInView = inview;\n            },\n\n            write: function write() {\n                this.$el.src = this.$el.src;\n            },\n\n            events: ['scroll', 'load', 'resize']\n        }\n\n    });\n\n}\n\nfunction Grid (UIkit) {\n\n    UIkit.component('grid', UIkit.components.margin.extend({\n\n        mixins: [Class],\n\n        name: 'grid',\n\n        defaults: {\n            margin: 'uk-grid-margin',\n            clsStack: 'uk-grid-stack'\n        },\n\n        update: {\n\n            write: function write(ref) {\n                var stacks = ref.stacks;\n\n\n                toggleClass(this.$el, this.clsStack, stacks);\n\n            },\n\n            events: ['load', 'resize']\n\n        }\n\n    }));\n\n}\n\nfunction HeightMatch (UIkit) {\n\n    UIkit.component('height-match', {\n\n        args: 'target',\n\n        props: {\n            target: String,\n            row: Boolean\n        },\n\n        defaults: {\n            target: '> *',\n            row: true\n        },\n\n        computed: {\n\n            elements: function elements(ref, $el) {\n                var target = ref.target;\n\n                return $$(target, $el);\n            }\n\n        },\n\n        update: {\n\n            read: function read() {\n                var this$1 = this;\n\n\n                var lastOffset = false;\n\n                css(this.elements, 'minHeight', '');\n\n                return {\n                    rows: !this.row\n                        ? [this.match(this.elements)]\n                        : this.elements.reduce(function (rows, el) {\n\n                            if (lastOffset !== el.offsetTop) {\n                                rows.push([el]);\n                            } else {\n                                rows[rows.length - 1].push(el);\n                            }\n\n                            lastOffset = el.offsetTop;\n\n                            return rows;\n\n                        }, []).map(function (elements) { return this$1.match(elements); })\n                };\n            },\n\n            write: function write(ref) {\n                var rows = ref.rows;\n\n\n                rows.forEach(function (ref) {\n                    var height = ref.height;\n                    var elements = ref.elements;\n\n                    return css(elements, 'minHeight', height);\n                });\n\n            },\n\n            events: ['load', 'resize']\n\n        },\n\n        methods: {\n\n            match: function match(elements) {\n\n                if (elements.length < 2) {\n                    return {};\n                }\n\n                var heights = [];\n                var max = 0;\n\n                elements\n                    .forEach(function (el) {\n\n                        var style, hidden;\n\n                        if (!isVisible(el)) {\n                            style = attr(el, 'style');\n                            hidden = attr(el, 'hidden');\n\n                            attr(el, {\n                                style: ((style || '') + \";display:block !important;\"),\n                                hidden: null\n                            });\n                        }\n\n                        max = Math.max(max, el.offsetHeight);\n                        heights.push(el.offsetHeight);\n\n                        if (!isUndefined(style)) {\n                            attr(el, {style: style, hidden: hidden});\n                        }\n\n                    });\n\n                elements = elements.filter(function (el, i) { return heights[i] < max; });\n\n                return {height: max, elements: elements};\n            }\n        }\n\n    });\n\n}\n\nfunction HeightViewport (UIkit) {\n\n    UIkit.component('height-viewport', {\n\n        props: {\n            expand: Boolean,\n            offsetTop: Boolean,\n            offsetBottom: Boolean,\n            minHeight: Number\n        },\n\n        defaults: {\n            expand: false,\n            offsetTop: false,\n            offsetBottom: false,\n            minHeight: 0\n        },\n\n        update: {\n\n            write: function write() {\n\n                css(this.$el, 'boxSizing', 'border-box');\n\n                var viewport = height(win);\n                var minHeight, offsetTop = 0;\n\n                if (this.expand) {\n\n                    css(this.$el, {height: '', minHeight: ''});\n\n                    var diff = viewport - offsetHeight(docEl);\n\n                    if (diff > 0) {\n                        minHeight = offsetHeight(this.$el) + diff;\n                    }\n\n                } else {\n\n                    var ref = offset(this.$el);\n                    var top = ref.top;\n\n                    if (top < viewport / 2 && this.offsetTop) {\n                        offsetTop += top;\n                    }\n\n                    if (this.offsetBottom === true) {\n\n                        offsetTop += offsetHeight(this.$el.nextElementSibling);\n\n                    } else if (isNumeric(this.offsetBottom)) {\n\n                        offsetTop += (viewport / 100) * this.offsetBottom;\n\n                    } else if (this.offsetBottom && endsWith(this.offsetBottom, 'px')) {\n\n                        offsetTop += toFloat(this.offsetBottom);\n\n                    } else if (isString(this.offsetBottom)) {\n\n                        offsetTop += offsetHeight(query(this.offsetBottom, this.$el));\n\n                    }\n\n                    // on mobile devices (iOS and Android) window.innerHeight !== 100vh\n                    minHeight = offsetTop ? (\"calc(100vh - \" + offsetTop + \"px)\") : '100vh';\n\n                }\n\n                if (!minHeight) {\n                    return;\n                }\n\n                css(this.$el, {height: '', minHeight: minHeight});\n\n                var elHeight = this.$el.offsetHeight;\n                if (this.minHeight && this.minHeight > elHeight) {\n                    css(this.$el, 'minHeight', this.minHeight);\n                }\n\n                // IE 11 fix (min-height on a flex container won't apply to its flex items)\n                if (viewport - offsetTop >= elHeight) {\n                    css(this.$el, 'height', minHeight);\n                }\n\n            },\n\n            events: ['load', 'resize']\n\n        }\n\n    });\n\n    function offsetHeight(el) {\n        return el && el.offsetHeight || 0;\n    }\n\n}\n\nvar closeIcon = \"<svg width=\\\"14\\\" height=\\\"14\\\" viewBox=\\\"0 0 14 14\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"1\\\" y1=\\\"1\\\" x2=\\\"13\\\" y2=\\\"13\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"13\\\" y1=\\\"1\\\" x2=\\\"1\\\" y2=\\\"13\\\"/></svg>\";\n\nvar closeLarge = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" x1=\\\"1\\\" y1=\\\"1\\\" x2=\\\"19\\\" y2=\\\"19\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" x1=\\\"19\\\" y1=\\\"1\\\" x2=\\\"1\\\" y2=\\\"19\\\"/></svg>\";\n\nvar marker = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"9\\\" y=\\\"4\\\" width=\\\"1\\\" height=\\\"11\\\"/><rect x=\\\"4\\\" y=\\\"9\\\" width=\\\"11\\\" height=\\\"1\\\"/></svg>\";\n\nvar navbarToggleIcon = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect y=\\\"9\\\" width=\\\"20\\\" height=\\\"2\\\"/><rect y=\\\"3\\\" width=\\\"20\\\" height=\\\"2\\\"/><rect y=\\\"15\\\" width=\\\"20\\\" height=\\\"2\\\"/></svg>\";\n\nvar overlayIcon = \"<svg width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"19\\\" y=\\\"0\\\" width=\\\"1\\\" height=\\\"40\\\"/><rect x=\\\"0\\\" y=\\\"19\\\" width=\\\"40\\\" height=\\\"1\\\"/></svg>\";\n\nvar paginationNext = \"<svg width=\\\"7\\\" height=\\\"12\\\" viewBox=\\\"0 0 7 12\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" points=\\\"1 1 6 6 1 11\\\"/></svg>\";\n\nvar paginationPrevious = \"<svg width=\\\"7\\\" height=\\\"12\\\" viewBox=\\\"0 0 7 12\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" points=\\\"6 1 1 6 6 11\\\"/></svg>\";\n\nvar searchIcon = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"9\\\" cy=\\\"9\\\" r=\\\"7\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M14,14 L18,18 L14,14 Z\\\"/></svg>\";\n\nvar searchLarge = \"<svg width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.8\\\" cx=\\\"17.5\\\" cy=\\\"17.5\\\" r=\\\"16.5\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.8\\\" x1=\\\"38\\\" y1=\\\"39\\\" x2=\\\"29\\\" y2=\\\"30\\\"/></svg>\";\n\nvar searchNavbar = \"<svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10.5\\\" cy=\\\"10.5\\\" r=\\\"9.5\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"23\\\" y1=\\\"23\\\" x2=\\\"17\\\" y2=\\\"17\\\"/></svg>\";\n\nvar slidenavNext = \"<svg width=\\\"14px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 14 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" points=\\\"1.225,23 12.775,12 1.225,1 \\\"/></svg>\";\n\nvar slidenavNextLarge = \"<svg width=\\\"25px\\\" height=\\\"40px\\\" viewBox=\\\"0 0 25 40\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"2\\\" points=\\\"4.002,38.547 22.527,20.024 4,1.5 \\\"/></svg>\";\n\nvar slidenavPrevious = \"<svg width=\\\"14px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 14 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" points=\\\"12.775,1 1.225,12 12.775,23 \\\"/></svg>\";\n\nvar slidenavPreviousLarge = \"<svg width=\\\"25px\\\" height=\\\"40px\\\" viewBox=\\\"0 0 25 40\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"2\\\" points=\\\"20.527,1.5 2,20.024 20.525,38.547 \\\"/></svg>\";\n\nvar spinner = \"<svg width=\\\"30\\\" height=\\\"30\\\" viewBox=\\\"0 0 30 30\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"15\\\" cy=\\\"15\\\" r=\\\"14\\\"/></svg>\";\n\nvar totop = \"<svg width=\\\"18\\\" height=\\\"10\\\" viewBox=\\\"0 0 18 10\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" points=\\\"1 9 9 1 17 9 \\\"/></svg>\";\n\nfunction Icon (UIkit) {\n\n    var parsed = {};\n    var icons = {\n        spinner: spinner,\n        totop: totop,\n        marker: marker,\n        'close-icon': closeIcon,\n        'close-large': closeLarge,\n        'navbar-toggle-icon': navbarToggleIcon,\n        'overlay-icon': overlayIcon,\n        'pagination-next': paginationNext,\n        'pagination-previous': paginationPrevious,\n        'search-icon': searchIcon,\n        'search-large': searchLarge,\n        'search-navbar': searchNavbar,\n        'slidenav-next': slidenavNext,\n        'slidenav-next-large': slidenavNextLarge,\n        'slidenav-previous': slidenavPrevious,\n        'slidenav-previous-large': slidenavPreviousLarge\n    };\n\n    UIkit.component('icon', UIkit.components.svg.extend({\n\n        attrs: ['icon', 'ratio'],\n\n        mixins: [Class],\n\n        name: 'icon',\n\n        args: 'icon',\n\n        props: ['icon'],\n\n        defaults: {exclude: ['id', 'style', 'class', 'src', 'icon']},\n\n        init: function init() {\n            addClass(this.$el, 'uk-icon');\n\n            if (isRtl) {\n                this.icon = swap(swap(this.icon, 'left', 'right'), 'previous', 'next');\n            }\n        },\n\n        methods: {\n\n            getSvg: function getSvg() {\n\n                var icon = getIcon(this.icon);\n\n                if (!icon) {\n                    return Promise.reject('Icon not found.');\n                }\n\n                return Promise.resolve(icon);\n            }\n\n        }\n\n    }));\n\n    [\n        'marker',\n        'navbar-toggle-icon',\n        'overlay-icon',\n        'pagination-previous',\n        'pagination-next',\n        'totop'\n    ].forEach(function (name) { return registerComponent(name); });\n\n    [\n        'slidenav-previous',\n        'slidenav-next'\n    ].forEach(function (name) { return registerComponent(name, {\n\n        init: function init() {\n            addClass(this.$el, 'uk-slidenav');\n\n            if (hasClass(this.$el, 'uk-slidenav-large')) {\n                this.icon += '-large';\n            }\n        }\n\n    }); });\n\n    registerComponent('search-icon', {\n\n        init: function init() {\n            if (hasClass(this.$el, 'uk-search-icon') && parents(this.$el, '.uk-search-large').length) {\n                this.icon = 'search-large';\n            } else if (parents(this.$el, '.uk-search-navbar').length) {\n                this.icon = 'search-navbar';\n            }\n        }\n\n    });\n\n    registerComponent('close', {\n\n        init: function init() {\n            this.icon = \"close-\" + (hasClass(this.$el, 'uk-close-large') ? 'large' : 'icon');\n        }\n\n    });\n\n    registerComponent('spinner', {\n\n        connected: function connected() {\n            var this$1 = this;\n\n            this.svg.then(function (svg) { return this$1.ratio !== 1 && css($('circle', svg), 'stroke-width', 1 / this$1.ratio); }, noop);\n        }\n\n    });\n\n    UIkit.icon.add = function (added) {\n        Object.keys(added).forEach(function (name) {\n            icons[name] = added[name];\n            delete parsed[name];\n        });\n\n        if (UIkit._initialized) {\n            each(UIkit.instances, function (component) {\n                if (component.$options.name === 'icon') {\n                    component.$reset();\n                }\n            });\n        }\n    };\n\n    function registerComponent(name, mixin$$1) {\n\n        UIkit.component(name, UIkit.components.icon.extend({\n\n            name: name,\n\n            mixins: mixin$$1 ? [mixin$$1] : [],\n\n            defaults: {\n                icon: name\n            }\n\n        }));\n    }\n\n    function getIcon(icon) {\n\n        if (!icons[icon]) {\n            return null;\n        }\n\n        if (!parsed[icon]) {\n            parsed[icon] = $(icons[icon].trim());\n        }\n\n        return parsed[icon];\n    }\n\n}\n\nfunction Leader (UIkit) {\n\n    UIkit.component('leader', {\n\n        mixins: [Class],\n\n        props: {\n            fill: String,\n            media: 'media'\n        },\n\n        defaults: {\n            fill: '',\n            media: false,\n            clsWrapper: 'uk-leader-fill',\n            clsHide: 'uk-leader-hide',\n            attrFill: 'data-fill'\n        },\n\n        computed: {\n\n            fill: function fill(ref) {\n                var fill = ref.fill;\n\n                return fill || getCssVar('leader-fill');\n            }\n\n        },\n\n        connected: function connected() {\n            var assign;\n            (assign = wrapInner(this.$el, (\"<span class=\\\"\" + (this.clsWrapper) + \"\\\">\")), this.wrapper = assign[0]);\n        },\n\n        disconnected: function disconnected() {\n            unwrap(this.wrapper.childNodes);\n        },\n\n        update: [\n\n            {\n\n                read: function read(ref) {\n                    var changed = ref.changed;\n                    var width = ref.width;\n\n\n                    var prev = width;\n\n                    width = Math.floor(this.$el.offsetWidth / 2);\n\n                    return {\n                        width: width,\n                        changed: changed || prev !== width,\n                        hide: this.media && !win.matchMedia(this.media).matches\n                    };\n                },\n\n                write: function write(data) {\n\n                    toggleClass(this.wrapper, this.clsHide, data.hide);\n\n                    if (data.changed) {\n                        data.changed = false;\n                        attr(this.wrapper, this.attrFill, new Array(data.width).join(this.fill));\n                    }\n\n                },\n\n                events: ['load', 'resize']\n\n            }\n        ]\n    });\n\n}\n\nfunction Margin (UIkit) {\n\n    UIkit.component('margin', {\n\n        props: {\n            margin: String,\n            firstColumn: Boolean\n        },\n\n        defaults: {\n            margin: 'uk-margin-small-top',\n            firstColumn: 'uk-first-column'\n        },\n\n        update: {\n\n            read: function read(data) {\n\n                var items = this.$el.children;\n\n                if (!items.length || !isVisible(this.$el)) {\n                    return data.rows = false;\n                }\n\n                data.stacks = true;\n\n                var rows = [[]];\n\n                for (var i = 0; i < items.length; i++) {\n\n                    var el = items[i];\n                    var dim = el.getBoundingClientRect();\n\n                    if (!dim.height) {\n                        continue;\n                    }\n\n                    for (var j = rows.length - 1; j >= 0; j--) {\n\n                        var row = rows[j];\n\n                        if (!row[0]) {\n                            row.push(el);\n                            break;\n                        }\n\n                        var leftDim = row[0].getBoundingClientRect();\n\n                        if (dim.top >= Math.floor(leftDim.bottom)) {\n                            rows.push([el]);\n                            break;\n                        }\n\n                        if (Math.floor(dim.bottom) > leftDim.top) {\n\n                            data.stacks = false;\n\n                            if (dim.left < leftDim.left && !isRtl) {\n                                row.unshift(el);\n                                break;\n                            }\n\n                            row.push(el);\n                            break;\n                        }\n\n                        if (j === 0) {\n                            rows.unshift([el]);\n                            break;\n                        }\n\n                    }\n\n                }\n\n                data.rows = rows;\n\n            },\n\n            write: function write(ref) {\n                var this$1 = this;\n                var rows = ref.rows;\n\n\n                rows.forEach(function (row, i) { return row.forEach(function (el, j) {\n                        toggleClass(el, this$1.margin, i !== 0);\n                        toggleClass(el, this$1.firstColumn, j === 0);\n                    }); }\n                );\n\n            },\n\n            events: ['load', 'resize']\n\n        }\n\n    });\n\n}\n\nfunction Modal$1 (UIkit) {\n\n    UIkit.component('modal', {\n\n        mixins: [Modal],\n\n        defaults: {\n            clsPage: 'uk-modal-page',\n            clsPanel: 'uk-modal-dialog',\n            selClose: '.uk-modal-close, .uk-modal-close-default, .uk-modal-close-outside, .uk-modal-close-full'\n        },\n\n        events: [\n\n            {\n                name: 'show',\n\n                self: true,\n\n                handler: function handler() {\n\n                    if (hasClass(this.panel, 'uk-margin-auto-vertical')) {\n                        addClass(this.$el, 'uk-flex');\n                    } else {\n                        css(this.$el, 'display', 'block');\n                    }\n\n                    height(this.$el); // force reflow\n                }\n            },\n\n            {\n                name: 'hidden',\n\n                self: true,\n\n                handler: function handler() {\n\n                    css(this.$el, 'display', '');\n                    removeClass(this.$el, 'uk-flex');\n\n                }\n            }\n\n        ]\n\n    });\n\n    UIkit.component('overflow-auto', {\n\n        mixins: [Class],\n\n        computed: {\n\n            modal: function modal(_, $el) {\n                return closest($el, '.uk-modal');\n            },\n\n            panel: function panel(_, $el) {\n                return closest($el, '.uk-modal-dialog');\n            }\n\n        },\n\n        connected: function connected() {\n            css(this.$el, 'minHeight', 150);\n        },\n\n        update: {\n\n            write: function write() {\n\n                if (!this.panel || !this.modal) {\n                    return;\n                }\n\n                var current = css(this.$el, 'maxHeight');\n\n                css(css(this.$el, 'maxHeight', 150), 'maxHeight', Math.max(150, 150 + height(this.modal) - this.panel.offsetHeight));\n                if (current !== css(this.$el, 'maxHeight')) {\n                    trigger(this.$el, 'resize');\n                }\n            },\n\n            events: ['load', 'resize']\n\n        }\n\n    });\n\n    UIkit.modal.dialog = function (content, options) {\n\n        var dialog = UIkit.modal((\" <div class=\\\"uk-modal\\\"> <div class=\\\"uk-modal-dialog\\\">\" + content + \"</div> </div> \"), options);\n\n        dialog.show();\n\n        on(dialog.$el, 'hidden', function (ref) {\n            var target = ref.target;\n            var currentTarget = ref.currentTarget;\n\n            if (target === currentTarget) {\n                dialog.$destroy(true);\n            }\n        });\n\n        return dialog;\n    };\n\n    UIkit.modal.alert = function (message, options) {\n\n        options = assign({bgClose: false, escClose: false, labels: UIkit.modal.labels}, options);\n\n        return new Promise(\n            function (resolve) { return on(UIkit.modal.dialog((\" <div class=\\\"uk-modal-body\\\">\" + (isString(message) ? message : html(message)) + \"</div> <div class=\\\"uk-modal-footer uk-text-right\\\"> <button class=\\\"uk-button uk-button-primary uk-modal-close\\\" autofocus>\" + (options.labels.ok) + \"</button> </div> \"), options).$el, 'hide', resolve); }\n        );\n    };\n\n    UIkit.modal.confirm = function (message, options) {\n\n        options = assign({bgClose: false, escClose: true, labels: UIkit.modal.labels}, options);\n\n        return new Promise(function (resolve, reject) {\n\n            var confirm = UIkit.modal.dialog((\" <form> <div class=\\\"uk-modal-body\\\">\" + (isString(message) ? message : html(message)) + \"</div> <div class=\\\"uk-modal-footer uk-text-right\\\"> <button class=\\\"uk-button uk-button-default uk-modal-close\\\" type=\\\"button\\\">\" + (options.labels.cancel) + \"</button> <button class=\\\"uk-button uk-button-primary\\\" autofocus>\" + (options.labels.ok) + \"</button> </div> </form> \"), options);\n\n            var resolved = false;\n\n            on(confirm.$el, 'submit', 'form', function (e) {\n                e.preventDefault();\n                resolve();\n                resolved = true;\n                confirm.hide();\n            });\n            on(confirm.$el, 'hide', function () {\n                if (!resolved) {\n                    reject();\n                }\n            });\n\n        });\n    };\n\n    UIkit.modal.prompt = function (message, value, options) {\n\n        options = assign({bgClose: false, escClose: true, labels: UIkit.modal.labels}, options);\n\n        return new Promise(function (resolve) {\n\n            var prompt = UIkit.modal.dialog((\" <form class=\\\"uk-form-stacked\\\"> <div class=\\\"uk-modal-body\\\"> <label>\" + (isString(message) ? message : html(message)) + \"</label> <input class=\\\"uk-input\\\" autofocus> </div> <div class=\\\"uk-modal-footer uk-text-right\\\"> <button class=\\\"uk-button uk-button-default uk-modal-close\\\" type=\\\"button\\\">\" + (options.labels.cancel) + \"</button> <button class=\\\"uk-button uk-button-primary\\\">\" + (options.labels.ok) + \"</button> </div> </form> \"), options),\n                input = $('input', prompt.$el);\n\n            input.value = value;\n\n            var resolved = false;\n\n            on(prompt.$el, 'submit', 'form', function (e) {\n                e.preventDefault();\n                resolve(input.value);\n                resolved = true;\n                prompt.hide();\n            });\n            on(prompt.$el, 'hide', function () {\n                if (!resolved) {\n                    resolve(null);\n                }\n            });\n\n        });\n    };\n\n    UIkit.modal.labels = {\n        ok: 'Ok',\n        cancel: 'Cancel'\n    };\n\n}\n\nfunction Nav (UIkit) {\n\n    UIkit.component('nav', UIkit.components.accordion.extend({\n\n        name: 'nav',\n\n        defaults: {\n            targets: '> .uk-parent',\n            toggle: '> a',\n            content: '> ul'\n        }\n\n    }));\n\n}\n\nfunction Navbar (UIkit) {\n\n    UIkit.component('navbar', {\n\n        mixins: [Class],\n\n        props: {\n            dropdown: String,\n            mode: 'list',\n            align: String,\n            offset: Number,\n            boundary: Boolean,\n            boundaryAlign: Boolean,\n            clsDrop: String,\n            delayShow: Number,\n            delayHide: Number,\n            dropbar: Boolean,\n            dropbarMode: String,\n            dropbarAnchor: 'query',\n            duration: Number\n        },\n\n        defaults: {\n            dropdown: '.uk-navbar-nav > li',\n            align: !isRtl ? 'left' : 'right',\n            clsDrop: 'uk-navbar-dropdown',\n            mode: undefined,\n            offset: undefined,\n            delayShow: undefined,\n            delayHide: undefined,\n            boundaryAlign: undefined,\n            flip: 'x',\n            boundary: true,\n            dropbar: false,\n            dropbarMode: 'slide',\n            dropbarAnchor: false,\n            duration: 200,\n        },\n\n        computed: {\n\n            boundary: function boundary(ref, $el) {\n                var boundary = ref.boundary;\n                var boundaryAlign = ref.boundaryAlign;\n\n                return (boundary === true || boundaryAlign) ? $el : boundary;\n            },\n\n            pos: function pos(ref) {\n                var align = ref.align;\n\n                return (\"bottom-\" + align);\n            }\n\n        },\n\n        beforeConnect: function beforeConnect() {\n\n            var ref = this.$props;\n            var dropbar = ref.dropbar;\n\n            this.dropbar = dropbar && (isString(dropbar) && query(dropbar, this.$el) || $('<div></div>'));\n\n            if (this.dropbar) {\n\n                addClass(this.dropbar, 'uk-navbar-dropbar');\n\n                if (this.dropbarMode === 'slide') {\n                    addClass(this.dropbar, 'uk-navbar-dropbar-slide');\n                }\n            }\n\n        },\n\n        disconnected: function disconnected() {\n            this.dropbar && remove(this.dropbar);\n        },\n\n        update: function update() {\n\n            UIkit.drop(\n                $$(((this.dropdown) + \" .\" + (this.clsDrop)), this.$el).filter(function (el) { return !UIkit.getComponent(el, 'drop') && !UIkit.getComponent(el, 'dropdown'); }),\n                assign({}, this.$props, {boundary: this.boundary, pos: this.pos, offset: this.dropbar || this.offset})\n            );\n\n        },\n\n        events: [\n\n            {\n                name: 'mouseover',\n\n                delegate: function delegate() {\n                    return this.dropdown;\n                },\n\n                handler: function handler(ref) {\n                    var current = ref.current;\n\n                    var active = this.getActive();\n                    if (active && active.toggle && !within(active.toggle.$el, current) && !active.tracker.movesTo(active.$el)) {\n                        active.hide(false);\n                    }\n                }\n\n            },\n\n            {\n                name: 'mouseleave',\n\n                el: function el() {\n                    return this.dropbar;\n                },\n\n                handler: function handler() {\n                    var active = this.getActive();\n\n                    if (active && !matches(this.dropbar, ':hover')) {\n                        active.hide();\n                    }\n                }\n            },\n\n            {\n                name: 'beforeshow',\n\n                capture: true,\n\n                filter: function filter() {\n                    return this.dropbar;\n                },\n\n                handler: function handler() {\n\n                    if (!this.dropbar.parentNode) {\n                        after(this.dropbarAnchor || this.$el, this.dropbar);\n                    }\n\n                }\n            },\n\n            {\n                name: 'show',\n\n                capture: true,\n\n                filter: function filter() {\n                    return this.dropbar;\n                },\n\n                handler: function handler(_, drop) {\n\n                    var $el = drop.$el;\n\n                    this.clsDrop && addClass($el, ((this.clsDrop) + \"-dropbar\"));\n\n                    this.transitionTo($el.offsetHeight + toFloat(css($el, 'margin-top')) + toFloat(css($el, 'margin-bottom')), $el);\n                }\n            },\n\n            {\n                name: 'beforehide',\n\n                filter: function filter() {\n                    return this.dropbar;\n                },\n\n                handler: function handler(e, ref) {\n                    var $el = ref.$el;\n\n\n                    var active = this.getActive();\n\n                    if (matches(this.dropbar, ':hover') && active && active.$el === $el) {\n                        e.preventDefault();\n                    }\n                }\n            },\n\n            {\n                name: 'hide',\n\n                filter: function filter() {\n                    return this.dropbar;\n                },\n\n                handler: function handler(_, ref) {\n                    var $el = ref.$el;\n\n\n                    var active = this.getActive();\n\n                    if (!active || active && active.$el === $el) {\n                        this.transitionTo(0);\n                    }\n                }\n            }\n\n        ],\n\n        methods: {\n\n            getActive: function getActive() {\n                var active = UIkit.drop.getActive();\n                return active && includes(active.mode, 'hover') && within(active.toggle.$el, this.$el) && active;\n            },\n\n            transitionTo: function transitionTo(newHeight, el) {\n\n                var ref = this;\n                var dropbar = ref.dropbar;\n                var oldHeight = isVisible(dropbar) ? height(dropbar) : 0;\n\n                el = oldHeight < newHeight && el;\n\n                css(el, {height: oldHeight, overflow: 'hidden'});\n                height(dropbar, oldHeight);\n\n                Transition.cancel([el, dropbar]);\n                return Transition\n                    .start([el, dropbar], {height: newHeight}, this.duration)\n                    .catch(noop)\n                    .finally(function () { return css(el, {height: '', overflow: ''}); });\n            }\n\n        }\n\n    });\n\n}\n\nvar scroll;\n\nfunction Offcanvas (UIkit) {\n\n    UIkit.component('offcanvas', {\n\n        mixins: [Modal],\n\n        args: 'mode',\n\n        props: {\n            content: String,\n            mode: String,\n            flip: Boolean,\n            overlay: Boolean\n        },\n\n        defaults: {\n            content: '.uk-offcanvas-content',\n            mode: 'slide',\n            flip: false,\n            overlay: false,\n            clsPage: 'uk-offcanvas-page',\n            clsContainer: 'uk-offcanvas-container',\n            clsPanel: 'uk-offcanvas-bar',\n            clsFlip: 'uk-offcanvas-flip',\n            clsContent: 'uk-offcanvas-content',\n            clsContentAnimation: 'uk-offcanvas-content-animation',\n            clsSidebarAnimation: 'uk-offcanvas-bar-animation',\n            clsMode: 'uk-offcanvas',\n            clsOverlay: 'uk-offcanvas-overlay',\n            selClose: '.uk-offcanvas-close'\n        },\n\n        computed: {\n\n            content: function content(ref) {\n                var content = ref.content;\n\n                return $(content) || doc.body;\n            },\n\n            clsFlip: function clsFlip(ref) {\n                var flip = ref.flip;\n                var clsFlip = ref.clsFlip;\n\n                return flip ? clsFlip : '';\n            },\n\n            clsOverlay: function clsOverlay(ref) {\n                var overlay = ref.overlay;\n                var clsOverlay = ref.clsOverlay;\n\n                return overlay ? clsOverlay : '';\n            },\n\n            clsMode: function clsMode(ref) {\n                var mode = ref.mode;\n                var clsMode = ref.clsMode;\n\n                return (clsMode + \"-\" + mode);\n            },\n\n            clsSidebarAnimation: function clsSidebarAnimation(ref) {\n                var mode = ref.mode;\n                var clsSidebarAnimation = ref.clsSidebarAnimation;\n\n                return mode === 'none' || mode === 'reveal' ? '' : clsSidebarAnimation;\n            },\n\n            clsContentAnimation: function clsContentAnimation(ref) {\n                var mode = ref.mode;\n                var clsContentAnimation = ref.clsContentAnimation;\n\n                return mode !== 'push' && mode !== 'reveal' ? '' : clsContentAnimation;\n            },\n\n            transitionElement: function transitionElement(ref) {\n                var mode = ref.mode;\n\n                return mode === 'reveal' ? this.panel.parentNode : this.panel;\n            }\n\n        },\n\n        update: {\n\n            write: function write() {\n\n                if (this.getActive() === this) {\n\n                    if (this.overlay || this.clsContentAnimation) {\n                        width(this.content, width(win) - this.scrollbarWidth);\n                    }\n\n                    if (this.overlay) {\n                        height(this.content, height(win));\n                        if (scroll) {\n                            this.content.scrollTop = scroll.y;\n                        }\n                    }\n\n                }\n\n            },\n\n            events: ['resize']\n\n        },\n\n        events: [\n\n            {\n\n                name: 'click',\n\n                delegate: function delegate() {\n                    return 'a[href^=\"#\"]';\n                },\n\n                handler: function handler(ref) {\n                    var current = ref.current;\n\n                    if (current.hash && $(current.hash, this.content)) {\n                        scroll = null;\n                        this.hide();\n                    }\n                }\n\n            },\n\n            {\n\n                name: 'beforescroll',\n\n                filter: function filter() {\n                    return this.overlay;\n                },\n\n                handler: function handler(e, scroll, target) {\n                    if (scroll && target && this.isToggled() && $(target, this.content)) {\n                        once(this.$el, 'hidden', function () { return scroll.scrollTo(target); });\n                        e.preventDefault();\n                    }\n                }\n\n            },\n\n            {\n                name: 'show',\n\n                self: true,\n\n                handler: function handler() {\n\n                    scroll = scroll || {x: win.pageXOffset, y: win.pageYOffset};\n\n                    if (this.mode === 'reveal' && !hasClass(this.panel, this.clsMode)) {\n                        wrapAll(this.panel, '<div>');\n                        addClass(this.panel.parentNode, this.clsMode);\n                    }\n\n                    css(docEl, 'overflowY', (!this.clsContentAnimation || this.flip) && this.scrollbarWidth && this.overlay ? 'scroll' : '');\n                    addClass(doc.body, this.clsContainer, this.clsFlip, this.clsOverlay);\n                    height(doc.body); // force reflow\n                    addClass(this.content, this.clsContentAnimation);\n                    addClass(this.panel, ((this.clsSidebarAnimation) + \" \" + (this.mode !== 'reveal' ? this.clsMode : '')));\n                    addClass(this.$el, this.clsOverlay);\n                    css(this.$el, 'display', 'block');\n                    height(this.$el); // force reflow\n\n                }\n            },\n\n            {\n                name: 'hide',\n\n                self: true,\n\n                handler: function handler() {\n                    removeClass(this.content, this.clsContentAnimation);\n\n                    var active = this.getActive();\n                    if (this.mode === 'none' || active && active !== this && active !== this.prev) {\n                        trigger(this.panel, 'transitionend');\n                    }\n                }\n            },\n\n            {\n                name: 'hidden',\n\n                self: true,\n\n                handler: function handler() {\n\n                    if (this.mode === 'reveal') {\n                        unwrap(this.panel);\n                    }\n\n                    if (!this.overlay) {\n                        scroll = {x: win.pageXOffset, y: win.pageYOffset};\n                    } else if (!scroll) {\n                        var ref = this.content;\n                        var x = ref.scrollLeft;\n                        var y = ref.scrollTop;\n                        scroll = {x: x, y: y};\n                    }\n\n                    removeClass(this.panel, this.clsSidebarAnimation, this.clsMode);\n                    removeClass(this.$el, this.clsOverlay);\n                    css(this.$el, 'display', '');\n                    removeClass(doc.body, this.clsContainer, this.clsFlip, this.clsOverlay);\n                    doc.body.scrollTop = scroll.y;\n\n                    css(docEl, 'overflow-y', '');\n\n                    width(this.content, '');\n                    height(this.content, '');\n\n                    win.scrollTo(scroll.x, scroll.y);\n\n                    scroll = null;\n\n                }\n            },\n\n            {\n                name: 'swipeLeft swipeRight',\n\n                handler: function handler(e) {\n\n                    if (this.isToggled() && isTouch(e) && (e.type === 'swipeLeft' && !this.flip || e.type === 'swipeRight' && this.flip)) {\n                        this.hide();\n                    }\n\n                }\n            }\n\n        ]\n\n    });\n\n}\n\nfunction Responsive (UIkit) {\n\n    UIkit.component('responsive', {\n\n        props: ['width', 'height'],\n\n        init: function init() {\n            addClass(this.$el, 'uk-responsive-width');\n        },\n\n        update: {\n\n            read: function read() {\n                return isVisible(this.$el) && this.width && this.height\n                    ? {width: width(this.$el.parentNode), height: this.height}\n                    : false;\n            },\n\n            write: function write(dim) {\n                height(this.$el, Dimensions.contain({height: this.height, width: this.width}, dim).height);\n            },\n\n            events: ['load', 'resize']\n\n        }\n\n    });\n\n}\n\nfunction Scroll (UIkit) {\n\n    UIkit.component('scroll', {\n\n        props: {\n            duration: Number,\n            offset: Number\n        },\n\n        defaults: {\n            duration: 1000,\n            offset: 0\n        },\n\n        methods: {\n\n            scrollTo: function scrollTo(el) {\n                var this$1 = this;\n\n\n                el = el && $(el) || doc.body;\n\n                var docHeight = height(doc);\n                var winHeight = height(win);\n\n                var target = offset(el).top - this.offset;\n                if (target + winHeight > docHeight) {\n                    target = docHeight - winHeight;\n                }\n\n                if (!trigger(this.$el, 'beforescroll', [this, el])) {\n                    return;\n                }\n\n                var start = Date.now();\n                var startY = win.pageYOffset;\n                var step = function () {\n\n                    var currentY = startY + (target - startY) * ease(clamp((Date.now() - start) / this$1.duration));\n\n                    win.scrollTo(win.pageXOffset, currentY);\n\n                    // scroll more if we have not reached our destination\n                    if (currentY !== target) {\n                        requestAnimationFrame(step);\n                    } else {\n                        trigger(this$1.$el, 'scrolled', [this$1, el]);\n                    }\n\n                };\n\n                step();\n\n            }\n\n        },\n\n        events: {\n\n            click: function click(e) {\n\n                if (e.defaultPrevented) {\n                    return;\n                }\n\n                e.preventDefault();\n                this.scrollTo(escape(this.$el.hash).substr(1));\n            }\n\n        }\n\n    });\n\n    function ease(k) {\n        return 0.5 * (1 - Math.cos(Math.PI * k));\n    }\n\n}\n\nfunction Scrollspy (UIkit) {\n\n    UIkit.component('scrollspy', {\n\n        args: 'cls',\n\n        props: {\n            cls: 'list',\n            target: String,\n            hidden: Boolean,\n            offsetTop: Number,\n            offsetLeft: Number,\n            repeat: Boolean,\n            delay: Number\n        },\n\n        defaults: {\n            cls: [],\n            target: false,\n            hidden: true,\n            offsetTop: 0,\n            offsetLeft: 0,\n            repeat: false,\n            delay: 0,\n            inViewClass: 'uk-scrollspy-inview'\n        },\n\n        computed: {\n\n            elements: function elements(ref, $el) {\n                var target = ref.target;\n\n                return target ? $$(target, $el) : [$el];\n            }\n\n        },\n\n        update: [\n\n            {\n\n                write: function write() {\n                    if (this.hidden) {\n                        css(filter(this.elements, (\":not(.\" + (this.inViewClass) + \")\")), 'visibility', 'hidden');\n                    }\n                }\n\n            },\n\n            {\n\n                read: function read(els) {\n                    var this$1 = this;\n\n\n                    // Let child components be applied at least once first\n                    if (!UIkit._initialized) {\n\n                        if (doc.readyState === 'complete') {\n                            requestAnimationFrame(function () { return this$1.$emit(); });\n                        }\n\n                        return false;\n                    }\n\n                    this.elements.forEach(function (el, i) {\n\n                        var elData = els[i];\n\n                        if (!elData || elData.el !== el) {\n                            var cls = data(el, 'uk-scrollspy-class');\n                            elData = {el: el, toggles: cls && cls.split(',') || this$1.cls};\n                        }\n\n                        elData.show = isInView(el, this$1.offsetTop, this$1.offsetLeft);\n                        els[i] = elData;\n\n                    });\n                },\n\n                write: function write(els) {\n                    var this$1 = this;\n\n\n                    var index = this.elements.length === 1 ? 1 : 0;\n\n                    this.elements.forEach(function (el, i) {\n\n                        var elData = els[i];\n                        var cls = elData.toggles[i] || elData.toggles[0];\n\n                        if (elData.show && !elData.inview && !elData.timer) {\n\n                            var show = function () {\n                                css(el, 'visibility', '');\n                                addClass(el, this$1.inViewClass);\n                                toggleClass(el, cls);\n\n                                trigger(el, 'inview');\n\n                                UIkit.update(null, el);\n\n                                elData.inview = true;\n                                delete elData.timer;\n                            };\n\n                            if (this$1.delay && index) {\n                                elData.timer = setTimeout(show, this$1.delay * index);\n                            } else {\n                                show();\n                            }\n\n                            index++;\n\n                        } else if (!elData.show && elData.inview && this$1.repeat) {\n\n                            if (elData.timer) {\n                                clearTimeout(elData.timer);\n                                delete elData.timer;\n                            }\n\n                            css(el, 'visibility', this$1.hidden ? 'hidden' : '');\n                            removeClass(el, this$1.inViewClass);\n                            toggleClass(el, cls);\n\n                            trigger(el, 'outview');\n\n                            UIkit.update(null, el);\n\n                            elData.inview = false;\n\n                        }\n\n\n                    });\n\n                },\n\n                events: ['scroll', 'load', 'resize']\n\n            }\n\n        ]\n\n    });\n\n}\n\nfunction ScrollspyNav (UIkit) {\n\n    UIkit.component('scrollspy-nav', {\n\n        props: {\n            cls: String,\n            closest: String,\n            scroll: Boolean,\n            overflow: Boolean,\n            offset: Number\n        },\n\n        defaults: {\n            cls: 'uk-active',\n            closest: false,\n            scroll: false,\n            overflow: true,\n            offset: 0\n        },\n\n        computed: {\n\n            links: function links(_, $el) {\n                return $$('a[href^=\"#\"]', $el).filter(function (el) { return el.hash; });\n            },\n\n            elements: function elements() {\n                return this.closest ? closest(this.links, this.closest) : this.links;\n            },\n\n            targets: function targets() {\n                return $$(this.links.map(function (el) { return el.hash; }).join(','));\n            }\n\n        },\n\n        update: [\n\n            {\n\n                read: function read() {\n                    if (this.scroll) {\n                        UIkit.scroll(this.links, {offset: this.offset || 0});\n                    }\n                }\n\n            },\n\n            {\n\n                read: function read(data) {\n                    var this$1 = this;\n\n\n                    var scroll = win.pageYOffset + this.offset + 1;\n                    var max = height(doc) - height(win) + this.offset;\n\n                    data.active = false;\n\n                    this.targets.every(function (el, i) {\n\n                        var ref = offset(el);\n                        var top = ref.top;\n                        var last = i + 1 === this$1.targets.length;\n\n                        if (!this$1.overflow && (i === 0 && top > scroll || last && top + el.offsetTop < scroll)) {\n                            return false;\n                        }\n\n                        if (!last && offset(this$1.targets[i + 1]).top <= scroll) {\n                            return true;\n                        }\n\n                        if (scroll >= max) {\n                            for (var j = this$1.targets.length - 1; j > i; j--) {\n                                if (isInView(this$1.targets[j])) {\n                                    el = this$1.targets[j];\n                                    break;\n                                }\n                            }\n                        }\n\n                        return !(data.active = $(filter(this$1.links, (\"[href=\\\"#\" + (el.id) + \"\\\"]\"))));\n\n                    });\n\n                },\n\n                write: function write(ref) {\n                    var active = ref.active;\n\n\n                    this.links.forEach(function (el) { return el.blur(); });\n                    removeClass(this.elements, this.cls);\n\n                    if (active) {\n                        trigger(this.$el, 'active', [active, addClass(this.closest ? closest(active, this.closest) : active, this.cls)]);\n                    }\n\n                },\n\n                events: ['scroll', 'load', 'resize']\n\n            }\n\n        ]\n\n    });\n\n}\n\nfunction Sticky (UIkit) {\n\n    UIkit.component('sticky', {\n\n        mixins: [Class],\n\n        attrs: true,\n\n        props: {\n            top: null,\n            bottom: Boolean,\n            offset: Number,\n            animation: String,\n            clsActive: String,\n            clsInactive: String,\n            clsFixed: String,\n            clsBelow: String,\n            selTarget: String,\n            widthElement: 'query',\n            showOnUp: Boolean,\n            media: 'media',\n            target: Number\n        },\n\n        defaults: {\n            top: 0,\n            bottom: false,\n            offset: 0,\n            animation: '',\n            clsActive: 'uk-active',\n            clsInactive: '',\n            clsFixed: 'uk-sticky-fixed',\n            clsBelow: 'uk-sticky-below',\n            selTarget: '',\n            widthElement: false,\n            showOnUp: false,\n            media: false,\n            target: false\n        },\n\n        computed: {\n\n            selTarget: function selTarget(ref, $el) {\n                var selTarget = ref.selTarget;\n\n                return selTarget && $(selTarget, $el) || $el;\n            }\n\n        },\n\n        connected: function connected() {\n\n            this.placeholder = $('<div class=\"uk-sticky-placeholder\"></div>');\n            this.widthElement = this.$props.widthElement || this.placeholder;\n\n            if (!this.isActive) {\n                this.hide();\n            }\n        },\n\n        disconnected: function disconnected() {\n\n            if (this.isActive) {\n                this.isActive = false;\n                this.hide();\n                removeClass(this.selTarget, this.clsInactive);\n            }\n\n            remove(this.placeholder);\n            this.placeholder = null;\n            this.widthElement = null;\n        },\n\n        ready: function ready() {\n            var this$1 = this;\n\n\n            if (!(this.target && location.hash && win.pageYOffset > 0)) {\n                return;\n            }\n\n            var target = $(location.hash);\n\n            if (target) {\n                fastdom.read(function () {\n\n                    var ref = offset(target);\n                    var top = ref.top;\n                    var elTop = offset(this$1.$el).top;\n                    var elHeight = this$1.$el.offsetHeight;\n\n                    if (elTop + elHeight >= top && elTop <= top + target.offsetHeight) {\n                        win.scrollTo(0, top - elHeight - this$1.target - this$1.offset);\n                    }\n\n                });\n            }\n\n        },\n\n        events: [\n\n            {\n                name: 'active',\n\n                self: true,\n\n                handler: function handler() {\n                    replaceClass(this.selTarget, this.clsInactive, this.clsActive);\n                }\n\n            },\n\n            {\n                name: 'inactive',\n\n                self: true,\n\n                handler: function handler() {\n                    replaceClass(this.selTarget, this.clsActive, this.clsInactive);\n                }\n\n            }\n\n        ],\n\n        update: [\n\n            {\n\n                write: function write() {\n\n                    var ref = this;\n                    var placeholder = ref.placeholder;\n                    var outerHeight = (this.isActive ? placeholder : this.$el).offsetHeight;\n\n                    css(placeholder, assign(\n                        {height: css(this.$el, 'position') !== 'absolute' ? outerHeight : ''},\n                        css(this.$el, ['marginTop', 'marginBottom', 'marginLeft', 'marginRight'])\n                    ));\n\n                    if (!within(placeholder, docEl)) {\n                        after(this.$el, placeholder);\n                        attr(placeholder, 'hidden', '');\n                    }\n\n                    attr(this.widthElement, 'hidden', null);\n                    this.width = this.widthElement.offsetWidth;\n                    attr(this.widthElement, 'hidden', this.isActive ? null : '');\n\n                    this.topOffset = offset(this.isActive ? placeholder : this.$el).top;\n                    this.bottomOffset = this.topOffset + outerHeight;\n\n                    var bottom = parseProp('bottom', this);\n\n                    this.top = Math.max(toFloat(parseProp('top', this)), this.topOffset) - this.offset;\n                    this.bottom = bottom && bottom - outerHeight;\n                    this.inactive = this.media && !win.matchMedia(this.media).matches;\n\n                    if (this.isActive) {\n                        this.update();\n                    }\n                },\n\n                events: ['load', 'resize']\n\n            },\n\n            {\n\n                read: function read(_, ref) {\n                    var scrollY = ref.scrollY; if ( scrollY === void 0 ) scrollY = win.pageYOffset;\n\n                    return {\n                        scroll: this.scroll = scrollY,\n                        visible: isVisible(this.$el)\n                    };\n                },\n\n                write: function write(ref, ref$1) {\n                    var this$1 = this;\n                    var visible = ref.visible;\n                    var scroll = ref.scroll;\n                    if ( ref$1 === void 0 ) ref$1 = {};\n                    var dir = ref$1.dir;\n\n\n                    if (scroll < 0 || !visible || this.disabled || this.showOnUp && !dir) {\n                        return;\n                    }\n\n                    if (this.inactive\n                        || scroll < this.top\n                        || this.showOnUp && (scroll <= this.top || dir === 'down' || dir === 'up' && !this.isActive && scroll <= this.bottomOffset)\n                    ) {\n\n                        if (!this.isActive) {\n                            return;\n                        }\n\n                        this.isActive = false;\n\n                        if (this.animation && scroll > this.topOffset) {\n                            Animation.cancel(this.$el);\n                            Animation.out(this.$el, this.animation).then(function () { return this$1.hide(); }, noop);\n                        } else {\n                            this.hide();\n                        }\n\n                    } else if (this.isActive) {\n\n                        this.update();\n\n                    } else if (this.animation) {\n\n                        Animation.cancel(this.$el);\n                        this.show();\n                        Animation.in(this.$el, this.animation).catch(noop);\n\n                    } else {\n                        this.show();\n                    }\n\n                },\n\n                events: ['scroll']\n\n            } ],\n\n        methods: {\n\n            show: function show() {\n\n                this.isActive = true;\n                this.update();\n                attr(this.placeholder, 'hidden', null);\n\n            },\n\n            hide: function hide() {\n\n                if (!this.isActive || hasClass(this.selTarget, this.clsActive)) {\n                    trigger(this.$el, 'inactive');\n                }\n\n                removeClass(this.$el, this.clsFixed, this.clsBelow);\n                css(this.$el, {position: '', top: '', width: ''});\n                attr(this.placeholder, 'hidden', '');\n\n            },\n\n            update: function update() {\n\n                var active = this.top !== 0 || this.scroll > this.top;\n                var top = Math.max(0, this.offset);\n\n                if (this.bottom && this.scroll > this.bottom - this.offset) {\n                    top = this.bottom - this.scroll;\n                }\n\n                css(this.$el, {\n                    position: 'fixed',\n                    top: (top + \"px\"),\n                    width: this.width\n                });\n\n                if (hasClass(this.selTarget, this.clsActive)) {\n\n                    if (!active) {\n                        trigger(this.$el, 'inactive');\n                    }\n\n                } else if (active) {\n                    trigger(this.$el, 'active');\n                }\n\n                toggleClass(this.$el, this.clsBelow, this.scroll > this.bottomOffset);\n                addClass(this.$el, this.clsFixed);\n\n            }\n\n        }\n\n    });\n\n    function parseProp(prop, ref) {\n        var $props = ref.$props;\n        var $el = ref.$el;\n        var propOffset = ref[(prop + \"Offset\")];\n\n\n        var value = $props[prop];\n\n        if (!value) {\n            return;\n        }\n\n        if (isNumeric(value)) {\n\n            return propOffset + toFloat(value);\n\n        } else if (isString(value) && value.match(/^-?\\d+vh$/)) {\n\n            return height(win) * toFloat(value) / 100;\n\n        } else {\n\n            var el = value === true ? $el.parentNode : query(value, $el);\n\n            if (el) {\n                return offset(el).top + el.offsetHeight;\n            }\n\n        }\n    }\n\n}\n\nvar svgs = {};\n\nfunction Svg (UIkit) {\n\n    UIkit.component('svg', {\n\n        attrs: true,\n\n        props: {\n            id: String,\n            icon: String,\n            src: String,\n            style: String,\n            width: Number,\n            height: Number,\n            ratio: Number,\n            'class': String\n        },\n\n        defaults: {\n            ratio: 1,\n            id: false,\n            exclude: ['src'],\n            'class': ''\n        },\n\n        init: function init() {\n            this.class += ' uk-svg';\n        },\n\n        connected: function connected() {\n            var this$1 = this;\n\n\n            if (!this.icon && includes(this.src, '#')) {\n\n                var parts = this.src.split('#');\n\n                if (parts.length > 1) {\n                    var assign;\n                    (assign = parts, this.src = assign[0], this.icon = assign[1]);\n                }\n            }\n\n            this.svg = this.getSvg().then(function (svg) {\n\n                var el;\n\n                if (isString(svg)) {\n\n                    if (this$1.icon && includes(svg, '<symbol')) {\n                        svg = parseSymbols(svg, this$1.icon) || svg;\n                    }\n\n                    el = $(svg.substr(svg.indexOf('<svg')));\n\n                } else {\n                    el = svg.cloneNode(true);\n                }\n\n                if (!el) {\n                    return Promise.reject('SVG not found.');\n                }\n\n                var dimensions = attr(el, 'viewBox');\n\n                if (dimensions) {\n                    dimensions = dimensions.split(' ');\n                    this$1.width = this$1.$props.width || dimensions[2];\n                    this$1.height = this$1.$props.height || dimensions[3];\n                }\n\n                this$1.width *= this$1.ratio;\n                this$1.height *= this$1.ratio;\n\n                for (var prop in this$1.$options.props) {\n                    if (this$1[prop] && !includes(this$1.exclude, prop)) {\n                        attr(el, prop, this$1[prop]);\n                    }\n                }\n\n                if (!this$1.id) {\n                    removeAttr(el, 'id');\n                }\n\n                if (this$1.width && !this$1.height) {\n                    removeAttr(el, 'height');\n                }\n\n                if (this$1.height && !this$1.width) {\n                    removeAttr(el, 'width');\n                }\n\n                var root = this$1.$el;\n                if (isVoidElement(root) || root.tagName === 'CANVAS') {\n\n                    attr(root, {hidden: true, id: null});\n\n                    var next = root.nextElementSibling;\n                    if (next && el.isEqualNode(next)) {\n                        el = next;\n                    } else {\n                        after(root, el);\n                    }\n\n                } else {\n\n                    var last = root.lastElementChild;\n                    if (last && el.isEqualNode(last)) {\n                        el = last;\n                    } else {\n                        append(root, el);\n                    }\n\n                }\n\n                this$1.svgEl = el;\n\n                return el;\n\n            }, noop);\n\n        },\n\n        disconnected: function disconnected() {\n            var this$1 = this;\n\n\n            if (isVoidElement(this.$el)) {\n                attr(this.$el, {hidden: null, id: this.id || null});\n            }\n\n            if (this.svg) {\n                this.svg.then(function (svg) { return (!this$1._connected || svg !== this$1.svgEl) && remove(svg); }, noop);\n            }\n\n            this.svg = this.svgEl = null;\n\n        },\n\n        methods: {\n\n            getSvg: function getSvg() {\n                var this$1 = this;\n\n\n                if (!this.src) {\n                    return Promise.reject();\n                }\n\n                if (svgs[this.src]) {\n                    return svgs[this.src];\n                }\n\n                svgs[this.src] = new Promise(function (resolve, reject) {\n\n                    if (startsWith(this$1.src, 'data:')) {\n                        resolve(decodeURIComponent(this$1.src.split(',')[1]));\n                    } else {\n\n                        ajax(this$1.src).then(\n                            function (xhr) { return resolve(xhr.response); },\n                            function () { return reject('SVG not found.'); }\n                        );\n\n                    }\n\n                });\n\n                return svgs[this.src];\n\n            }\n\n        }\n\n    });\n\n    var symbolRe = /<symbol(.*?id=(['\"])(.*?)\\2[^]*?<\\/)symbol>/g;\n    var symbols = {};\n\n    function parseSymbols(svg, icon) {\n\n        if (!symbols[svg]) {\n\n            symbols[svg] = {};\n\n            var match;\n            while ((match = symbolRe.exec(svg))) {\n                symbols[svg][match[3]] = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"\" + (match[1]) + \"svg>\";\n            }\n\n        }\n\n        return symbols[svg][icon];\n    }\n\n}\n\nfunction Switcher (UIkit) {\n\n    UIkit.component('switcher', {\n\n        mixins: [Togglable],\n\n        args: 'connect',\n\n        props: {\n            connect: String,\n            toggle: String,\n            active: Number,\n            swiping: Boolean\n        },\n\n        defaults: {\n            connect: '~.uk-switcher',\n            toggle: '> *',\n            active: 0,\n            swiping: true,\n            cls: 'uk-active',\n            clsContainer: 'uk-switcher',\n            attrItem: 'uk-switcher-item',\n            queued: true\n        },\n\n        computed: {\n\n            connects: function connects(ref, $el) {\n                var connect = ref.connect;\n\n                return queryAll(connect, $el);\n            },\n\n            toggles: function toggles(ref, $el) {\n                var toggle = ref.toggle;\n\n                return $$(toggle, $el);\n            }\n\n        },\n\n        events: [\n\n            {\n\n                name: 'click',\n\n                delegate: function delegate() {\n                    return ((this.toggle) + \":not(.uk-disabled)\");\n                },\n\n                handler: function handler(e) {\n                    e.preventDefault();\n                    this.show(e.current);\n                }\n\n            },\n\n            {\n                name: 'click',\n\n                el: function el() {\n                    return this.connects;\n                },\n\n                delegate: function delegate() {\n                    return (\"[\" + (this.attrItem) + \"],[data-\" + (this.attrItem) + \"]\");\n                },\n\n                handler: function handler(e) {\n                    e.preventDefault();\n                    this.show(data(e.current, this.attrItem));\n                }\n            },\n\n            {\n                name: 'swipeRight swipeLeft',\n\n                filter: function filter() {\n                    return this.swiping;\n                },\n\n                el: function el() {\n                    return this.connects;\n                },\n\n                handler: function handler(e) {\n                    if (!isTouch(e)) {\n                        return;\n                    }\n\n                    e.preventDefault();\n                    if (!win.getSelection().toString()) {\n                        this.show(e.type === 'swipeLeft' ? 'next' : 'previous');\n                    }\n                }\n            }\n\n        ],\n\n        update: function update() {\n            var this$1 = this;\n\n\n            this.connects.forEach(function (list) { return this$1.updateAria(list.children); });\n            this.show(filter(this.toggles, (\".\" + (this.cls)))[0] || this.toggles[this.active] || this.toggles[0]);\n\n        },\n\n        methods: {\n\n            show: function show(item) {\n                var this$1 = this;\n\n\n                var ref = this.toggles;\n                var length = ref.length;\n                var prev = !!this.connects.length && index(filter(this.connects[0].children, (\".\" + (this.cls)))[0]);\n                var hasPrev = prev >= 0;\n                var dir = item === 'previous' ? -1 : 1;\n\n                var toggle, next = getIndex(item, this.toggles, prev);\n\n                for (var i = 0; i < length; i++, next = (next + dir + length) % length) {\n                    if (!matches(this$1.toggles[next], '.uk-disabled, [disabled]')) {\n                        toggle = this$1.toggles[next];\n                        break;\n                    }\n                }\n\n                if (!toggle || prev >= 0 && hasClass(toggle, this.cls) || prev === next) {\n                    return;\n                }\n\n                removeClass(this.toggles, this.cls);\n                attr(this.toggles, 'aria-expanded', false);\n                addClass(toggle, this.cls);\n                attr(toggle, 'aria-expanded', true);\n\n                this.connects.forEach(function (list) {\n                    if (!hasPrev) {\n                        this$1.toggleNow(list.children[next]);\n                    } else {\n                        this$1.toggleElement([list.children[prev], list.children[next]]);\n                    }\n                });\n\n            }\n\n        }\n\n    });\n\n}\n\nfunction Tab (UIkit) {\n\n    UIkit.component('tab', UIkit.components.switcher.extend({\n\n        mixins: [Class],\n\n        name: 'tab',\n\n        props: {\n            media: 'media'\n        },\n\n        defaults: {\n            media: 960,\n            attrItem: 'uk-tab-item'\n        },\n\n        init: function init() {\n\n            var cls = hasClass(this.$el, 'uk-tab-left')\n                ? 'uk-tab-left'\n                : hasClass(this.$el, 'uk-tab-right')\n                    ? 'uk-tab-right'\n                    : false;\n\n            if (cls) {\n                UIkit.toggle(this.$el, {cls: cls, mode: 'media', media: this.media});\n            }\n        }\n\n    }));\n\n}\n\nfunction Toggle (UIkit) {\n\n    UIkit.component('toggle', {\n\n        mixins: [UIkit.mixin.togglable],\n\n        args: 'target',\n\n        props: {\n            href: String,\n            target: null,\n            mode: 'list',\n            media: 'media'\n        },\n\n        defaults: {\n            href: false,\n            target: false,\n            mode: 'click',\n            queued: true,\n            media: false\n        },\n\n        computed: {\n\n            target: function target(ref, $el) {\n                var href = ref.href;\n                var target = ref.target;\n\n                target = queryAll(target || href, $el);\n                return target.length && target || [$el];\n            }\n\n        },\n\n        events: [\n\n            {\n\n                name: (pointerEnter + \" \" + pointerLeave),\n\n                filter: function filter() {\n                    return includes(this.mode, 'hover');\n                },\n\n                handler: function handler(e) {\n                    if (!isTouch(e)) {\n                        this.toggle((\"toggle\" + (e.type === pointerEnter ? 'show' : 'hide')));\n                    }\n                }\n\n            },\n\n            {\n\n                name: 'click',\n\n                filter: function filter() {\n                    return includes(this.mode, 'click') || hasTouch;\n                },\n\n                handler: function handler(e) {\n\n                    if (!isTouch(e) && !includes(this.mode, 'click')) {\n                        return;\n                    }\n\n                    // TODO better isToggled handling\n                    var link;\n                    if (closest(e.target, 'a[href=\"#\"], button')\n                        || (link = closest(e.target, 'a[href]')) && (\n                            this.cls\n                            || !isVisible(this.target)\n                            || link.hash && matches(this.target, link.hash)\n                        )\n                    ) {\n                        once(doc, 'click', function (e) { return e.preventDefault(); });\n                    }\n\n                    this.toggle();\n                }\n\n            }\n        ],\n\n        update: {\n\n            write: function write() {\n\n                if (!includes(this.mode, 'media') || !this.media) {\n                    return;\n                }\n\n                var toggled = this.isToggled(this.target);\n                if (win.matchMedia(this.media).matches ? !toggled : toggled) {\n                    this.toggle();\n                }\n\n            },\n\n            events: ['load', 'resize']\n\n        },\n\n        methods: {\n\n            toggle: function toggle(type) {\n                if (trigger(this.target, type || 'toggle', [this])) {\n                    this.toggleElement(this.target);\n                }\n            }\n\n        }\n\n    });\n\n}\n\nfunction Video (UIkit) {\n\n    UIkit.component('video', {\n\n        props: {\n            automute: Boolean,\n            autoplay: Boolean,\n        },\n\n        defaults: {\n            automute: false,\n            autoplay: true\n        },\n\n        computed: {\n\n            inView: function inView(ref) {\n                var autoplay = ref.autoplay;\n\n                return autoplay === 'inview';\n            }\n\n        },\n\n        ready: function ready() {\n\n            this.player = new Player(this.$el);\n\n            if (this.automute) {\n                this.player.mute();\n            }\n\n        },\n\n        update: [\n\n            {\n\n                read: function read(_, ref) {\n                    var type = ref.type;\n\n\n                    return !this.player || (type === 'scroll' || type === 'resize') && !this.inView\n                        ? false\n                        : {\n                            visible: isVisible(this.$el) && css(this.$el, 'visibility') !== 'hidden',\n                            inView: this.inView && isInView(this.$el)\n                        };\n                },\n\n                write: function write(ref) {\n                    var visible = ref.visible;\n                    var inView = ref.inView;\n\n\n                    if (!visible || this.inView && !inView) {\n                        this.player.pause();\n                    } else if (this.autoplay === true || this.inView && inView) {\n                        this.player.play();\n                    }\n\n                },\n\n                events: ['load', 'resize', 'scroll']\n\n            }\n\n        ],\n\n    });\n\n}\n\nfunction core (UIkit) {\n\n    // core components\n    UIkit.use(Toggle);\n    UIkit.use(Accordion);\n    UIkit.use(Alert);\n    UIkit.use(Video);\n    UIkit.use(Cover);\n    UIkit.use(Drop);\n    UIkit.use(Dropdown);\n    UIkit.use(FormCustom);\n    UIkit.use(HeightMatch);\n    UIkit.use(HeightViewport);\n    UIkit.use(Margin);\n    UIkit.use(Gif);\n    UIkit.use(Grid);\n    UIkit.use(Leader);\n    UIkit.use(Modal$1);\n    UIkit.use(Nav);\n    UIkit.use(Navbar);\n    UIkit.use(Offcanvas);\n    UIkit.use(Responsive);\n    UIkit.use(Scroll);\n    UIkit.use(Scrollspy);\n    UIkit.use(ScrollspyNav);\n    UIkit.use(Sticky);\n    UIkit.use(Svg);\n    UIkit.use(Icon);\n    UIkit.use(Switcher);\n    UIkit.use(Tab);\n\n    // core functionality\n    UIkit.use(Core);\n\n}\n\nUIkit$2.version = '3.0.0-beta.40';\n\nmixin(UIkit$2);\ncore(UIkit$2);\n\nfunction plugin(UIkit) {\n\n    if (plugin.installed) {\n        return;\n    }\n\n    var ref = UIkit.util;\n    var $ = ref.$;\n    var doc = ref.doc;\n    var empty = ref.empty;\n    var html = ref.html;\n\n    UIkit.component('countdown', {\n\n        mixins: [UIkit.mixin.class],\n\n        attrs: true,\n\n        props: {\n            date: String,\n            clsWrapper: String\n        },\n\n        defaults: {\n            date: '',\n            clsWrapper: '.uk-countdown-%unit%'\n        },\n\n        computed: {\n\n            date: function date(ref) {\n                var date = ref.date;\n\n                return Date.parse(date);\n            },\n\n            days: function days(ref, $el) {\n                var clsWrapper = ref.clsWrapper;\n\n                return $(clsWrapper.replace('%unit%', 'days'), $el);\n            },\n\n            hours: function hours(ref, $el) {\n                var clsWrapper = ref.clsWrapper;\n\n                return $(clsWrapper.replace('%unit%', 'hours'), $el);\n            },\n\n            minutes: function minutes(ref, $el) {\n                var clsWrapper = ref.clsWrapper;\n\n                return $(clsWrapper.replace('%unit%', 'minutes'), $el);\n            },\n\n            seconds: function seconds(ref, $el) {\n                var clsWrapper = ref.clsWrapper;\n\n                return $(clsWrapper.replace('%unit%', 'seconds'), $el);\n            },\n\n            units: function units() {\n                var this$1 = this;\n\n                return ['days', 'hours', 'minutes', 'seconds'].filter(function (unit) { return this$1[unit]; });\n            }\n\n        },\n\n        connected: function connected() {\n            this.start();\n        },\n\n        disconnected: function disconnected() {\n            var this$1 = this;\n\n            this.stop();\n            this.units.forEach(function (unit) { return empty(this$1[unit]); });\n        },\n\n        events: [\n\n            {\n\n                name: 'visibilitychange',\n\n                el: doc,\n\n                handler: function handler() {\n                    if (doc.hidden) {\n                        this.stop();\n                    } else {\n                        this.start();\n                    }\n                }\n\n            }\n\n        ],\n\n        update: {\n\n            write: function write() {\n                var this$1 = this;\n\n\n                var timespan = getTimeSpan(this.date);\n\n                if (timespan.total <= 0) {\n\n                    this.stop();\n\n                    timespan.days\n                        = timespan.hours\n                        = timespan.minutes\n                        = timespan.seconds\n                        = 0;\n                }\n\n                this.units.forEach(function (unit) {\n\n                    var digits = String(Math.floor(timespan[unit]));\n\n                    digits = digits.length < 2 ? (\"0\" + digits) : digits;\n\n                    var el = this$1[unit];\n                    if (el.textContent !== digits) {\n                        digits = digits.split('');\n\n                        if (digits.length !== el.children.length) {\n                            html(el, digits.map(function () { return '<span></span>'; }).join(''));\n                        }\n\n                        digits.forEach(function (digit, i) { return el.children[i].textContent = digit; });\n                    }\n\n                });\n\n            }\n\n        },\n\n        methods: {\n\n            start: function start() {\n                var this$1 = this;\n\n\n                this.stop();\n\n                if (this.date && this.units.length) {\n                    this.$emit();\n                    this.timer = setInterval(function () { return this$1.$emit(); }, 1000);\n                }\n\n            },\n\n            stop: function stop() {\n\n                if (this.timer) {\n                    clearInterval(this.timer);\n                    this.timer = null;\n                }\n\n            }\n\n        }\n\n    });\n\n    function getTimeSpan(date) {\n\n        var total = date - Date.now();\n\n        return {\n            total: total,\n            seconds: total / 1000 % 60,\n            minutes: total / 1000 / 60 % 60,\n            hours: total / 1000 / 60 / 60 % 24,\n            days: total / 1000 / 60 / 60 / 24\n        };\n    }\n\n}\n\nfunction plugin$1(UIkit) {\n\n    if (plugin$1.installed) {\n        return;\n    }\n\n    var ref = UIkit.util;\n    var addClass = ref.addClass;\n    var css = ref.css;\n    var scrolledOver = ref.scrolledOver;\n    var sortBy = ref.sortBy;\n    var toFloat = ref.toFloat;\n\n    UIkit.component('grid-parallax', UIkit.components.grid.extend({\n\n        props: {\n            target: String,\n            translate: Number\n        },\n\n        defaults: {\n            target: false,\n            translate: 150\n        },\n\n        computed: {\n\n            translate: function translate(ref) {\n                var translate = ref.translate;\n\n                return Math.abs(translate);\n            }\n\n        },\n\n        init: function init() {\n            addClass(this.$el, 'uk-grid');\n        },\n\n        disconnected: function disconnected() {\n            this.reset();\n            css(this.$el, 'marginBottom', '');\n        },\n\n        update: [\n\n            {\n\n                read: function read(ref) {\n                    var rows = ref.rows;\n\n                    return {\n                        columns: rows && rows[0] && rows[0].length || 0,\n                        rows: rows && rows.map(function (elements) { return sortBy(elements, 'offsetLeft'); })\n                    };\n                },\n\n                write: function write(ref) {\n                    var columns = ref.columns;\n\n                    css(this.$el, 'marginBottom', columns > 1\n                        ? this.translate + toFloat(css(css(this.$el, 'marginBottom', ''), 'marginBottom'))\n                        : '');\n                },\n\n                events: ['load', 'resize']\n            },\n\n            {\n\n                read: function read() {\n                    return {scrolled: scrolledOver(this.$el) * this.translate};\n                },\n\n                write: function write(ref) {\n                    var rows = ref.rows;\n                    var columns = ref.columns;\n                    var scrolled = ref.scrolled;\n\n\n                    if (!rows || columns === 1 || !scrolled) {\n                        return this.reset();\n                    }\n\n                    rows.forEach(function (row) { return row.forEach(function (el, i) { return css(el, 'transform', (\"translateY(\" + (i % 2 ? scrolled : scrolled / 8) + \"px)\")); }\n                        ); }\n                    );\n\n                },\n\n                events: ['scroll', 'load', 'resize']\n            }\n        ],\n\n        methods: {\n\n            reset: function reset() {\n                css(this.$el.children, 'transform', '');\n            }\n\n        }\n\n    }));\n\n    UIkit.components.gridParallax.options.update.unshift({\n\n        read: function read() {\n            this.reset();\n        },\n\n        events: ['load', 'resize']\n\n    });\n\n}\n\nfunction AnimationsPlugin (UIkit) {\n\n    var ref = UIkit.util;\n    var css = ref.css;\n\n    var Animations = {\n\n        slide: {\n\n            show: function show(dir) {\n                return [\n                    {transform: translate(dir * -100)},\n                    {transform: translate()}\n                ];\n            },\n\n            percent: function percent(current) {\n                return Animations.translated(current);\n            },\n\n            translate: function translate$1(percent, dir) {\n                return [\n                    {transform: translate(dir * -100 * percent)},\n                    {transform: translate(dir * 100 * (1 - percent))}\n                ];\n            }\n\n        },\n\n        translated: function translated(el) {\n            return Math.abs(css(el, 'transform').split(',')[4] / el.offsetWidth) || 0;\n        }\n\n    };\n\n    return Animations;\n\n}\n\nfunction translate(value, unit) {\n    if ( value === void 0 ) value = 0;\n    if ( unit === void 0 ) unit = '%';\n\n    return (\"translateX(\" + value + (value ? unit : '') + \")\"); // currently not translate3d to support IE, translate3d within translate3d does not work while transitioning\n}\n\nfunction scale3d(value) {\n    return (\"scale3d(\" + value + \", \" + value + \", 1)\");\n}\n\nfunction TransitionerPlugin (UIkit) {\n\n    var ref = UIkit.util;\n    var createEvent = ref.createEvent;\n    var clamp = ref.clamp;\n    var css = ref.css;\n    var Deferred = ref.Deferred;\n    var noop = ref.noop;\n    var Promise = ref.Promise;\n    var Transition = ref.Transition;\n    var trigger = ref.trigger;\n\n    function Transitioner(prev, next, dir, ref) {\n        var animation = ref.animation;\n        var easing = ref.easing;\n\n\n        var percent = animation.percent;\n        var translate = animation.translate;\n        var show = animation.show; if ( show === void 0 ) show = noop;\n        var props = show(dir);\n        var deferred = new Deferred();\n\n        return {\n\n            dir: dir,\n\n            show: function show(duration, percent, linear) {\n                var this$1 = this;\n                if ( percent === void 0 ) percent = 0;\n\n\n                var timing = linear ? 'linear' : easing;\n                duration -= Math.round(duration * clamp(percent, -1, 1));\n\n                this.translate(percent);\n\n                triggerUpdate(next, 'itemin', {percent: percent, duration: duration, timing: timing, dir: dir});\n                triggerUpdate(prev, 'itemout', {percent: 1 - percent, duration: duration, timing: timing, dir: dir});\n\n                Promise.all([\n                    Transition.start(next, props[1], duration, timing),\n                    Transition.start(prev, props[0], duration, timing)\n                ]).then(function () {\n                    this$1.reset();\n                    deferred.resolve();\n                }, noop);\n\n                return deferred.promise;\n            },\n\n            stop: function stop() {\n                return Transition.stop([next, prev]);\n            },\n\n            cancel: function cancel() {\n                Transition.cancel([next, prev]);\n            },\n\n            reset: function reset() {\n                for (var prop in props[0]) {\n                    css([next, prev], prop, '');\n                }\n            },\n\n            forward: function forward(duration, percent) {\n                if ( percent === void 0 ) percent = this.percent();\n\n                Transition.cancel([next, prev]);\n                return this.show(duration, percent, true);\n\n            },\n\n            translate: function translate$1(percent) {\n\n                var props = translate(percent, dir);\n                css(next, props[1]);\n                css(prev, props[0]);\n                triggerUpdate(next, 'itemtranslatein', {percent: percent, dir: dir});\n                triggerUpdate(prev, 'itemtranslateout', {percent: 1 - percent, dir: dir});\n\n            },\n\n            percent: function percent$1() {\n                return percent(prev || next, next, dir);\n            },\n\n            getDistance: function getDistance() {\n                return prev.offsetWidth;\n            }\n\n        };\n\n    }\n\n    function triggerUpdate(el, type, data) {\n        trigger(el, createEvent(type, false, false, data));\n    }\n\n    return Transitioner;\n\n}\n\nfunction AutoplayMixin (UIkit) {\n\n    var ref = UIkit.util;\n    var doc = ref.doc;\n    var pointerDown = ref.pointerDown;\n\n    return {\n\n        props: {\n            autoplay: Boolean,\n            autoplayInterval: Number,\n            pauseOnHover: Boolean\n        },\n\n        defaults: {\n            autoplay: false,\n            autoplayInterval: 7000,\n            pauseOnHover: true\n        },\n\n        connected: function connected() {\n            this.startAutoplay();\n        },\n\n        disconnected: function disconnected() {\n            this.stopAutoplay();\n        },\n\n        events: [\n\n            {\n\n                name: 'visibilitychange',\n\n                el: doc,\n\n                handler: function handler() {\n                    if (doc.hidden) {\n                        this.stopAutoplay();\n                    } else {\n                        this.startAutoplay();\n                    }\n                }\n\n            },\n\n            {\n\n                name: pointerDown,\n                handler: 'stopAutoplay'\n\n            },\n\n            {\n\n                name: 'mouseenter',\n\n                filter: function filter() {\n                    return this.autoplay;\n                },\n\n                handler: function handler() {\n                    this.isHovering = true;\n                }\n\n            },\n\n            {\n\n                name: 'mouseleave',\n\n                filter: function filter() {\n                    return this.autoplay;\n                },\n\n                handler: function handler() {\n                    this.isHovering = false;\n                }\n\n            }\n\n        ],\n\n        methods: {\n\n            startAutoplay: function startAutoplay() {\n                var this$1 = this;\n\n\n                this.stopAutoplay();\n\n                if (this.autoplay) {\n                    this.interval = setInterval(\n                        function () { return !(this$1.isHovering && this$1.pauseOnHover) && !this$1.stack.length && this$1.show('next'); },\n                        this.autoplayInterval\n                    );\n                }\n\n            },\n\n            stopAutoplay: function stopAutoplay() {\n                if (this.interval) {\n                    clearInterval(this.interval);\n                }\n            }\n\n        }\n\n    };\n}\n\nfunction DragMixin (UIkit) {\n\n    var ref = UIkit.util;\n    var doc = ref.doc;\n    var getPos = ref.getPos;\n    var includes = ref.includes;\n    var isRtl = ref.isRtl;\n    var isTouch = ref.isTouch;\n    var off = ref.off;\n    var on = ref.on;\n    var pointerDown = ref.pointerDown;\n    var pointerMove = ref.pointerMove;\n    var pointerUp = ref.pointerUp;\n    var preventClick = ref.preventClick;\n    var trigger = ref.trigger;\n    var win = ref.win;\n\n    return {\n\n        defaults: {\n            threshold: 10,\n            preventCatch: false\n        },\n\n        init: function init() {\n            var this$1 = this;\n\n\n            ['start', 'move', 'end'].forEach(function (key) {\n\n                var fn = this$1[key];\n                this$1[key] = function (e) {\n\n                    var pos = getPos(e).x * (isRtl ? -1 : 1);\n\n                    this$1.prevPos = pos !== this$1.pos ? this$1.pos : this$1.prevPos;\n                    this$1.pos = pos;\n\n                    fn(e);\n                };\n\n            });\n\n        },\n\n        events: [\n\n            {\n\n                name: pointerDown,\n\n                delegate: function delegate() {\n                    return this.slidesSelector;\n                },\n\n                handler: function handler(e) {\n\n                    if (!isTouch(e) && hasTextNodesOnly(e.target)\n                        || e.button > 0\n                        || this.length < 2\n                        || this.preventCatch\n                    ) {\n                        return;\n                    }\n\n                    this.start(e);\n                }\n\n            },\n\n            {\n                name: 'dragstart',\n\n                handler: function handler(e) {\n                    e.preventDefault();\n                }\n            }\n\n        ],\n\n        methods: {\n\n            start: function start() {\n\n                this.drag = this.pos;\n\n                if (this._transitioner) {\n\n                    this.percent = this._transitioner.percent();\n                    this.drag += this._transitioner.getDistance() * this.percent * this.dir;\n\n                    this._transitioner.translate(this.percent);\n                    this._transitioner.cancel();\n\n                    this.dragging = true;\n\n                    this.stack = [];\n\n                } else {\n                    this.prevIndex = this.index;\n                }\n\n                this.unbindMove = on(doc, pointerMove, this.move, {capture: true, passive: false});\n                on(win, 'scroll', this.unbindMove);\n                on(doc, pointerUp, this.end, true);\n\n            },\n\n            move: function move(e) {\n                var this$1 = this;\n\n\n                var distance = this.pos - this.drag;\n\n                if (distance === 0 || this.prevPos === this.pos || !this.dragging && Math.abs(distance) < this.threshold) {\n                    return;\n                }\n\n                e.cancelable && e.preventDefault();\n\n                this.dragging = true;\n                this.dir = (distance < 0 ? 1 : -1);\n\n                var ref = this;\n                var slides = ref.slides;\n                var ref$1 = this;\n                var prevIndex = ref$1.prevIndex;\n                var dis = Math.abs(distance);\n                var nextIndex = this.getIndex(prevIndex + this.dir, prevIndex);\n                var width = this._getDistance(prevIndex, nextIndex) || slides[prevIndex].offsetWidth;\n\n                while (nextIndex !== prevIndex && dis > width) {\n\n                    this$1.drag -= width * this$1.dir;\n\n                    prevIndex = nextIndex;\n                    dis -= width;\n                    nextIndex = this$1.getIndex(prevIndex + this$1.dir, prevIndex);\n                    width = this$1._getDistance(prevIndex, nextIndex) || slides[prevIndex].offsetWidth;\n\n                }\n\n                this.percent = dis / width;\n\n                var prev = slides[prevIndex];\n                var next = slides[nextIndex];\n                var changed = this.index !== nextIndex;\n                var edge = prevIndex === nextIndex;\n\n                var reset;\n\n                [this.index, this.prevIndex].filter(function (i) { return !includes([nextIndex, prevIndex], i); }).forEach(function (i) {\n                    trigger(slides[i], 'itemhidden', [this$1]);\n\n                    reset = true;\n\n                    if (edge) {\n                        this$1.prevIndex = prevIndex;\n                    }\n\n                });\n\n                if (this.index === prevIndex && this.prevIndex !== prevIndex || reset && edge) {\n                    trigger(slides[this.index], 'itemshown', [this]);\n                }\n\n                if (changed) {\n                    this.prevIndex = prevIndex;\n                    this.index = nextIndex;\n\n                    !edge && trigger(prev, 'beforeitemhide', [this]);\n                    trigger(next, 'beforeitemshow', [this]);\n                }\n\n                (reset || this.length < 3) && this._transitioner && this._transitioner.reset();\n                this._transitioner = this._translate(Math.abs(this.percent), prev, !edge && next);\n\n                if (changed) {\n                    !edge && trigger(prev, 'itemhide', [this]);\n                    trigger(next, 'itemshow', [this]);\n                }\n\n            },\n\n            end: function end() {\n\n                off(win, 'scroll', this.unbindMove);\n                this.unbindMove();\n                off(doc, pointerUp, this.end, true);\n\n                if (this.dragging) {\n\n                    this.dragging = null;\n\n                    if (this.index === this.prevIndex) {\n                        this.percent = 1 - this.percent;\n                        this.dir *= -1;\n                        this._show(false, this.index, true);\n                        this._transitioner = null;\n                    } else {\n\n                        var dirChange = (isRtl ? this.dir * (isRtl ? 1 : -1) : this.dir) < 0 === this.prevPos > this.pos;\n                        this.index = dirChange ? this.index : this.prevIndex;\n\n                        if (dirChange) {\n                            this.percent = 1 - this.percent;\n                        }\n\n                        this.show(this.dir > 0 && !dirChange || this.dir < 0 && dirChange ? 'next' : 'previous', true);\n                    }\n\n                    preventClick();\n\n                }\n\n                this.drag\n                    = this.percent\n                    = null;\n\n            }\n\n        }\n\n    };\n\n    function hasTextNodesOnly(el) {\n        return !el.children.length && el.childNodes.length;\n    }\n\n}\n\nfunction NavMixin (UIkit) {\n\n    var ref = UIkit.util;\n    var $ = ref.$;\n    var $$ = ref.$$;\n    var data = ref.data;\n    var html = ref.html;\n    var toggleClass = ref.toggleClass;\n    var toNumber = ref.toNumber;\n\n    return {\n\n        defaults: {\n            selNav: false\n        },\n\n        computed: {\n\n            nav: function nav(ref, $el) {\n                var selNav = ref.selNav;\n\n                return $(selNav, $el);\n            },\n\n            navItemSelector: function navItemSelector(ref) {\n                var attrItem = ref.attrItem;\n\n                return (\"[\" + attrItem + \"],[data-\" + attrItem + \"]\");\n            },\n\n            navItems: function navItems(_, $el) {\n                return $$(this.navItemSelector, $el);\n            }\n\n        },\n\n        update: [\n\n            {\n\n                write: function write() {\n                    var this$1 = this;\n\n\n                    if (this.nav && this.length !== this.nav.children.length) {\n                        html(this.nav, this.slides.map(function (_, i) { return (\"<li \" + (this$1.attrItem) + \"=\\\"\" + i + \"\\\"><a href=\\\"#\\\"></a></li>\"); }).join(''));\n                    }\n\n                    toggleClass($$(this.navItemSelector, this.$el).concat(this.nav), 'uk-hidden', !this.maxIndex);\n\n                    this.updateNav();\n\n                },\n\n                events: ['load', 'resize']\n\n            }\n\n        ],\n\n        events: [\n\n            {\n\n                name: 'click',\n\n                delegate: function delegate() {\n                    return this.navItemSelector;\n                },\n\n                handler: function handler(e) {\n                    e.preventDefault();\n                    e.current.blur();\n                    this.show(data(e.current, this.attrItem));\n                }\n\n            },\n\n            {\n\n                name: 'itemshow',\n                handler: 'updateNav'\n\n            }\n\n        ],\n\n        methods: {\n\n            updateNav: function updateNav() {\n                var this$1 = this;\n\n\n                var i = this.getValidIndex();\n                this.navItems.forEach(function (el) {\n\n                    var cmd = data(el, this$1.attrItem);\n\n                    toggleClass(el, this$1.clsActive, toNumber(cmd) === i);\n                    toggleClass(el, 'uk-invisible', this$1.finite && (cmd === 'previous' && i === 0 || cmd === 'next' && i >= this$1.maxIndex));\n                });\n\n            }\n\n        }\n\n    };\n\n}\n\nfunction plugin$5(UIkit) {\n\n    if (plugin$5.installed) {\n        return;\n    }\n\n    var ref = UIkit.util;\n    var $ = ref.$;\n    var assign = ref.assign;\n    var clamp = ref.clamp;\n    var fastdom = ref.fastdom;\n    var getIndex = ref.getIndex;\n    var hasClass = ref.hasClass;\n    var isNumber = ref.isNumber;\n    var isRtl = ref.isRtl;\n    var Promise = ref.Promise;\n    var toNodes = ref.toNodes;\n    var trigger = ref.trigger;\n\n    UIkit.mixin.slider = {\n\n        attrs: true,\n\n        mixins: [AutoplayMixin(UIkit), DragMixin(UIkit), NavMixin(UIkit)],\n\n        props: {\n            clsActivated: Boolean,\n            easing: String,\n            index: Number,\n            finite: Boolean,\n            velocity: Number\n        },\n\n        defaults: {\n            easing: 'ease',\n            finite: false,\n            velocity: 1,\n            index: 0,\n            stack: [],\n            percent: 0,\n            clsActive: 'uk-active',\n            clsActivated: false,\n            Transitioner: false,\n            transitionOptions: {}\n        },\n\n        computed: {\n\n            duration: function duration(ref, $el) {\n                var velocity = ref.velocity;\n\n                return speedUp($el.offsetWidth / velocity);\n            },\n\n            length: function length() {\n                return this.slides.length;\n            },\n\n            list: function list(ref, $el) {\n                var selList = ref.selList;\n\n                return $(selList, $el);\n            },\n\n            maxIndex: function maxIndex() {\n                return this.length - 1;\n            },\n\n            slidesSelector: function slidesSelector(ref) {\n                var selList = ref.selList;\n\n                return (selList + \" > *\");\n            },\n\n            slides: function slides() {\n                return toNodes(this.list.children);\n            }\n\n        },\n\n        methods: {\n\n            show: function show(index, force) {\n                var this$1 = this;\n                if ( force === void 0 ) force = false;\n\n\n                if (this.dragging || !this.length) {\n                    return;\n                }\n\n                var ref = this;\n                var stack = ref.stack;\n                var queueIndex = force ? 0 : stack.length;\n                var reset = function () {\n                    stack.splice(queueIndex, 1);\n\n                    if (stack.length) {\n                        this$1.show(stack.shift(), true);\n                    }\n                };\n\n                stack[force ? 'unshift' : 'push'](index);\n\n                if (!force && stack.length > 1) {\n\n                    if (stack.length === 2) {\n                        this._transitioner.forward(Math.min(this.duration, 200));\n                    }\n\n                    return;\n                }\n\n                var prevIndex = this.index;\n                var prev = hasClass(this.slides, this.clsActive) && this.slides[prevIndex];\n                var nextIndex = this.getIndex(index, this.index);\n                var next = this.slides[nextIndex];\n\n                if (prev === next) {\n                    reset();\n                    return;\n                }\n\n                this.dir = getDirection(index, prevIndex);\n                this.prevIndex = prevIndex;\n                this.index = nextIndex;\n\n                prev && trigger(prev, 'beforeitemhide', [this]);\n                if (!trigger(next, 'beforeitemshow', [this, prev])) {\n                    this.index = this.prevIndex;\n                    reset();\n                    return;\n                }\n\n                var promise = this._show(prev, next, force).then(function () {\n\n                    prev && trigger(prev, 'itemhidden', [this$1]);\n                    trigger(next, 'itemshown', [this$1]);\n\n                    return new Promise(function (resolve) {\n                        fastdom.write(function () {\n                            stack.shift();\n                            if (stack.length) {\n                                this$1.show(stack.shift(), true);\n                            } else {\n                                this$1._transitioner = null;\n                            }\n                            resolve();\n                        });\n                    });\n\n                });\n\n                prev && trigger(prev, 'itemhide', [this]);\n                trigger(next, 'itemshow', [this]);\n\n                return promise;\n\n            },\n\n            getIndex: function getIndex$1(index, prev) {\n                if ( index === void 0 ) index = this.index;\n                if ( prev === void 0 ) prev = this.index;\n\n                return clamp(getIndex(index, this.slides, prev, this.finite), 0, this.maxIndex);\n            },\n\n            getValidIndex: function getValidIndex(index, prevIndex) {\n                if ( index === void 0 ) index = this.index;\n                if ( prevIndex === void 0 ) prevIndex = this.prevIndex;\n\n                return this.getIndex(index, prevIndex);\n            },\n\n            _show: function _show(prev, next, force) {\n\n                this._transitioner = this._getTransitioner(\n                    prev,\n                    next,\n                    this.dir,\n                    assign({\n                        easing: force\n                            ? next.offsetWidth < 600\n                                ? 'cubic-bezier(0.25, 0.46, 0.45, 0.94)' /* easeOutQuad */\n                                : 'cubic-bezier(0.165, 0.84, 0.44, 1)' /* easeOutQuart */\n                            : this.easing\n                    }, this.transitionOptions)\n                );\n\n                if (!force && !prev) {\n                    this._transitioner.translate(1);\n                    return Promise.resolve();\n                }\n\n                var ref = this.stack;\n                var length = ref.length;\n                return this._transitioner[length > 1 ? 'forward' : 'show'](length > 1 ? Math.min(this.duration, 75 + 75 / (length - 1)) : this.duration, this.percent);\n\n            },\n\n            _getDistance: function _getDistance(prev, next) {\n                return new this._getTransitioner(prev, prev !== next && next).getDistance();\n            },\n\n            _translate: function _translate(percent, prev, next) {\n                if ( prev === void 0 ) prev = this.prevIndex;\n                if ( next === void 0 ) next = this.index;\n\n                var transitioner = this._getTransitioner(prev !== next ? prev : false, next);\n                transitioner.translate(percent);\n                return transitioner;\n            },\n\n            _getTransitioner: function _getTransitioner(prev, next, dir, options) {\n                if ( prev === void 0 ) prev = this.prevIndex;\n                if ( next === void 0 ) next = this.index;\n                if ( dir === void 0 ) dir = this.dir || 1;\n                if ( options === void 0 ) options = this.transitionOptions;\n\n                return new this.Transitioner(\n                    isNumber(prev) ? this.slides[prev] : prev,\n                    isNumber(next) ? this.slides[next] : next,\n                    dir * (isRtl ? -1 : 1),\n                    options\n                );\n            }\n\n        }\n\n    };\n\n    function getDirection(index, prevIndex) {\n        return index === 'next'\n            ? 1\n            : index === 'previous'\n                ? -1\n                : index < prevIndex\n                    ? -1\n                    : 1;\n    }\n\n}\n\nfunction speedUp(x) {\n    return .5 * x + 300; // parabola through (400,500; 600,600; 1800,1200)\n}\n\nfunction plugin$4(UIkit) {\n\n    if (plugin$4.installed) {\n        return;\n    }\n\n    UIkit.use(plugin$5);\n\n    var mixin = UIkit.mixin;\n    var UIkit_util = UIkit.util;\n    var addClass = UIkit_util.addClass;\n    var assign = UIkit_util.assign;\n    var fastdom = UIkit_util.fastdom;\n    var isNumber = UIkit_util.isNumber;\n    var removeClass = UIkit_util.removeClass;\n\n    var Animations = AnimationsPlugin(UIkit);\n    var Transitioner = TransitionerPlugin(UIkit);\n\n    UIkit.mixin.slideshow = {\n\n        mixins: [mixin.slider],\n\n        props: {\n            animation: String\n        },\n\n        defaults: {\n            animation: 'slide',\n            clsActivated: 'uk-transition-active',\n            Animations: Animations,\n            Transitioner: Transitioner\n        },\n\n        computed: {\n\n            animation: function animation(ref) {\n                var animation = ref.animation;\n                var Animations = ref.Animations;\n\n                return assign(animation in Animations ? Animations[animation] : Animations.slide, {name: animation});\n            },\n\n            transitionOptions: function transitionOptions() {\n                return {animation: this.animation};\n            }\n\n        },\n\n        events: {\n\n            'itemshow itemhide itemshown itemhidden': function itemshowitemhideitemshownitemhidden(ref) {\n                var target = ref.target;\n\n                UIkit.update(null, target);\n            },\n\n            itemshow: function itemshow() {\n                isNumber(this.prevIndex) && fastdom.flush(); // iOS 10+ will honor the video.play only if called from a gesture handler\n            },\n\n            beforeitemshow: function beforeitemshow(ref) {\n                var target = ref.target;\n\n                addClass(target, this.clsActive);\n            },\n\n            itemshown: function itemshown(ref) {\n                var target = ref.target;\n\n                addClass(target, this.clsActivated);\n            },\n\n            itemhidden: function itemhidden(ref) {\n                var target = ref.target;\n\n                removeClass(target, this.clsActive, this.clsActivated);\n            }\n\n        }\n\n    };\n\n}\n\nfunction AnimationsPlugin$1 (UIkit) {\n\n    var mixin = UIkit.mixin;\n    var UIkit_util = UIkit.util;\n    var assign = UIkit_util.assign;\n    var css = UIkit_util.css;\n\n    return assign({}, mixin.slideshow.defaults.Animations, {\n\n        fade: {\n\n            show: function show() {\n                return [\n                    {opacity: 0},\n                    {opacity: 1}\n                ];\n            },\n\n            percent: function percent(current) {\n                return 1 - css(current, 'opacity');\n            },\n\n            translate: function translate$$1(percent) {\n                return [\n                    {opacity: 1 - percent},\n                    {opacity: percent}\n                ];\n            }\n\n        },\n\n        scale: {\n\n            show: function show() {\n                return [\n                    {opacity: 0, transform: scale3d(1 - .2)},\n                    {opacity: 1, transform: scale3d(1)}\n                ];\n            },\n\n            percent: function percent(current) {\n                return 1 - css(current, 'opacity');\n            },\n\n            translate: function translate$$1(percent) {\n                return [\n                    {opacity: 1 - percent, transform: scale3d(1 - .2 * percent)},\n                    {opacity: percent, transform: scale3d(1 - .2 + .2 * percent)}\n                ];\n            }\n\n        }\n\n    });\n\n}\n\nfunction plugin$3(UIkit) {\n\n    if (plugin$3.installed) {\n        return;\n    }\n\n    UIkit.use(plugin$4);\n\n    var mixin = UIkit.mixin;\n    var util = UIkit.util;\n    var $ = util.$;\n    var addClass = util.addClass;\n    var ajax = util.ajax;\n    var append = util.append;\n    var assign = util.assign;\n    var attr = util.attr;\n    var css = util.css;\n    var doc = util.doc;\n    var getImage = util.getImage;\n    var html = util.html;\n    var index = util.index;\n    var on = util.on;\n    var pointerDown = util.pointerDown;\n    var pointerMove = util.pointerMove;\n    var removeClass = util.removeClass;\n    var Transition = util.Transition;\n    var trigger = util.trigger;\n\n    var Animations = AnimationsPlugin$1(UIkit);\n\n    UIkit.component('lightbox-panel', {\n\n        mixins: [mixin.container, mixin.modal, mixin.togglable, mixin.slideshow],\n\n        functional: true,\n\n        defaults: {\n            preload: 1,\n            videoAutoplay: false,\n            delayControls: 3000,\n            items: [],\n            cls: 'uk-open',\n            clsPage: 'uk-lightbox-page',\n            selList: '.uk-lightbox-items',\n            attrItem: 'uk-lightbox-item',\n            selClose: '.uk-close-large',\n            pauseOnHover: false,\n            velocity: 2,\n            Animations: Animations,\n            template: \"<div class=\\\"uk-lightbox uk-overflow-hidden\\\"> <ul class=\\\"uk-lightbox-items\\\"></ul> <div class=\\\"uk-lightbox-toolbar uk-position-top uk-text-right uk-transition-slide-top uk-transition-opaque\\\"> <button class=\\\"uk-lightbox-toolbar-icon uk-close-large\\\" type=\\\"button\\\" uk-close></button> </div> <a class=\\\"uk-lightbox-button uk-position-center-left uk-position-medium uk-transition-fade\\\" href=\\\"#\\\" uk-slidenav-previous uk-lightbox-item=\\\"previous\\\"></a> <a class=\\\"uk-lightbox-button uk-position-center-right uk-position-medium uk-transition-fade\\\" href=\\\"#\\\" uk-slidenav-next uk-lightbox-item=\\\"next\\\"></a> <div class=\\\"uk-lightbox-toolbar uk-lightbox-caption uk-position-bottom uk-text-center uk-transition-slide-bottom uk-transition-opaque\\\"></div> </div>\"\n        },\n\n        created: function created() {\n            var this$1 = this;\n\n\n            this.$mount(append(this.container, this.template));\n\n            this.caption = $('.uk-lightbox-caption', this.$el);\n\n            this.items.forEach(function () { return append(this$1.list, '<li></li>'); });\n\n        },\n\n        events: [\n\n            {\n\n                name: (pointerMove + \" \" + pointerDown + \" keydown\"),\n\n                handler: 'showControls'\n\n            },\n\n            {\n\n                name: 'click',\n\n                self: true,\n\n                delegate: function delegate() {\n                    return this.slidesSelector;\n                },\n\n                handler: function handler(e) {\n                    e.preventDefault();\n                    this.hide();\n                }\n\n            },\n\n            {\n\n                name: 'shown',\n\n                self: true,\n\n                handler: 'showControls'\n            },\n\n            {\n\n                name: 'hide',\n\n                self: true,\n\n                handler: function handler() {\n\n                    this.hideControls();\n\n                    removeClass(this.slides, this.clsActive);\n                    Transition.stop(this.slides);\n\n                }\n            },\n\n            {\n\n                name: 'keyup',\n\n                el: function el() {\n                    return doc;\n                },\n\n                handler: function handler(e) {\n\n                    if (!this.isToggled(this.$el)) {\n                        return;\n                    }\n\n                    switch (e.keyCode) {\n                        case 37:\n                            this.show('previous');\n                            break;\n                        case 39:\n                            this.show('next');\n                            break;\n                    }\n                }\n            },\n\n            {\n\n                name: 'beforeitemshow',\n\n                handler: function handler(e) {\n\n                    if (this.isToggled()) {\n                        return;\n                    }\n\n                    this.preventCatch = true;\n\n                    e.preventDefault();\n\n                    this.toggleNow(this.$el, true);\n\n                    this.animation = Animations['scale'];\n                    removeClass(e.target, this.clsActive);\n                    this.stack.splice(1, 0, this.index);\n\n                }\n\n            },\n\n            {\n\n                name: 'itemshow',\n\n                handler: function handler(ref) {\n                    var this$1 = this;\n                    var target = ref.target;\n\n\n                    var i = index(target);\n                    var ref$1 = this.getItem(i);\n                    var caption = ref$1.caption;\n\n                    css(this.caption, 'display', caption ? '' : 'none');\n                    html(this.caption, caption);\n\n                    for (var j = 0; j <= this.preload; j++) {\n                        this$1.loadItem(this$1.getIndex(i + j));\n                        this$1.loadItem(this$1.getIndex(i - j));\n                    }\n\n                }\n\n            },\n\n            {\n\n                name: 'itemshown',\n\n                handler: function handler() {\n                    this.preventCatch = false;\n                }\n\n            },\n\n            {\n\n                name: 'itemload',\n\n                handler: function handler(_, item) {\n                    var this$1 = this;\n\n\n                    var source = item.source;\n                    var type = item.type;\n                    var alt = item.alt;\n\n                    this.setItem(item, '<span uk-spinner></span>');\n\n                    if (!source) {\n                        return;\n                    }\n\n                    var matches;\n\n                    // Image\n                    if (type === 'image' || source.match(/\\.(jp(e)?g|png|gif|svg)$/i)) {\n\n                        getImage(source).then(\n                            function (img) { return this$1.setItem(item, (\"<img width=\\\"\" + (img.width) + \"\\\" height=\\\"\" + (img.height) + \"\\\" src=\\\"\" + source + \"\\\" alt=\\\"\" + (alt ? alt : '') + \"\\\">\")); },\n                            function () { return this$1.setError(item); }\n                        );\n\n                    // Video\n                    } else if (type === 'video' || source.match(/\\.(mp4|webm|ogv)$/i)) {\n\n                        var video = $((\"<video controls playsinline\" + (item.poster ? (\" poster=\\\"\" + (item.poster) + \"\\\"\") : '') + \" uk-video=\\\"autoplay: \" + (this.videoAutoplay) + \"\\\"></video>\"));\n                        attr(video, 'src', source);\n\n                        on(video, 'error', function () { return this$1.setError(item); });\n                        on(video, 'loadedmetadata', function () {\n                            attr(video, {width: video.videoWidth, height: video.videoHeight});\n                            this$1.setItem(item, video);\n                        });\n\n                    // Iframe\n                    } else if (type === 'iframe') {\n\n                        this.setItem(item, (\"<iframe class=\\\"uk-lightbox-iframe\\\" src=\\\"\" + source + \"\\\" frameborder=\\\"0\\\" allowfullscreen></iframe>\"));\n\n                    // YouTube\n                    } else if ((matches = source.match(/\\/\\/.*?youtube(-nocookie)?\\.[a-z]+\\/watch\\?v=([^&\\s]+)/) || source.match(/()youtu\\.be\\/(.*)/))) {\n\n                        var id = matches[2];\n                        var setIframe = function (width, height) {\n                            if ( width === void 0 ) width = 640;\n                            if ( height === void 0 ) height = 450;\n\n                            return this$1.setItem(item, getIframe((\"//www.youtube\" + (matches[1] || '') + \".com/embed/\" + id), width, height, this$1.videoAutoplay));\n                        };\n\n                        getImage((\"//img.youtube.com/vi/\" + id + \"/maxresdefault.jpg\")).then(\n                            function (ref) {\n                                var width = ref.width;\n                                var height = ref.height;\n\n                                // YouTube default 404 thumb, fall back to low resolution\n                                if (width === 120 && height === 90) {\n                                    getImage((\"//img.youtube.com/vi/\" + id + \"/0.jpg\")).then(\n                                        function (ref) {\n                                            var width = ref.width;\n                                            var height = ref.height;\n\n                                            return setIframe(width, height);\n                                    },\n                                        setIframe\n                                    );\n                                } else {\n                                    setIframe(width, height);\n                                }\n                            },\n                            setIframe\n                        );\n\n                    // Vimeo\n                    } else if ((matches = source.match(/(\\/\\/.*?)vimeo\\.[a-z]+\\/([0-9]+).*?/))) {\n\n                        ajax((\"//vimeo.com/api/oembed.json?maxwidth=1920&url=\" + (encodeURI(source))), {responseType: 'json'})\n                            .then(function (ref) {\n                                    var ref_response = ref.response;\n                                    var height = ref_response.height;\n                                    var width = ref_response.width;\n\n                                    return this$1.setItem(item, getIframe((\"//player.vimeo.com/video/\" + (matches[2])), width, height, this$1.videoAutoplay));\n                        }\n                            );\n\n                    }\n\n                }\n\n            }\n\n        ],\n\n        methods: {\n\n            loadItem: function loadItem(index) {\n                if ( index === void 0 ) index = this.index;\n\n\n                var item = this.getItem(index);\n\n                if (item.content) {\n                    return;\n                }\n\n                trigger(this.$el, 'itemload', [item]);\n            },\n\n            getItem: function getItem(index) {\n                if ( index === void 0 ) index = this.index;\n\n                return this.items[index] || {};\n            },\n\n            setItem: function setItem(item, content) {\n                assign(item, {content: content});\n                var el = html(this.slides[this.items.indexOf(item)], content);\n                trigger(this.$el, 'itemloaded', [this, el]);\n                UIkit.update(null, el);\n            },\n\n            setError: function setError(item) {\n                this.setItem(item, '<span uk-icon=\"icon: bolt; ratio: 2\"></span>');\n            },\n\n            showControls: function showControls() {\n\n                clearTimeout(this.controlsTimer);\n                this.controlsTimer = setTimeout(this.hideControls, this.delayControls);\n\n                addClass(this.$el, 'uk-active', 'uk-transition-active');\n\n            },\n\n            hideControls: function hideControls() {\n                removeClass(this.$el, 'uk-active', 'uk-transition-active');\n            }\n\n        }\n\n    });\n\n    function getIframe(src, width, height, autoplay) {\n        return (\"<iframe src=\\\"\" + src + \"\\\" width=\\\"\" + width + \"\\\" height=\\\"\" + height + \"\\\" style=\\\"max-width: 100%; box-sizing: border-box;\\\" frameborder=\\\"0\\\" allowfullscreen uk-video=\\\"autoplay: \" + autoplay + \"\\\" uk-responsive></iframe>\");\n    }\n\n}\n\nfunction plugin$2(UIkit) {\n\n    if (plugin$2.installed) {\n        return;\n    }\n\n    UIkit.use(plugin$3);\n\n    var util = UIkit.util;\n    var $$ = util.$$;\n    var assign = util.assign;\n    var data = util.data;\n    var index = util.index;\n    var ref = UIkit.components.lightboxPanel;\n    var options = ref.options;\n\n    UIkit.component('lightbox', {\n\n        attrs: true,\n\n        props: assign({toggle: String}, options.props),\n\n        defaults: assign({toggle: 'a'}, Object.keys(options.props).reduce(function (defaults, key) {\n            defaults[key] = options.defaults[key];\n            return defaults;\n        }, {})),\n\n        computed: {\n\n            toggles: function toggles(ref, $el) {\n                var toggle = ref.toggle;\n\n                return $$(toggle, $el);\n            }\n\n        },\n\n        disconnected: function disconnected() {\n            this._destroy();\n        },\n\n        events: [\n\n            {\n\n                name: 'click',\n\n                delegate: function delegate() {\n                    return ((this.toggle) + \":not(.uk-disabled)\");\n                },\n\n                handler: function handler(e) {\n                    e.preventDefault();\n                    e.current.blur();\n                    this.show(index(this.toggles, e.current));\n                }\n\n            }\n\n        ],\n\n        update: function update(data) {\n\n            if (this.panel && this.animation) {\n                this.panel.$props.animation = this.animation;\n                this.panel.$emit();\n            }\n\n            if (!this.panel || data.toggles && isEqualList(data.toggles, this.toggles)) {\n                return;\n            }\n\n            data.toggles = this.toggles;\n            this._destroy();\n            this._init();\n\n        },\n\n        methods: {\n\n            _init: function _init() {\n                return this.panel = this.panel || UIkit.lightboxPanel(assign({}, this.$props, {\n                    items: this.toggles.reduce(function (items, el) {\n                        items.push(['href', 'caption', 'type', 'poster', 'alt'].reduce(function (obj, attr) {\n                            obj[attr === 'href' ? 'source' : attr] = data(el, attr);\n                            return obj;\n                        }, {}));\n                        return items;\n                    }, [])\n                }));\n            },\n\n            _destroy: function _destroy() {\n                if (this.panel) {\n                    this.panel.$destroy(true);\n                    this.panel = null;\n                }\n            },\n\n            show: function show(index) {\n\n                if (!this.panel) {\n                    this._init();\n                }\n\n                return this.panel.show(index);\n\n            },\n\n            hide: function hide() {\n\n                return this.panel && this.panel.hide();\n\n            }\n\n        }\n\n    });\n\n    function isEqualList(listA, listB) {\n        return listA.length === listB.length\n            && listA.every(function (el, i) { return el !== listB[i]; });\n    }\n\n}\n\nfunction plugin$6(UIkit) {\n    var obj;\n\n\n    if (plugin$6.installed) {\n        return;\n    }\n\n    var ref = UIkit.util;\n    var append = ref.append;\n    var closest = ref.closest;\n    var css = ref.css;\n    var each = ref.each;\n    var pointerEnter = ref.pointerEnter;\n    var pointerLeave = ref.pointerLeave;\n    var remove = ref.remove;\n    var toFloat = ref.toFloat;\n    var Transition = ref.Transition;\n    var trigger = ref.trigger;\n    var containers = {};\n\n    UIkit.component('notification', {\n\n        functional: true,\n\n        args: ['message', 'status'],\n\n        defaults: {\n            message: '',\n            status: '',\n            timeout: 5000,\n            group: null,\n            pos: 'top-center',\n            clsClose: 'uk-notification-close',\n            clsMsg: 'uk-notification-message'\n        },\n\n        created: function created() {\n\n            if (!containers[this.pos]) {\n                containers[this.pos] = append(UIkit.container, (\"<div class=\\\"uk-notification uk-notification-\" + (this.pos) + \"\\\"></div>\"));\n            }\n\n            var container = css(containers[this.pos], 'display', 'block');\n\n            this.$mount(append(container,\n                (\"<div class=\\\"\" + (this.clsMsg) + (this.status ? (\" \" + (this.clsMsg) + \"-\" + (this.status)) : '') + \"\\\"> <a href=\\\"#\\\" class=\\\"\" + (this.clsClose) + \"\\\" data-uk-close></a> <div>\" + (this.message) + \"</div> </div>\")\n            ));\n\n        },\n\n        ready: function ready() {\n            var this$1 = this;\n\n\n            var marginBottom = toFloat(css(this.$el, 'marginBottom'));\n            Transition.start(\n                css(this.$el, {opacity: 0, marginTop: -this.$el.offsetHeight, marginBottom: 0}),\n                {opacity: 1, marginTop: 0, marginBottom: marginBottom}\n            ).then(function () {\n                if (this$1.timeout) {\n                    this$1.timer = setTimeout(this$1.close, this$1.timeout);\n                }\n            });\n\n        },\n\n        events: ( obj = {\n\n            click: function click(e) {\n                if (closest(e.target, 'a[href=\"#\"]')) {\n                    e.preventDefault();\n                }\n                this.close();\n            }\n\n        }, obj[pointerEnter] = function () {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n            }, obj[pointerLeave] = function () {\n                if (this.timeout) {\n                    this.timer = setTimeout(this.close, this.timeout);\n                }\n            }, obj),\n\n        methods: {\n\n            close: function close(immediate) {\n                var this$1 = this;\n\n\n                var removeFn = function () {\n\n                    trigger(this$1.$el, 'close', [this$1]);\n                    remove(this$1.$el);\n\n                    if (!containers[this$1.pos].children.length) {\n                        css(containers[this$1.pos], 'display', 'none');\n                    }\n\n                };\n\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n\n                if (immediate) {\n                    removeFn();\n                } else {\n                    Transition.start(this.$el, {\n                        opacity: 0,\n                        marginTop: -this.$el.offsetHeight,\n                        marginBottom: 0\n                    }).then(removeFn);\n                }\n            }\n\n        }\n\n    });\n\n    UIkit.notification.closeAll = function (group, immediate) {\n        each(UIkit.instances, function (component) {\n            if (component.$options.name === 'notification' && (!group || group === component.group)) {\n                component.close(immediate);\n            }\n        });\n    };\n\n}\n\nfunction plugin$8(UIkit) {\n\n    if (plugin$8.installed) {\n        return;\n    }\n\n    var mixin = UIkit.mixin;\n    var util = UIkit.util;\n    var css = util.css;\n    var Dimensions = util.Dimensions;\n    var each = util.each;\n    var getImage = util.getImage;\n    var includes = util.includes;\n    var isNumber = util.isNumber;\n    var isUndefined = util.isUndefined;\n    var toFloat = util.toFloat;\n    var win = util.win;\n\n    var props = ['x', 'y', 'bgx', 'bgy', 'rotate', 'scale', 'color', 'backgroundColor', 'borderColor', 'opacity', 'blur', 'hue', 'grayscale', 'invert', 'saturate', 'sepia', 'fopacity'];\n\n    mixin.parallax = {\n\n        props: props.reduce(function (props, prop) {\n            props[prop] = 'list';\n            return props;\n        }, {\n            media: 'media'\n        }),\n\n        defaults: props.reduce(function (defaults, prop) {\n            defaults[prop] = undefined;\n            return defaults;\n        }, {\n            media: false\n        }),\n\n        computed: {\n\n            props: function props$1(properties, $el) {\n                var this$1 = this;\n\n\n                return props.reduce(function (props, prop) {\n\n                    if (isUndefined(properties[prop])) {\n                        return props;\n                    }\n\n                    var isColor = prop.match(/color/i);\n                    var isCssProp = isColor || prop === 'opacity';\n\n                    var pos, bgPos, diff;\n                    var steps = properties[prop].slice(0);\n\n                    if (isCssProp) {\n                        css($el, prop, '');\n                    }\n\n                    if (steps.length < 2) {\n                        steps.unshift((prop === 'scale'\n                            ? 1\n                            : isCssProp\n                                ? css($el, prop)\n                                : 0) || 0);\n                    }\n\n                    var unit = includes(steps.join(''), '%') ? '%' : 'px';\n\n                    if (isColor) {\n\n                        var ref = $el.style;\n                        var color = ref.color;\n                        steps = steps.map(function (step) { return parseColor($el, step); });\n                        $el.style.color = color;\n\n                    } else {\n\n                        steps = steps.map(toFloat);\n\n                    }\n\n                    if (prop.match(/^bg/)) {\n\n                        css($el, (\"background-position-\" + (prop[2])), '');\n                        bgPos = css($el, 'backgroundPosition').split(' ')[prop[2] === 'x' ? 0 : 1]; // IE 11 can't read background-position-[x|y]\n\n                        if (this$1.covers) {\n\n                            var min = Math.min.apply(Math, steps);\n                            var max = Math.max.apply(Math, steps);\n                            var down = steps.indexOf(min) < steps.indexOf(max);\n\n                            diff = max - min;\n\n                            steps = steps.map(function (step) { return step - (down ? min : max); });\n                            pos = (down ? -diff : 0) + \"px\";\n\n                        } else {\n\n                            pos = bgPos;\n\n                        }\n                    }\n\n                    props[prop] = {steps: steps, unit: unit, pos: pos, bgPos: bgPos, diff: diff};\n\n                    return props;\n\n                }, {});\n\n            },\n\n            bgProps: function bgProps() {\n                var this$1 = this;\n\n                return ['bgx', 'bgy'].filter(function (bg) { return bg in this$1.props; });\n            },\n\n            covers: function covers(_, $el) {\n                return css($el.style.backgroundSize !== '' ? css($el, 'backgroundSize', '') : $el, 'backgroundSize') === 'cover';\n            }\n\n        },\n\n        disconnected: function disconnected() {\n            delete this._image;\n        },\n\n        update: [\n\n            {\n\n                read: function read(data) {\n                    var this$1 = this;\n\n\n                    data.active = !this.media || win.matchMedia(this.media).matches;\n\n                    if (data.image) {\n                        data.image.dimEl = {\n                            width: this.$el.offsetWidth,\n                            height: this.$el.offsetHeight\n                        };\n                    }\n\n                    if ('image' in data || !this.covers || !this.bgProps.length) {\n                        return;\n                    }\n\n                    var src = css(this.$el, 'backgroundImage').replace(/^none|url\\([\"']?(.+?)[\"']?\\)$/, '$1');\n\n                    if (!src) {\n                        return;\n                    }\n\n                    data.image = false;\n\n                    getImage(src).then(function (img) {\n                        data.image = {\n                            width: img.naturalWidth,\n                            height: img.naturalHeight\n                        };\n\n                        this$1.$emit();\n                    });\n\n                },\n\n                write: function write(ref) {\n                    var this$1 = this;\n                    var image = ref.image;\n                    var active = ref.active;\n\n\n                    if (!image) {\n                        return;\n                    }\n\n                    if (!active) {\n                        css(this.$el, {backgroundSize: '', backgroundRepeat: ''});\n                        return;\n                    }\n\n                    var dimEl = image.dimEl;\n\n                    var dim = Dimensions.cover(image, dimEl);\n\n                    this.bgProps.forEach(function (prop) {\n\n                        var ref = this$1.props[prop];\n                        var diff = ref.diff;\n                        var bgPos = ref.bgPos;\n                        var steps = ref.steps;\n                        var attr = prop === 'bgy' ? 'height' : 'width';\n                        var span = dim[attr] - dimEl[attr];\n\n                        if (!bgPos.match(/%$|0px/)) {\n                            return;\n                        }\n\n                        if (span < diff) {\n                            dimEl[attr] = dim[attr] + diff - span;\n                        } else if (span > diff) {\n\n                            var bgPosFloat = parseFloat(bgPos);\n\n                            if (bgPosFloat) {\n                                this$1.props[prop].steps = steps.map(function (step) { return step - (span - diff) / (100 / bgPosFloat); });\n                            }\n                        }\n\n                        dim = Dimensions.cover(image, dimEl);\n                    });\n\n                    css(this.$el, {\n                        backgroundSize: ((dim.width) + \"px \" + (dim.height) + \"px\"),\n                        backgroundRepeat: 'no-repeat'\n                    });\n\n                },\n\n                events: ['load', 'resize']\n\n            }\n\n        ],\n\n        methods: {\n\n            reset: function reset() {\n                var this$1 = this;\n\n                each(this.getCss(0), function (_, prop) { return css(this$1.$el, prop, ''); });\n            },\n\n            getCss: function getCss(percent) {\n\n                var ref = this;\n                var props = ref.props;\n                var translated = false;\n\n                return Object.keys(props).reduce(function (css, prop) {\n\n                    var ref = props[prop];\n                    var steps = ref.steps;\n                    var unit = ref.unit;\n                    var pos = ref.pos;\n                    var value = getValue(steps, percent);\n\n                    switch (prop) {\n\n                        // transforms\n                        case 'x':\n                        case 'y':\n\n                            if (translated) {\n                                break;\n                            }\n\n                            var ref$1 = ['x', 'y'].map(function (dir) { return prop === dir\n                                ? value + unit\n                                : props[dir]\n                                    ? getValue(props[dir].steps, percent) + props[dir].unit\n                                    : 0; }\n                            );\n                    var x = ref$1[0];\n                    var y = ref$1[1];\n\n                            translated = css.transform += \" translate3d(\" + x + \", \" + y + \", 0)\";\n                            break;\n                        case 'rotate':\n                            css.transform += \" rotate(\" + value + \"deg)\";\n                            break;\n                        case 'scale':\n                            css.transform += \" scale(\" + value + \")\";\n                            break;\n\n                        // bg image\n                        case 'bgy':\n                        case 'bgx':\n                            css[(\"background-position-\" + (prop[2]))] = \"calc(\" + pos + \" + \" + (value + unit) + \")\";\n                            break;\n\n                        // color\n                        case 'color':\n                        case 'backgroundColor':\n                        case 'borderColor':\n\n                            var ref$2 = getStep(steps, percent);\n                    var start = ref$2[0];\n                    var end = ref$2[1];\n                    var p = ref$2[2];\n\n                            css[prop] = \"rgba(\" + (start.map(function (value, i) {\n                                    value = value + p * (end[i] - value);\n                                    return i === 3 ? toFloat(value) : parseInt(value, 10);\n                                }).join(',')) + \")\";\n                            break;\n\n                        // CSS Filter\n                        case 'blur':\n                            css.filter += \" blur(\" + value + \"px)\";\n                            break;\n                        case 'hue':\n                            css.filter += \" hue-rotate(\" + value + \"deg)\";\n                            break;\n                        case 'fopacity':\n                            css.filter += \" opacity(\" + value + \"%)\";\n                            break;\n                        case 'grayscale':\n                        case 'invert':\n                        case 'saturate':\n                        case 'sepia':\n                            css.filter += \" \" + prop + \"(\" + value + \"%)\";\n                            break;\n\n                        default:\n                            css[prop] = value;\n                    }\n\n                    return css;\n\n                }, {transform: '', filter: ''});\n\n            }\n\n        }\n\n    };\n\n    function parseColor(el, color) {\n        return css(css(el, 'color', color), 'color').split(/[(),]/g).slice(1, -1).concat(1).slice(0, 4).map(function (n) { return toFloat(n); });\n    }\n\n    function getStep(steps, percent) {\n        var count = steps.length - 1;\n        var index = Math.min(Math.floor(count * percent), count - 1);\n        var step = steps.slice(index, index + 2);\n\n        step.push(percent === 1 ? 1 : percent % (1 / count) * count);\n\n        return step;\n    }\n\n    function getValue(steps, percent) {\n        var ref = getStep(steps, percent);\n        var start = ref[0];\n        var end = ref[1];\n        var p = ref[2];\n        return (isNumber(start)\n            ? start + Math.abs(start - end) * p * (start < end ? 1 : -1)\n            : +end\n        ).toFixed(2);\n    }\n\n}\n\nfunction plugin$7(UIkit) {\n\n    if (plugin$7.installed) {\n        return;\n    }\n\n    UIkit.use(plugin$8);\n\n    var mixin = UIkit.mixin;\n    var util = UIkit.util;\n    var clamp = util.clamp;\n    var css = util.css;\n    var scrolledOver = util.scrolledOver;\n    var query = util.query;\n\n    UIkit.component('parallax', {\n\n        mixins: [mixin.parallax],\n\n        props: {\n            target: String,\n            viewport: Number,\n            easing: Number,\n        },\n\n        defaults: {\n            target: false,\n            viewport: 1,\n            easing: 1,\n        },\n\n        computed: {\n\n            target: function target(ref, $el) {\n                var target = ref.target;\n\n                return target && query(target, $el) || $el;\n            }\n\n        },\n\n        update: [\n\n            {\n\n                read: function read(ref) {\n                    var percent = ref.percent;\n\n                    return {\n                        prev: percent,\n                        percent: ease(scrolledOver(this.target) / (this.viewport || 1), this.easing)\n                    };\n                },\n\n                write: function write(ref, ref$1) {\n                    var prev = ref.prev;\n                    var percent = ref.percent;\n                    var active = ref.active;\n                    var type = ref$1.type;\n\n\n                    if (type !== 'scroll') {\n                        prev = false;\n                    }\n\n                    if (!active) {\n                        this.reset();\n                        return;\n                    }\n\n                    if (prev !== percent) {\n                        css(this.$el, this.getCss(percent));\n                    }\n\n                },\n\n                events: ['scroll', 'load', 'resize']\n            }\n\n        ]\n\n    });\n\n    function ease(percent, easing) {\n        return clamp(percent * (1 - (easing - easing * percent)));\n    }\n\n}\n\nfunction SliderReactive (UIkit) {\n\n    var ref = UIkit.util;\n    var removeClass = ref.removeClass;\n\n    return {\n\n        update: [\n\n            {\n\n                write: function write() {\n\n                    if (this.stack.length || this.dragging) {\n                        return;\n                    }\n\n                    var index = this.getValidIndex();\n                    delete this.index;\n                    removeClass(this.slides, this.clsActive, this.clsActivated);\n                    this.show(index);\n\n                },\n\n                events: ['load', 'resize']\n\n            }\n\n        ]\n\n    };\n\n}\n\nfunction TransitionerPlugin$1 (UIkit) {\n\n    var ref = UIkit.util;\n    var assign = ref.assign;\n    var clamp = ref.clamp;\n    var createEvent = ref.createEvent;\n    var css = ref.css;\n    var Deferred = ref.Deferred;\n    var includes = ref.includes;\n    var index = ref.index;\n    var isRtl = ref.isRtl;\n    var noop = ref.noop;\n    var sortBy = ref.sortBy;\n    var toNodes = ref.toNodes;\n    var Transition = ref.Transition;\n    var trigger = ref.trigger;\n\n    var Transitioner = assign(function (prev, next, dir, ref) {\n        var center = ref.center;\n        var easing = ref.easing;\n        var list = ref.list;\n\n\n        var deferred = new Deferred();\n\n        var from = prev\n                ? Transitioner.getLeft(prev, list, center)\n                : Transitioner.getLeft(next, list, center) + next.offsetWidth * dir,\n            to = next\n                ? Transitioner.getLeft(next, list, center)\n                : from + prev.offsetWidth * dir * (isRtl ? -1 : 1);\n\n        return {\n\n            dir: dir,\n\n            show: function show(duration, percent, linear) {\n                if ( percent === void 0 ) percent = 0;\n\n\n                var timing = linear ? 'linear' : easing;\n                duration -= Math.round(duration * clamp(percent, -1, 1));\n\n                this.translate(percent);\n\n                prev && this.updateTranslates();\n                percent = prev ? percent : clamp(percent, 0, 1);\n                triggerUpdate(this.getItemIn(), 'itemin', {percent: percent, duration: duration, timing: timing, dir: dir});\n                prev && triggerUpdate(this.getItemIn(true), 'itemout', {percent: 1 - percent, duration: duration, timing: timing, dir: dir});\n\n                Transition\n                    .start(list, {transform: translate(-to * (isRtl ? -1 : 1), 'px')}, duration, timing)\n                    .then(deferred.resolve, noop);\n\n                return deferred.promise;\n\n            },\n\n            stop: function stop() {\n                return Transition.stop(list);\n            },\n\n            cancel: function cancel() {\n                Transition.cancel(list);\n            },\n\n            reset: function reset() {\n                css(list, 'transform', '');\n            },\n\n            forward: function forward(duration, percent) {\n                if ( percent === void 0 ) percent = this.percent();\n\n                Transition.cancel(list);\n                return this.show(duration, percent, true);\n            },\n\n            translate: function translate$1(percent) {\n\n                var distance = this.getDistance() * dir * (isRtl ? -1 : 1);\n\n                css(list, 'transform', translate(clamp(\n                    -to + (distance - distance * percent),\n                    -Transitioner.getWidth(list),\n                    list.offsetWidth\n                ) * (isRtl ? -1 : 1), 'px'));\n\n                this.updateTranslates();\n\n                if (prev) {\n                    percent = clamp(percent, -1, 1);\n                    triggerUpdate(this.getItemIn(), 'itemtranslatein', {percent: percent, dir: dir});\n                    triggerUpdate(this.getItemIn(true), 'itemtranslateout', {percent: 1 - percent, dir: dir});\n                }\n\n            },\n\n            percent: function percent() {\n                return Math.abs((css(list, 'transform').split(',')[4] * (isRtl ? -1 : 1) + from) / (to - from));\n            },\n\n            getDistance: function getDistance() {\n                return Math.abs(to - from);\n            },\n\n            getItemIn: function getItemIn(out) {\n                if ( out === void 0 ) out = false;\n\n\n                var actives = this.getActives();\n                var all = sortBy(slides(list), 'offsetLeft');\n                var i = index(all, actives[dir * (out ? -1 : 1) > 0 ? actives.length - 1 : 0]);\n\n                return ~i && all[i + (prev && !out ? dir : 0)];\n\n            },\n\n            getActives: function getActives() {\n\n                var left = Transitioner.getLeft(prev || next, list, center);\n\n                return sortBy(slides(list).filter(function (slide) {\n                    var slideLeft = Transitioner.getElLeft(slide, list);\n                    return slideLeft >= left && slideLeft + slide.offsetWidth <= list.offsetWidth + left;\n                }), 'offsetLeft');\n\n            },\n\n            updateTranslates: function updateTranslates() {\n\n                var actives = this.getActives();\n\n                slides(list).forEach(function (slide) {\n                    var isActive = includes(actives, slide);\n\n                    triggerUpdate(slide, (\"itemtranslate\" + (isActive ? 'in' : 'out')), {\n                        percent: isActive ? 1 : 0,\n                        dir: slide.offsetLeft <= next.offsetLeft ? 1 : -1\n                    });\n                });\n            }\n\n        };\n\n    }, {\n\n        getLeft: function getLeft(el, list, center) {\n\n            var left = this.getElLeft(el, list);\n\n            return center\n                ? left - this.center(el, list)\n                : Math.min(left, this.getMax(list));\n\n        },\n\n        getMax: function getMax(list) {\n            return Math.max(0, this.getWidth(list) - list.offsetWidth);\n        },\n\n        getWidth: function getWidth(list) {\n            return slides(list).reduce(function (right, el) { return el.offsetWidth + right; }, 0);\n        },\n\n        getMaxWidth: function getMaxWidth(list) {\n            return slides(list).reduce(function (right, el) { return Math.max(right, el.offsetWidth); }, 0);\n        },\n\n        center: function center(el, list) {\n            return list.offsetWidth / 2 - el.offsetWidth / 2;\n        },\n\n        getElLeft: function getElLeft(el, list) {\n            return (el.offsetLeft + (isRtl ? el.offsetWidth - list.offsetWidth : 0)) * (isRtl ? -1 : 1);\n        }\n\n    });\n\n    function triggerUpdate(el, type, data) {\n        trigger(el, createEvent(type, false, false, data));\n    }\n\n    function slides(list) {\n        return toNodes(list.children);\n    }\n\n    return Transitioner;\n\n}\n\nfunction ParallaxPlugin (UIkit, parent) {\n\n    UIkit.use(plugin$8);\n\n    var mixin = UIkit.mixin;\n    var UIkit_util = UIkit.util;\n    var closest = UIkit_util.closest;\n    var css = UIkit_util.css;\n    var endsWith = UIkit_util.endsWith;\n    var noop = UIkit_util.noop;\n    var Transition = UIkit_util.Transition;\n\n    return {\n\n        mixins: [mixin.parallax],\n\n        computed: {\n\n            item: function item() {\n                var slider = UIkit.getComponent(closest(this.$el, (\".uk-\" + parent)), parent);\n                return slider && closest(this.$el, slider.slidesSelector);\n            }\n\n        },\n\n        events: [\n\n            {\n\n                name: 'itemshown',\n\n                self: true,\n\n                el: function el() {\n                    return this.item;\n                },\n\n                handler: function handler() {\n                    css(this.$el, this.getCss(.5));\n                }\n\n            },\n\n            {\n                name: 'itemin itemout',\n\n                self: true,\n\n                el: function el() {\n                    return this.item;\n                },\n\n                handler: function handler(ref) {\n                    var type = ref.type;\n                    var ref_detail = ref.detail;\n                    var percent = ref_detail.percent;\n                    var duration = ref_detail.duration;\n                    var timing = ref_detail.timing;\n                    var dir = ref_detail.dir;\n\n\n                    Transition.cancel(this.$el);\n                    css(this.$el, this.getCss(getCurrent(type, dir, percent)));\n\n                    Transition.start(this.$el, this.getCss(isIn(type)\n                        ? .5\n                        : dir > 0\n                            ? 1\n                            : 0\n                    ), duration, timing).catch(noop);\n\n                }\n            },\n\n            {\n                name: 'transitioncanceled transitionend',\n\n                self: true,\n\n                el: function el() {\n                    return this.item;\n                },\n\n                handler: function handler() {\n                    Transition.cancel(this.$el);\n                }\n\n            },\n\n            {\n                name: 'itemtranslatein itemtranslateout',\n\n                self: true,\n\n                el: function el() {\n                    return this.item;\n                },\n\n                handler: function handler(ref) {\n                    var type = ref.type;\n                    var ref_detail = ref.detail;\n                    var percent = ref_detail.percent;\n                    var dir = ref_detail.dir;\n\n                    Transition.cancel(this.$el);\n                    css(this.$el, this.getCss(getCurrent(type, dir, percent)));\n                }\n            }\n\n        ]\n\n    };\n\n    function isIn(type) {\n        return endsWith(type, 'in');\n    }\n\n    function getCurrent(type, dir, percent) {\n\n        percent /= 2;\n\n        return !isIn(type)\n            ? dir < 0\n                ? percent\n                : 1 - percent\n            : dir < 0\n                ? 1 - percent\n                : percent;\n    }\n\n}\n\nfunction plugin$9(UIkit) {\n\n    if (plugin$9.installed) {\n        return;\n    }\n\n    UIkit.use(plugin$5);\n\n    var mixin = UIkit.mixin;\n    var UIkit_util = UIkit.util;\n    var $ = UIkit_util.$;\n    var $$ = UIkit_util.$$;\n    var addClass = UIkit_util.addClass;\n    var css = UIkit_util.css;\n    var data = UIkit_util.data;\n    var includes = UIkit_util.includes;\n    var isNumeric = UIkit_util.isNumeric;\n    var isUndefined = UIkit_util.isUndefined;\n    var toggleClass = UIkit_util.toggleClass;\n    var toFloat = UIkit_util.toFloat;\n    var Transitioner = TransitionerPlugin$1(UIkit);\n\n    UIkit.component('slider-parallax', ParallaxPlugin(UIkit, 'slider'));\n\n    UIkit.component('slider', {\n\n        mixins: [mixin.class, mixin.slider, SliderReactive(UIkit)],\n\n        props: {\n            center: Boolean,\n            sets: Boolean,\n        },\n\n        defaults: {\n            center: false,\n            sets: false,\n            attrItem: 'uk-slider-item',\n            selList: '.uk-slider-items',\n            selNav: '.uk-slider-nav',\n            clsContainer: 'uk-slider-container',\n            Transitioner: Transitioner\n        },\n\n        computed: {\n\n            avgWidth: function avgWidth() {\n                return Transitioner.getWidth(this.list) / this.length;\n            },\n\n            finite: function finite(ref) {\n                var finite = ref.finite;\n\n                return finite || Transitioner.getWidth(this.list) < this.list.offsetWidth + Transitioner.getMaxWidth(this.list) + this.center;\n            },\n\n            maxIndex: function maxIndex() {\n                var this$1 = this;\n\n\n                if (!this.finite || this.center && !this.sets) {\n                    return this.length - 1;\n                }\n\n                if (this.center) {\n                    return this.sets[this.sets.length - 1];\n                }\n\n                css(this.slides, 'order', '');\n\n                var max = Transitioner.getMax(this.list);\n                var i = this.length;\n\n                while (i--) {\n                    if (Transitioner.getElLeft(this$1.list.children[i], this$1.list) < max) {\n                        return Math.min(i + 1, this$1.length - 1);\n                    }\n                }\n\n                return 0;\n            },\n\n            sets: function sets(ref) {\n                var this$1 = this;\n                var sets = ref.sets;\n\n\n                var width = this.list.offsetWidth / (this.center ? 2 : 1);\n\n                var left = 0;\n                var leftCenter = width;\n                var slideLeft = 0;\n\n                sets = sets && this.slides.reduce(function (sets, slide, i) {\n\n                    var slideWidth = slide.offsetWidth;\n                    var slideRight = slideLeft + slideWidth;\n\n                    if (slideRight > left) {\n\n                        if (!this$1.center && i > this$1.maxIndex) {\n                            i = this$1.maxIndex;\n                        }\n\n                        if (!includes(sets, i)) {\n\n                            var cmp = this$1.slides[i + 1];\n                            if (this$1.center && cmp && slideWidth < leftCenter - cmp.offsetWidth / 2) {\n                                leftCenter -= slideWidth;\n                            } else {\n                                leftCenter = width;\n                                sets.push(i);\n                                left = slideLeft + width + (this$1.center ? slideWidth / 2 : 0);\n                            }\n\n                        }\n                    }\n\n                    slideLeft += slideWidth;\n\n                    return sets;\n\n                }, []);\n\n                return sets && sets.length && sets;\n\n            },\n\n            transitionOptions: function transitionOptions() {\n                return {\n                    center: this.center,\n                    list: this.list\n                };\n            }\n\n        },\n\n        connected: function connected() {\n            toggleClass(this.$el, this.clsContainer, !$((\".\" + (this.clsContainer)), this.$el));\n        },\n\n        update: {\n\n            write: function write() {\n                var this$1 = this;\n\n\n                $$((\"[\" + (this.attrItem) + \"],[data-\" + (this.attrItem) + \"]\"), this.$el).forEach(function (el) {\n                    var index = data(el, this$1.attrItem);\n                    this$1.maxIndex && toggleClass(el, 'uk-hidden', isNumeric(index) && (this$1.sets && !includes(this$1.sets, toFloat(index)) || index > this$1.maxIndex));\n                });\n\n            },\n\n            events: ['load', 'resize']\n\n        },\n\n        events: {\n\n            beforeitemshow: function beforeitemshow(e) {\n                var this$1 = this;\n\n\n                if (!this.dragging && this.sets && this.stack.length < 2 && !includes(this.sets, this.index)) {\n                    this.index = this.getValidIndex();\n                }\n\n                var diff = Math.abs(\n                    this.index\n                    - this.prevIndex\n                    + (this.dir > 0 && this.index < this.prevIndex || this.dir < 0 && this.index > this.prevIndex ? (this.maxIndex + 1) * this.dir : 0)\n                );\n\n                if (!this.dragging && diff > 1) {\n\n                    for (var i = 0; i < diff; i++) {\n                        this$1.stack.splice(1, 0, this$1.dir > 0 ? 'next' : 'previous');\n                    }\n\n                    e.preventDefault();\n                    return;\n                }\n\n                this.duration = speedUp(this.avgWidth / this.velocity)\n                    * ((\n                        this.dir < 0 || !this.slides[this.prevIndex]\n                            ? this.slides[this.index]\n                            : this.slides[this.prevIndex]\n                    ).offsetWidth / this.avgWidth);\n\n                this.reorder();\n\n            },\n\n            itemshow: function itemshow() {\n                !isUndefined(this.prevIndex) && addClass(this._getTransitioner().getItemIn(), this.clsActive);\n            },\n\n            itemshown: function itemshown() {\n                var this$1 = this;\n\n                var actives = this._getTransitioner(this.index).getActives();\n                this.slides.forEach(function (slide) { return toggleClass(slide, this$1.clsActive, includes(actives, slide)); });\n                (!this.sets || includes(this.sets, toFloat(this.index))) && this.slides.forEach(function (slide) { return toggleClass(slide, this$1.clsActivated, includes(actives, slide)); });\n            }\n\n        },\n\n        methods: {\n\n            reorder: function reorder() {\n                var this$1 = this;\n\n\n                css(this.slides, 'order', '');\n\n                if (this.finite) {\n                    return;\n                }\n\n                var index = this.dir > 0 && this.slides[this.prevIndex] ? this.prevIndex : this.index;\n\n                this.slides.forEach(function (slide, i) { return css(slide, 'order', this$1.dir > 0 && i < index\n                        ? 1\n                        : this$1.dir < 0 && i >= this$1.index\n                            ? -1\n                            : ''\n                    ); }\n                );\n\n                if (!this.center) {\n                    return;\n                }\n\n                var next = this.slides[index];\n                var width = this.list.offsetWidth / 2 - next.offsetWidth / 2;\n                var j = 0;\n\n                while (width > 0) {\n                    var slideIndex = this$1.getIndex(--j + index, index);\n                    var slide = this$1.slides[slideIndex];\n\n                    css(slide, 'order', slideIndex > index ? -2 : -1);\n                    width -= slide.offsetWidth;\n                }\n\n            },\n\n            getValidIndex: function getValidIndex(index, prevIndex) {\n                var this$1 = this;\n                if ( index === void 0 ) index = this.index;\n                if ( prevIndex === void 0 ) prevIndex = this.prevIndex;\n\n\n                index = this.getIndex(index, prevIndex);\n\n                if (!this.sets) {\n                    return index;\n                }\n\n                var prev;\n\n                do {\n\n                    if (includes(this$1.sets, index)) {\n                        return index;\n                    }\n\n                    prev = index;\n                    index = this$1.getIndex(index + this$1.dir, prevIndex);\n\n                } while (index !== prev);\n\n                return index;\n            }\n\n        }\n\n    });\n\n}\n\nfunction AnimationsPlugin$2 (UIkit) {\n\n    var mixin = UIkit.mixin;\n    var UIkit_util = UIkit.util;\n    var assign = UIkit_util.assign;\n    var css = UIkit_util.css;\n\n    var Animations = assign({}, mixin.slideshow.defaults.Animations, {\n\n        fade: {\n\n            show: function show() {\n                return [\n                    {opacity: 0, zIndex: 0},\n                    {zIndex: -1}\n                ];\n            },\n\n            percent: function percent(current) {\n                return 1 - css(current, 'opacity');\n            },\n\n            translate: function translate$$1(percent) {\n                return [\n                    {opacity: 1 - percent, zIndex: 0},\n                    {zIndex: -1}\n                ];\n            }\n\n        },\n\n        scale: {\n\n            show: function show() {\n                return [\n                    {opacity: 0, transform: scale3d(1 + .5), zIndex: 0},\n                    {zIndex: -1}\n                ];\n            },\n\n            percent: function percent(current) {\n                return 1 - css(current, 'opacity');\n            },\n\n            translate: function translate$$1(percent) {\n                return [\n                    {opacity: 1 - percent, transform: scale3d(1 + .5 * percent), zIndex: 0},\n                    {zIndex: -1}\n                ];\n            }\n\n        },\n\n        pull: {\n\n            show: function show(dir) {\n                return dir < 0\n                    ? [\n                        {transform: translate(30), zIndex: -1},\n                        {transform: translate(), zIndex: 0} ]\n                    : [\n                        {transform: translate(-100), zIndex: 0},\n                        {transform: translate(), zIndex: -1}\n                    ];\n            },\n\n            percent: function percent(current, next, dir) {\n                return dir < 0\n                    ? 1 - Animations.translated(next)\n                    : Animations.translated(current);\n            },\n\n            translate: function translate$1(percent, dir) {\n                return dir < 0\n                    ? [\n                        {transform: translate(30 * percent), zIndex: -1},\n                        {transform: translate(-100 * (1 - percent)), zIndex: 0} ]\n                    : [\n                        {transform: translate(-percent * 100), zIndex: 0},\n                        {transform: translate(30 * (1 - percent)), zIndex: -1}\n                    ];\n            }\n\n        },\n\n        push: {\n\n            show: function show(dir) {\n                return dir < 0\n                    ? [\n                        {transform: translate(100), zIndex: 0},\n                        {transform: translate(), zIndex: -1} ]\n                    : [\n                        {transform: translate(-30), zIndex: -1},\n                        {transform: translate(), zIndex: 0}\n                    ];\n            },\n\n            percent: function percent(current, next, dir) {\n                return dir > 0\n                    ? 1 - Animations.translated(next)\n                    : Animations.translated(current);\n            },\n\n            translate: function translate$2(percent, dir) {\n                return dir < 0\n                    ? [\n                        {transform: translate(percent * 100), zIndex: 0},\n                        {transform: translate(-30 * (1 - percent)), zIndex: -1} ]\n                    : [\n                        {transform: translate(-30 * percent), zIndex: -1},\n                        {transform: translate(100 * (1 - percent)), zIndex: 0}\n                    ];\n            }\n\n        }\n\n    });\n\n    return Animations;\n\n}\n\nfunction plugin$10(UIkit) {\n\n    if (plugin$10.installed) {\n        return;\n    }\n\n    UIkit.use(plugin$4);\n\n    var mixin = UIkit.mixin;\n    var height = UIkit.util.height;\n\n    var Animations = AnimationsPlugin$2(UIkit);\n\n    UIkit.component('slideshow-parallax', ParallaxPlugin(UIkit, 'slideshow'));\n\n    UIkit.component('slideshow', {\n\n        mixins: [mixin.class, mixin.slideshow, SliderReactive(UIkit)],\n\n        props: {\n            ratio: String,\n            minHeight: Boolean,\n            maxHeight: Boolean,\n        },\n\n        defaults: {\n            ratio: '16:9',\n            minHeight: false,\n            maxHeight: false,\n            selList: '.uk-slideshow-items',\n            attrItem: 'uk-slideshow-item',\n            selNav: '.uk-slideshow-nav',\n            Animations: Animations\n        },\n\n        update: {\n\n            read: function read() {\n\n                var ref = this.ratio.split(':').map(Number);\n                var width = ref[0];\n                var height = ref[1];\n\n                height = height * this.$el.offsetWidth / width;\n\n                if (this.minHeight) {\n                    height = Math.max(this.minHeight, height);\n                }\n\n                if (this.maxHeight) {\n                    height = Math.min(this.maxHeight, height);\n                }\n\n                return {height: height};\n            },\n\n            write: function write(ref) {\n                var hgt = ref.height;\n\n                height(this.list, Math.floor(hgt));\n            },\n\n            events: ['load', 'resize']\n\n        }\n\n    });\n\n}\n\nfunction plugin$11(UIkit) {\n    var obj;\n\n\n    if (plugin$11.installed) {\n        return;\n    }\n\n    var mixin = UIkit.mixin;\n    var util = UIkit.util;\n    var addClass = util.addClass;\n    var after = util.after;\n    var assign = util.assign;\n    var append = util.append;\n    var attr = util.attr;\n    var before = util.before;\n    var closest = util.closest;\n    var css = util.css;\n    var doc = util.doc;\n    var docEl = util.docEl;\n    var height = util.height;\n    var fastdom = util.fastdom;\n    var getPos = util.getPos;\n    var includes = util.includes;\n    var index = util.index;\n    var isInput = util.isInput;\n    var noop = util.noop;\n    var offset = util.offset;\n    var off = util.off;\n    var on = util.on;\n    var pointerDown = util.pointerDown;\n    var pointerMove = util.pointerMove;\n    var pointerUp = util.pointerUp;\n    var position = util.position;\n    var preventClick = util.preventClick;\n    var Promise = util.Promise;\n    var remove = util.remove;\n    var removeClass = util.removeClass;\n    var toggleClass = util.toggleClass;\n    var toNodes = util.toNodes;\n    var Transition = util.Transition;\n    var trigger = util.trigger;\n    var win = util.win;\n    var within = util.within;\n\n    UIkit.component('sortable', {\n\n        mixins: [mixin.class],\n\n        props: {\n            group: String,\n            animation: Number,\n            threshold: Number,\n            clsItem: String,\n            clsPlaceholder: String,\n            clsDrag: String,\n            clsDragState: String,\n            clsBase: String,\n            clsNoDrag: String,\n            clsEmpty: String,\n            clsCustom: String,\n            handle: String\n        },\n\n        defaults: {\n            group: false,\n            animation: 150,\n            threshold: 5,\n            clsItem: 'uk-sortable-item',\n            clsPlaceholder: 'uk-sortable-placeholder',\n            clsDrag: 'uk-sortable-drag',\n            clsDragState: 'uk-drag',\n            clsBase: 'uk-sortable',\n            clsNoDrag: 'uk-sortable-nodrag',\n            clsEmpty: 'uk-sortable-empty',\n            clsCustom: '',\n            handle: false\n        },\n\n        init: function init() {\n            var this$1 = this;\n\n            ['init', 'start', 'move', 'end'].forEach(function (key) {\n                var fn = this$1[key];\n                this$1[key] = function (e) {\n                    this$1.scrollY = win.pageYOffset;\n                    var ref = getPos(e);\n                    var x = ref.x;\n                    var y = ref.y;\n                    this$1.pos = {x: x, y: y};\n\n                    fn(e);\n                };\n            });\n        },\n\n        events: ( obj = {}, obj[pointerDown] = 'init', obj),\n\n        update: {\n\n            write: function write() {\n\n                if (this.clsEmpty) {\n                    toggleClass(this.$el, this.clsEmpty, !this.$el.children.length);\n                }\n\n                if (!this.drag) {\n                    return;\n                }\n\n                offset(this.drag, {top: this.pos.y + this.origin.top, left: this.pos.x + this.origin.left});\n\n                var ref = offset(this.drag);\n                var top = ref.top;\n                var bottom = top + this.drag.offsetHeight;\n                var scroll;\n\n                if (top > 0 && top < this.scrollY) {\n                    scroll = this.scrollY - 5;\n                } else if (bottom < height(doc) && bottom > height(win) + this.scrollY) {\n                    scroll = this.scrollY + 5;\n                }\n\n                scroll && setTimeout(function () { return win.scrollTo(win.scrollX, scroll); }, 5);\n            }\n\n        },\n\n        methods: {\n\n            init: function init(e) {\n\n                var target = e.target;\n                var button = e.button;\n                var defaultPrevented = e.defaultPrevented;\n                var ref = toNodes(this.$el.children).filter(function (el) { return within(target, el); });\n                var placeholder = ref[0];\n\n                if (!placeholder\n                    || isInput(e.target)\n                    || this.handle && !within(target, this.handle)\n                    || button > 0\n                    || within(target, (\".\" + (this.clsNoDrag)))\n                    || defaultPrevented\n                ) {\n                    return;\n                }\n\n                e.preventDefault();\n\n                this.touched = [this];\n                this.placeholder = placeholder;\n                this.origin = assign({target: target, index: index(placeholder)}, this.pos);\n\n                on(docEl, pointerMove, this.move);\n                on(docEl, pointerUp, this.end);\n                on(win, 'scroll', this.scroll);\n\n                if (!this.threshold) {\n                    this.start(e);\n                }\n\n            },\n\n            start: function start(e) {\n\n                this.drag = append(UIkit.container, this.placeholder.outerHTML.replace(/^<li/i, '<div').replace(/li>$/i, 'div>'));\n\n                css(this.drag, assign({\n                    boxSizing: 'border-box',\n                    width: this.placeholder.offsetWidth,\n                    height: this.placeholder.offsetHeight\n                }, css(this.placeholder, ['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom'])));\n                attr(this.drag, 'uk-no-boot', '');\n                addClass(this.drag, this.clsDrag, this.clsCustom);\n\n                height(this.drag.firstElementChild, height(this.placeholder.firstElementChild));\n\n                var ref = offset(this.placeholder);\n                var left = ref.left;\n                var top = ref.top;\n                assign(this.origin, {left: left - this.pos.x, top: top - this.pos.y});\n\n                addClass(this.placeholder, this.clsPlaceholder);\n                addClass(this.$el.children, this.clsItem);\n                addClass(docEl, this.clsDragState);\n\n                trigger(this.$el, 'start', [this, this.placeholder, this.drag]);\n\n                this.move(e);\n            },\n\n            move: function move(e) {\n\n                if (!this.drag) {\n\n                    if (Math.abs(this.pos.x - this.origin.x) > this.threshold || Math.abs(this.pos.y - this.origin.y) > this.threshold) {\n                        this.start(e);\n                    }\n\n                    return;\n                }\n\n                this.$emit();\n\n                var target = e.type === 'mousemove' ? e.target : doc.elementFromPoint(this.pos.x - doc.body.scrollLeft, this.pos.y - doc.body.scrollTop);\n\n                var sortable = getSortable(target);\n                var previous = getSortable(this.placeholder);\n                var move = sortable !== previous;\n\n                if (!sortable || within(target, this.placeholder) || move && (!sortable.group || sortable.group !== previous.group)) {\n                    return;\n                }\n\n                target = sortable.$el === target.parentNode && target || toNodes(sortable.$el.children).filter(function (element) { return within(target, element); })[0];\n\n                if (move) {\n                    previous.remove(this.placeholder);\n                } else if (!target) {\n                    return;\n                }\n\n                sortable.insert(this.placeholder, target);\n\n                if (!includes(this.touched, sortable)) {\n                    this.touched.push(sortable);\n                }\n\n            },\n\n            scroll: function scroll() {\n                var scroll = win.pageYOffset;\n                if (scroll !== this.scrollY) {\n                    this.pos.y += scroll - this.scrollY;\n                    this.scrollY = scroll;\n                    this.$emit();\n                }\n            },\n\n            end: function end(e) {\n\n                off(docEl, pointerMove, this.move);\n                off(docEl, pointerUp, this.end);\n                off(win, 'scroll', this.scroll);\n\n                if (!this.drag) {\n\n                    if (e.type !== 'mouseup' && within(e.target, 'a[href]')) {\n                        location.href = closest(e.target, 'a[href]').href;\n                    }\n\n                    return;\n                }\n\n                preventClick();\n\n                var sortable = getSortable(this.placeholder);\n\n                if (this === sortable) {\n                    if (this.origin.index !== index(this.placeholder)) {\n                        trigger(this.$el, 'moved', [this, this.placeholder]);\n                    }\n                } else {\n                    trigger(sortable.$el, 'added', [sortable, this.placeholder]);\n                    trigger(this.$el, 'removed', [this, this.placeholder]);\n                }\n\n                trigger(this.$el, 'stop', [this]);\n\n                remove(this.drag);\n                this.drag = null;\n\n                var classes = this.touched.map(function (sortable) { return ((sortable.clsPlaceholder) + \" \" + (sortable.clsItem)); }).join(' ');\n                this.touched.forEach(function (sortable) { return removeClass(sortable.$el.children, classes); });\n\n                removeClass(docEl, this.clsDragState);\n\n            },\n\n            insert: function insert(element, target) {\n                var this$1 = this;\n\n\n                addClass(this.$el.children, this.clsItem);\n\n                var insert = function () {\n\n                    if (target) {\n\n                        if (!within(element, this$1.$el) || isPredecessor(element, target)) {\n                            before(target, element);\n                        } else {\n                            after(target, element);\n                        }\n\n                    } else {\n                        append(this$1.$el, element);\n                    }\n\n                };\n\n                if (this.animation) {\n                    this.animate(insert);\n                } else {\n                    insert();\n                }\n\n            },\n\n            remove: function remove$1(element) {\n\n                if (!within(element, this.$el)) {\n                    return;\n                }\n\n                if (this.animation) {\n                    this.animate(function () { return remove(element); });\n                } else {\n                    remove(element);\n                }\n\n            },\n\n            animate: function animate(action) {\n                var this$1 = this;\n\n\n                var props = [];\n                var children = toNodes(this.$el.children);\n                var reset = {position: '', width: '', height: '', pointerEvents: '', top: '', left: '', bottom: '', right: ''};\n\n                children.forEach(function (el) {\n                    props.push(assign({\n                        position: 'absolute',\n                        pointerEvents: 'none',\n                        width: el.offsetWidth,\n                        height: el.offsetHeight\n                    }, position(el)));\n                });\n\n                action();\n\n                children.forEach(Transition.cancel);\n                css(this.$el.children, reset);\n                this.$update('update', true);\n                fastdom.flush();\n\n                css(this.$el, 'minHeight', height(this.$el));\n\n                var positions = children.map(function (el) { return position(el); });\n                Promise.all(children.map(function (el, i) { return Transition.start(css(el, props[i]), positions[i], this$1.animation); }))\n                    .then(function () {\n                        css(this$1.$el, 'minHeight', '');\n                        css(children, reset);\n                        this$1.$update('update', true);\n                        fastdom.flush();\n                    }, noop);\n\n            }\n\n        }\n\n    });\n\n    function getSortable(element) {\n        return element && (UIkit.getComponent(element, 'sortable') || getSortable(element.parentNode));\n    }\n\n    function isPredecessor(element, target) {\n        return element.parentNode === target.parentNode && index(element) > index(target);\n    }\n\n}\n\nfunction plugin$12(UIkit) {\n    var obj;\n\n\n    if (plugin$12.installed) {\n        return;\n    }\n\n    var util = UIkit.util;\n    var mixin = UIkit.mixin;\n    var append = util.append;\n    var attr = util.attr;\n    var doc = util.doc;\n    var flipPosition = util.flipPosition;\n    var hasAttr = util.hasAttr;\n    var includes = util.includes;\n    var isTouch = util.isTouch;\n    var isVisible = util.isVisible;\n    var matches = util.matches;\n    var on = util.on;\n    var pointerDown = util.pointerDown;\n    var pointerEnter = util.pointerEnter;\n    var pointerLeave = util.pointerLeave;\n    var remove = util.remove;\n    var within = util.within;\n\n    var actives = [];\n\n    UIkit.component('tooltip', {\n\n        attrs: true,\n\n        args: 'title',\n\n        mixins: [mixin.container, mixin.togglable, mixin.position],\n\n        props: {\n            delay: Number,\n            title: String\n        },\n\n        defaults: {\n            pos: 'top',\n            title: '',\n            delay: 0,\n            animation: ['uk-animation-scale-up'],\n            duration: 100,\n            cls: 'uk-active',\n            clsPos: 'uk-tooltip'\n        },\n\n        beforeConnect: function beforeConnect() {\n            this._hasTitle = hasAttr(this.$el, 'title');\n            attr(this.$el, {title: '', 'aria-expanded': false});\n        },\n\n        disconnected: function disconnected() {\n            this.hide();\n            attr(this.$el, {title: this._hasTitle ? this.title : null, 'aria-expanded': null});\n        },\n\n        methods: {\n\n            show: function show() {\n                var this$1 = this;\n\n\n                if (includes(actives, this)) {\n                    return;\n                }\n\n                actives.forEach(function (active) { return active.hide(); });\n                actives.push(this);\n\n                this._unbind = on(doc, 'click', function (e) { return !within(e.target, this$1.$el) && this$1.hide(); });\n\n                clearTimeout(this.showTimer);\n\n                this.tooltip = append(this.container, (\"<div class=\\\"\" + (this.clsPos) + \"\\\" aria-hidden><div class=\\\"\" + (this.clsPos) + \"-inner\\\">\" + (this.title) + \"</div></div>\"));\n\n                attr(this.$el, 'aria-expanded', true);\n\n                this.positionAt(this.tooltip, this.$el);\n\n                this.origin = this.getAxis() === 'y' ? ((flipPosition(this.dir)) + \"-\" + (this.align)) : ((this.align) + \"-\" + (flipPosition(this.dir)));\n\n                this.showTimer = setTimeout(function () {\n\n                    this$1.toggleElement(this$1.tooltip, true);\n\n                    this$1.hideTimer = setInterval(function () {\n\n                        if (!isVisible(this$1.$el)) {\n                            this$1.hide();\n                        }\n\n                    }, 150);\n\n                }, this.delay);\n            },\n\n            hide: function hide() {\n\n                var index = actives.indexOf(this);\n\n                if (!~index || matches(this.$el, 'input') && this.$el === doc.activeElement) {\n                    return;\n                }\n\n                actives.splice(index, 1);\n\n                clearTimeout(this.showTimer);\n                clearInterval(this.hideTimer);\n                attr(this.$el, 'aria-expanded', false);\n                this.toggleElement(this.tooltip, false);\n                this.tooltip && remove(this.tooltip);\n                this.tooltip = false;\n                this._unbind();\n\n            }\n\n        },\n\n        events: ( obj = {}, obj[(\"focus \" + pointerEnter + \" \" + pointerDown)] = function (e) {\n                if (e.type !== pointerDown || !isTouch(e)) {\n                    this.show();\n                }\n            }, obj.blur = 'hide', obj[pointerLeave] = function (e) {\n                if (!isTouch(e)) {\n                    this.hide();\n                }\n            }, obj)\n\n    });\n\n}\n\nfunction plugin$13(UIkit) {\n\n    if (plugin$13.installed) {\n        return;\n    }\n\n    var ref = UIkit.util;\n    var addClass = ref.addClass;\n    var ajax = ref.ajax;\n    var matches = ref.matches;\n    var noop = ref.noop;\n    var on = ref.on;\n    var removeClass = ref.removeClass;\n    var trigger = ref.trigger;\n\n    UIkit.component('upload', {\n\n        props: {\n            allow: String,\n            clsDragover: String,\n            concurrent: Number,\n            maxSize: Number,\n            mime: String,\n            msgInvalidMime: String,\n            msgInvalidName: String,\n            msgInvalidSize: String,\n            multiple: Boolean,\n            name: String,\n            params: Object,\n            type: String,\n            url: String,\n        },\n\n        defaults: {\n            allow: false,\n            clsDragover: 'uk-dragover',\n            concurrent: 1,\n            maxSize: 0,\n            mime: false,\n            msgInvalidMime: 'Invalid File Type: %s',\n            msgInvalidName: 'Invalid File Name: %s',\n            msgInvalidSize: 'Invalid File Size: %s Bytes Max',\n            multiple: false,\n            name: 'files[]',\n            params: {},\n            type: 'POST',\n            url: '',\n            abort: noop,\n            beforeAll: noop,\n            beforeSend: noop,\n            complete: noop,\n            completeAll: noop,\n            error: noop,\n            fail: noop,\n            load: noop,\n            loadEnd: noop,\n            loadStart: noop,\n            progress: noop\n        },\n\n        events: {\n\n            change: function change(e) {\n\n                if (!matches(e.target, 'input[type=\"file\"]')) {\n                    return;\n                }\n\n                e.preventDefault();\n\n                if (e.target.files) {\n                    this.upload(e.target.files);\n                }\n\n                e.target.value = '';\n            },\n\n            drop: function drop(e) {\n                stop(e);\n\n                var transfer = e.dataTransfer;\n\n                if (!transfer || !transfer.files) {\n                    return;\n                }\n\n                removeClass(this.$el, this.clsDragover);\n\n                this.upload(transfer.files);\n            },\n\n            dragenter: function dragenter(e) {\n                stop(e);\n            },\n\n            dragover: function dragover(e) {\n                stop(e);\n                addClass(this.$el, this.clsDragover);\n            },\n\n            dragleave: function dragleave(e) {\n                stop(e);\n                removeClass(this.$el, this.clsDragover);\n            }\n\n        },\n\n        methods: {\n\n            upload: function upload(files) {\n                var this$1 = this;\n\n\n                if (!files.length) {\n                    return;\n                }\n\n                trigger(this.$el, 'upload', [files]);\n\n                for (var i = 0; i < files.length; i++) {\n\n                    if (this$1.maxSize && this$1.maxSize * 1000 < files[i].size) {\n                        this$1.fail(this$1.msgInvalidSize.replace('%s', this$1.allow));\n                        return;\n                    }\n\n                    if (this$1.allow && !match(this$1.allow, files[i].name)) {\n                        this$1.fail(this$1.msgInvalidName.replace('%s', this$1.allow));\n                        return;\n                    }\n\n                    if (this$1.mime && !match(this$1.mime, files[i].type)) {\n                        this$1.fail(this$1.msgInvalidMime.replace('%s', this$1.mime));\n                        return;\n                    }\n\n                }\n\n                if (!this.multiple) {\n                    files = [files[0]];\n                }\n\n                this.beforeAll(this, files);\n\n                var chunks = chunk(files, this.concurrent);\n                var upload = function (files) {\n\n                    var data = new FormData();\n\n                    files.forEach(function (file) { return data.append(this$1.name, file); });\n\n                    for (var key in this$1.params) {\n                        data.append(key, this$1.params[key]);\n                    }\n\n                    ajax(this$1.url, {\n                        data: data,\n                        method: this$1.type,\n                        beforeSend: function (env) {\n\n                            var xhr = env.xhr;\n                            xhr.upload && on(xhr.upload, 'progress', this$1.progress);\n                            ['loadStart', 'load', 'loadEnd', 'abort'].forEach(function (type) { return on(xhr, type.toLowerCase(), this$1[type]); }\n                            );\n\n                            this$1.beforeSend(env);\n\n                        }\n                    }).then(\n                        function (xhr) {\n\n                            this$1.complete(xhr);\n\n                            if (chunks.length) {\n                                upload(chunks.shift());\n                            } else {\n                                this$1.completeAll(xhr);\n                            }\n\n                        },\n                        function (e) { return this$1.error(e.message); }\n                    );\n\n                };\n\n                upload(chunks.shift());\n\n            }\n\n        }\n\n    });\n\n    function match(pattern, path) {\n        return path.match(new RegExp((\"^\" + (pattern.replace(/\\//g, '\\\\/').replace(/\\*\\*/g, '(\\\\/[^\\\\/]+)*').replace(/\\*/g, '[^\\\\/]+').replace(/((?!\\\\))\\?/g, '$1.')) + \"$\"), 'i'));\n    }\n\n    function chunk(files, size) {\n        var chunks = [];\n        for (var i = 0; i < files.length; i += size) {\n            var chunk = [];\n            for (var j = 0; j < size; j++) {\n                chunk.push(files[i + j]);\n            }\n            chunks.push(chunk);\n        }\n        return chunks;\n    }\n\n    function stop(e) {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n}\n\nUIkit$2.use(plugin);\nUIkit$2.use(plugin$1);\nUIkit$2.use(plugin$2);\nUIkit$2.use(plugin$6);\nUIkit$2.use(plugin$7);\nUIkit$2.use(plugin$9);\nUIkit$2.use(plugin$10);\nUIkit$2.use(plugin$11);\nUIkit$2.use(plugin$12);\nUIkit$2.use(plugin$13);\n\n{\n    boot(UIkit$2);\n}\n\nreturn UIkit$2;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/uikit/dist/js/uikit.js\n// module id = 1\n// module chunks = 0","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmeidate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-browserify/main.js\n// module id = 2\n// module chunks = 0","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/setimmediate/setImmediate.js\n// module id = 3\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}